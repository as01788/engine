System.register([],(function(e){"use strict";return{execute:function(){e({$:void 0,A:void 0,E:void 0,F:void 0,G:void 0,H:void 0,I:void 0,J:void 0,K:void 0,L:void 0,M:void 0,N:void 0,O:void 0,Q:void 0,S:void 0,T:void 0,U:void 0,V:void 0,W:void 0,X:void 0,Y:void 0,Z:void 0,_:T,a:g,a0:void 0,a1:void 0,a2:void 0,a3:void 0,a4:void 0,a5:void 0,a6:void 0,a7:void 0,a8:void 0,a9:void 0,aa:void 0,ab:void 0,ac:void 0,ad:void 0,ae:void 0,b:C,b7:void 0,bO:ev,bP:function(e,t){for(var n=Object.entries(t),i=!1,o=0;o<n.length;o++)e[n[o][0]]!==n[o][1]&&(e[n[o][0]]=n[o][1],i=!0);return i},bQ:void 0,bS:sv,bU:void 0,bW:void 0,bY:void 0,b_:void 0,bd:Pr,be:wr,bf:Rr,bg:Dr,bh:Or,c:b,c$:qf,c3:eo,c5:zi,c7:no,c9:qi,cA:bi,cB:function(e,t,n){return(n-e)/(t-e)},cC:Pi,cD:function(e,t){return Math.abs(e)>Math.abs(t)?e:t},cE:function(e,t){t.forEach((function(t){Object.defineProperty(e,t,{enumerable:!0})}))},cH:gt,cI:xt,cJ:St,cP:function(e){e>0&&(_i=e)},cQ:void 0,cR:void 0,cS:void 0,cT:Hr,cU:mC,cV:pC,cY:mn,c_:Sn,cc:Qi,cf:ao,ch:co,cj:Ni,cl:function(e,t){return Math.abs(e-t)<=vi*Math.max(1,Math.abs(e),Math.abs(t))},cm:gi,cn:xi,co:function(e){return e<0?0:e>1?1:e},cp:yi,cq:function(e){return e*hi},cr:Ci,ct:Ei,cu:function(e,t){return Math.floor(Ei(e,t))},cv:Ti,cw:Ai,cx:function(e,t,n){return Math.floor(Ai(e,t,n))},cy:function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},cz:Ii,d:w,d$:void 0,d1:function(e){return e[gl]},d2:c_,dK:sI,dS:Bm,dT:ip,dV:void 0,dW:void 0,dX:void 0,dZ:void 0,dc:Rn,du:S,dv:j,dw:V,dx:H,dy:void 0,e:y,e6:void 0,eA:void 0,eC:function(e,t,n,i,o){if(i&&i.enabled&&o===Xv){var a=i.subModels[0],r=a.inputAssembler,c=a.passes,s=a.shaders,l=a.descriptorSet;zv.width=Lv.width=o.window.width,zv.height=Lv.height=o.window.height;var u=Mv.getOrCreatePipelineState(e,c[0],s[0],t,r);n.setViewport(zv),n.setScissor(Lv),n.bindPipelineState(u),n.bindDescriptorSet(Bp.MATERIAL,c[0].descriptorSet),n.bindDescriptorSet(Bp.LOCAL,l),n.bindInputAssembler(r),n.draw(r)}},eG:Fv,eL:ni,eO:E,eP:void 0,eR:void 0,ei:void 0,ej:W,ep:jh,er:oe,es:ie,ev:ql,ew:X,ex:function(e){for(var t=e.length-1;t>=0;--t){var n=e[t];if(n.window.swapchain)return void(Xv=n)}Xv=null},ey:ee,f:N,f$:$,f1:void 0,fA:function(e,t,n){if(e[bf]<1)throw new Error(H(5304,e[bf]));jf(e,!0,t,null!=n?n:qf.reportMissingClass),Vf(e);for(var i=new Wf(e[bf]),o=e[Pf],a=e[wf],r=e[Rf],c=e[Nf],s=e[Df],l=0;l<s.length;++l)s[l].unshift(i,o,a,r,c);return s},fB:function(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]},fC:Au,fF:dd,fH:void 0,fM:Ye,fR:Cu,fU:void 0,f_:function(){},fb:C_,fc:Fe,fi:Tu,fk:xu,fn:Mt,fo:Y,fp:Eu,ft:void 0,fu:Xe,fw:vf,fx:gf,fz:void 0,g:k,g0:Ce,g2:function(e,t){t>=0&&e.length,e.length},g3:function(){},g4:Se,g5:vl,g9:ol,gE:void 0,gM:ut,gS:void 0,gW:Lt,gX:void 0,gY:void 0,gZ:void 0,ga:function(e){return"function"==typeof e.lerp},gb:void 0,gc:void 0,gd:void 0,gf:Ee,gi:void 0,gr:oi,gs:void 0,gt:function(e,t,n,i,o,a){void 0===t&&(t=zo.R32F),void 0===n&&(n=0),void 0===i&&(i=e.byteLength-n),void 0===o&&(o=0),void 0===a&&(a=[]);var r=Er[t];o||(o=r.size);for(var c="get"+EC(r),s=r.size/r.count,l=Math.floor(i/o),u=mf.isLittleEndian,f=0;f<l;++f)for(var _=n+o*f,m=0;m<r.count;++m){var p=_+s*m;a[r.count*f+m]=e[c](p,u)}return a},gu:function(e,t,n,i,o){void 0===n&&(n=zo.R32F),void 0===i&&(i=0),void 0===o&&(o=0);var a=Er[n];o||(o=a.size);for(var r="set"+EC(a),c=a.size/a.count,s=Math.floor(t.length/a.count),l=mf.isLittleEndian,u=0;u<s;++u)for(var f=i+o*u,_=0;_<a.count;++_){var m=f+c*_;e[r](m,t[a.count*u+_],l)}},gv:TC,gy:yl,h0:Dt,h6:function(){var e=new Cm;return e.assignSorted([[0,{interpolationMode:Zl.CUBIC,value:1}],[1,{interpolationMode:Zl.CUBIC,value:1}]]),e},h7:void 0,h8:ti,hb:Ft,hc:Ut,hf:ye,hg:Z,hh:rt,i:qn,j:Vn,k:Yn,m:Wn,n:Xn,o:Kn,p:Qn,q:Jn,r:$n,s:Zn,t:ne,v:void 0,w:x,x:void 0,y:void 0,z:void 0});const t=!0,n=e("eN",!1),i=e("fO",!1),o=e("h3",!1),a=e("h1",!0),r=e("h2",!1);var c="undefined"==typeof window?global:window,s=e("l",{_global:c});s.internal={},c.CC_BUILD=!0,c.CC_TEST=!1,c.CC_EDITOR=n,c.CC_PREVIEW=i,c.CC_DEV=!1,c.CC_DEBUG=!1,c.CC_JSB=r,c.CC_BYTEDANCE=!1,c.CC_WECHAT=t,c.CC_ALIPAY=!1,c.CC_XIAOMI=!1,c.CC_BAIDU=!1,c.CC_COCOSPLAY=!1,c.CC_HUAWEI=!1,c.CC_OPPO=!1,c.CC_VIVO=!1,c.CC_MINIGAME=a,c.CC_RUNTIME_BASED=o,c.CC_SUPPORT_JIT=!1,c.CC_UI_GPU_DRIVEN=!1;var l=e("c0","3.4.0");c.CocosEngine=s.ENGINE_VERSION=l,c.cc=s;var u="https://github.com/cocos-creator/engine/blob/develop/EngineErrorMap.md",f=null,_=console.log.bind(console),m=_,p=_,h=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];console.log("ASSERT: "+v.apply(void 0,[t].concat(i)))}},d=_;function v(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return s.js.formatStr.apply(null,[e].concat(n))}function g(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return _.apply(void 0,[e].concat(n))}function x(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return m.apply(void 0,[e].concat(n))}function y(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return p.apply(void 0,[e].concat(n))}function C(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];return h.apply(void 0,[e,t].concat(i))}function S(){return d.apply(void 0,arguments)}function E(e){if(_=m=p=h=d=function(){},e!==D.NONE){if(e>D.ERROR){var t=function(e){if(s.game.canvas){if(!f){var t=document.createElement("Div");t.setAttribute("id","logInfoDiv"),t.setAttribute("width","200"),t.setAttribute("height",s.game.canvas.height);var n=t.style;n.zIndex="99999",n.position="absolute",n.top=n.left="0",(f=document.createElement("textarea")).setAttribute("rows","20"),f.setAttribute("cols","30"),f.setAttribute("disabled","true");var i=f.style;i.backgroundColor="transparent",i.borderBottom="1px solid #cccccc",i.borderTopWidth=i.borderLeftWidth=i.borderRightWidth="0px",i.borderTopStyle=i.borderLeftStyle=i.borderRightStyle="none",i.padding="0px",i.margin="0px",t.appendChild(f),s.game.canvas.parentNode.appendChild(t)}f.value=f.value+e+"\r\n",f.scrollTop=f.scrollHeight}};p=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("ERROR :  "+v.apply(void 0,[e].concat(i)))},h=function(e,n){if(!e){for(var i=arguments.length,o=new Array(i>2?i-2:0),a=2;a<i;a++)o[a-2]=arguments[a];t("ASSERT: "+v.apply(void 0,[n].concat(o)))}},e!==D.ERROR_FOR_WEB_PAGE&&(m=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("WARN :  "+v.apply(void 0,[e].concat(i)))}),e===D.INFO_FOR_WEB_PAGE&&(_=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t(v.apply(void 0,[e].concat(i)))})}else console&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),p=console.error.bind?console.error.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.error.apply(console,[e].concat(n))},h=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];var a=v.apply(void 0,[t].concat(i));throw new Error(a)}});if(e!==D.ERROR&&(m=console.warn.bind?console.warn.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.warn.apply(console,[e].concat(n))}),e<=D.INFO&&(_=console.log.bind?console.log.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.log.apply(console,[e].concat(n))}),e<=D.VERBOSE&&"function"==typeof console.debug){var n=console.debug.bind(console);d=function(){return n.apply(void 0,arguments)}}}}function T(e){y(e.stack||e)}function A(e){return function(t){for(var n=e+" "+t+", please go to "+u+"#"+t+" to see details.",i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];return 0===o.length?n:n+" Arguments: "+o.join(", ")}}var I=A("Log");function b(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];g(I.apply(void 0,[e].concat(n)))}var P=A("Warning");function w(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];x(P.apply(void 0,[e].concat(n)))}var R=A("Error");function N(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];y(R.apply(void 0,[e].concat(n)))}var D,O,M,z,L,F,U,B,G=A("Assert");function k(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];C(!1,G.apply(void 0,[t].concat(i)))}}function H(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return R.apply(void 0,[e].concat(n))}function j(){return!!s.profiler&&s.profiler.isShowingStats()}function V(e){s.profiler&&(e?s.profiler.showStats():s.profiler.hideStats(),s.game.config.showFPS=!!e)}function q(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function W(e,t,n){return t&&q(e.prototype,t),n&&q(e,n),e}function Y(){return(Y=e("fo",Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e})).apply(this,arguments)}function X(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Q(e,t)}function K(e){return(K=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Q(e,t){return(Q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function J(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function Z(t,n,i){return(Z=J()?e("hg",Reflect.construct):e("hg",(function(e,t,n){var i=[null];i.push.apply(i,t);var o=new(Function.bind.apply(e,i));return n&&Q(o,n.prototype),o}))).apply(null,arguments)}function $(t){var n="function"==typeof Map?new Map:void 0;return($=e("f$",(function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,i)}function i(){return Z(e,arguments,K(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),Q(i,e)})))(t)}function ee(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function ne(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return te(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?te(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function ie(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function oe(e,t,n,i,o){var a={};return Object.keys(i).forEach((function(e){a[e]=i[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}!function(e){e[e.NONE=0]="NONE",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.INFO_FOR_WEB_PAGE=5]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=6]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=7]="ERROR_FOR_WEB_PAGE"}(D||(D=e("dy",{}))),e("h",Object.freeze({__proto__:null,log:g,warn:x,error:y,assert:C,debug:S,_resetDebugSetting:E,_throw:T,logID:b,warnID:w,errorID:N,assertID:k,get DebugMode(){return D},getError:H,isDisplayStats:j,setDisplayStats:V})),function(e){e[e.PORTRAIT=1]="PORTRAIT",e[e.PORTRAIT_UPSIDE_DOWN=2]="PORTRAIT_UPSIDE_DOWN",e[e.LANDSCAPE_LEFT=4]="LANDSCAPE_LEFT",e[e.LANDSCAPE_RIGHT=8]="LANDSCAPE_RIGHT",e[e.LANDSCAPE=12]="LANDSCAPE",e[e.AUTO=13]="AUTO"}(O||(O=e("eR",{})));var ae,re,ce=e("h5",{});ae=ce,re=wx,Object.keys(re).forEach((function(e){"function"!=typeof re[e]?ae[e]=re[e]:ae[e]=re[e].bind(re)})),ce.wx={},ce.wx.onKeyDown=null===(M=wx.onKeyDown)||void 0===M?void 0:M.bind(wx),ce.wx.onKeyUp=null===(z=wx.onKeyUp)||void 0===z?void 0:z.bind(wx),ce.wx.onMouseDown=null===(L=wx.onMouseDown)||void 0===L?void 0:L.bind(wx),ce.wx.onMouseMove=null===(F=wx.onMouseMove)||void 0===F?void 0:F.bind(wx),ce.wx.onMouseUp=null===(U=wx.onMouseUp)||void 0===U?void 0:U.bind(wx),ce.wx.onWheel=null===(B=wx.onWheel)||void 0===B?void 0:B.bind(wx);var se=wx.getSystemInfoSync();ce.testAndUpdateSystemInfoCache=function(e,t){var n=0,i=null;i=setInterval((function(){var t=wx.getSystemInfoSync();se.screenWidth===t.screenWidth&&se.screenHeight===t.screenHeight?++n>=e&&null!==i&&(clearInterval(i),i=null):n=0,se=t}),t)},ce.testAndUpdateSystemInfoCache(10,500),ce.getSystemInfoSync=function(){return se};var le=ce.getSystemInfoSync();ce.isDevTool="devtools"===le.platform,Object.defineProperty(ce,"isLandscape",{get:function(){var e=wx.getSystemInfoSync();return"string"==typeof e.deviceOrientation?e.deviceOrientation.startsWith("landscape"):e.screenWidth>e.screenHeight}});var ue,fe,_e,me,pe=O.LANDSCAPE_RIGHT;if("android"!==le.platform.toLocaleLowerCase()&&wx.onDeviceOrientationChange((function(e){"landscape"===e.value?pe=O.LANDSCAPE_RIGHT:"landscapeReverse"===e.value&&(pe=O.LANDSCAPE_LEFT)})),Object.defineProperty(ce,"orientation",{get:function(){return ce.isLandscape?pe:O.PORTRAIT}}),ce.onAccelerometerChange=function(e){ce.offAccelerometerChange(),ue=function(t){var n=t.x,i=t.y;if(ce.isLandscape){var o=pe===O.LANDSCAPE_RIGHT?1:-1,a=n;n=-i*o,i=a*o}var r={x:n,y:i,z:t.z};e(r)}},ce.offAccelerometerChange=function(){ue&&(wx.offAccelerometerChange(ue),ue=void 0)},ce.startAccelerometer=function(e){ue&&wx.onAccelerometerChange(ue),wx.startAccelerometer(e)},ce.createInnerAudioContext=(fe=wx,_e={onPlay:!0,onPause:!0,onStop:!0,onSeek:!1},void 0===(me=!0)&&(me=!1),function(){var e=fe.createInnerAudioContext();if(_e.onPlay){var t=e.play,n=null;Object.defineProperty(e,"onPlay",{configurable:!0,value:function(e){n=e}}),Object.defineProperty(e,"play",{configurable:!0,value:function(){t.call(e),n&&(me?setTimeout(n,0):n())}})}if(_e.onPause){var i=e.pause,o=null;Object.defineProperty(e,"onPause",{configurable:!0,value:function(e){o=e}}),Object.defineProperty(e,"pause",{configurable:!0,value:function(){i.call(e),o&&(me?setTimeout(o,0):o())}})}if(_e.onStop){var a=e.stop,r=null;Object.defineProperty(e,"onStop",{configurable:!0,value:function(e){r=e}}),Object.defineProperty(e,"stop",{configurable:!0,value:function(){a.call(e),r&&(me?setTimeout(r,0):r())}})}if(_e.onSeek){var c=e.seek,s=null;Object.defineProperty(e,"onSeeked",{configurable:!0,value:function(e){s=e}}),Object.defineProperty(e,"seek",{configurable:!0,value:function(t){c.call(e,t),s&&(me?setTimeout(s,0):s())}})}return e}),ce.getSafeArea=function(){return wx.getSystemInfoSync().safeArea},"windows"===le.platform&&function(e,t){var n=/\d+\.\d+\.\d+/;if(!n.test(e)||!n.test(t))return console.warn("wrong format of version when compare version"),0;for(var i=e.split(".").map((function(e){return Number.parseInt(e)})),o=t.split(".").map((function(e){return Number.parseInt(e)})),a=0;a<3;++a){var r=i[a],c=o[a];if(r!==c)return r-c}return 0}(le.SDKVersion,"2.16.0")<0){var he=canvas;if(he){var de=he.getContext("webgl"),ve=de.useProgram.bind(de);de.useProgram=function(e){e&&ve(e)}}}var ge=e("g6",function(){function e(e){this.i=0,this.array=e}var t=e.prototype;return t.remove=function(e){var t=this.array.indexOf(e);t>=0&&this.removeAt(t)},t.removeAt=function(e){this.array.splice(e,1),e<=this.i&&--this.i},t.fastRemove=function(e){var t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)},t.fastRemoveAt=function(e){var t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i},t.push=function(e){this.array.push(e)},W(e,[{key:"length",get:function(){return this.array.length},set:function(e){this.array.length=e,this.i>=e&&(this.i=e-1)}}]),e}());function xe(e,t){e.splice(t,1)}function ye(e,t){var n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function Ce(e,t){var n=e.indexOf(t);return n>=0&&(xe(e,n),!0)}function Se(e,t){var n=e.findIndex(t);if(n>=0){var i=e[n];return xe(e,n),i}}function Ee(e,t){return e.indexOf(t)>=0}var Te=Object.freeze({__proto__:null,removeAt:xe,fastRemoveAt:ye,remove:Ce,fastRemove:function(e,t){var n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:Se,verifyType:function(e,t){if(e&&e.length>0)for(var n,i=ne(e);!(n=i()).done;)if(!(n.value instanceof t))return b(1300),!1;return!0},removeArray:function(e,t){for(var n=0,i=t.length;n<i;n++)Ce(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0].concat(t)),e},contains:Ee,copy:function(e){for(var t=e.length,n=new Array(t),i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:ge}),Ae=e("fd",function(){function e(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}return e.prototype.getNewId=function(){return this.prefix+ ++this.id},e}());Ae.global=new Ae("global");var Ie=new Ae("TmpCId."),be="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]"),Pe="__cid__";function we(e){return"number"==typeof e||e instanceof Number}function Re(e){return"string"==typeof e||e instanceof String}function Ne(e){for(var t in e)return!1;return!0}var De,Oe=(De={value:void 0,enumerable:!1,writable:!1,configurable:!0},function(e,t,n,i,o){De.value=n,De.writable=i,De.enumerable=o,Object.defineProperty(e,t,De),De.value=void 0}),Me=function(){var e={get:void 0,set:void 0,enumerable:!1};return function(t,n,i,o,a,r){void 0===a&&(a=!1),void 0===r&&(r=!1),"boolean"==typeof o&&(a=o,o=void 0),e.get=i,e.set=o,e.enumerable=a,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}}(),ze=function(){var e={get:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.get=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.get=void 0}}(),Le=function(){var e={set:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.set=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.set=void 0}}();function Fe(e){var t=Object.create(null);return e&&(t["."]=1,t["/"]=1,delete t["."],delete t["/"]),t}function Ue(e){if("function"==typeof e){var t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;var n="";if(e.name&&(n=e.name),e.toString){var i,o=e.toString();(i="["===o.charAt(0)?o.match(/\[\w+\s*(\w+)\]/):o.match(/function\s*(\w+)/))&&2===i.length&&(n=i[1])}return"Object"!==n?n:""}return e&&e.constructor?Ue(e.constructor):""}function Be(e,t,n,i){var o=/([^.]+)$/,a=o.exec(t)[0],r=o.exec(n)[0];function c(){return this[r]}i?Me(e,a,c,(function(e){this[r]=e})):ze(e,a,c)}function Ge(e,t,n,i){for(var o in n)Be(e,t+"."+o,n[o],i)}var ke=/(%d)|(%s)/,He=/%s/;function je(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];if(0===arguments.length)return"";if(0===n.length)return""+e;var o="string"==typeof e&&ke.test(e);if(o)for(var a,r=ne(n);!(a=r()).done;){var c=a.value,s="number"==typeof c?ke:He;if(s.test(e)){var l=""+c;e=e.replace(s,l)}else e+=" "+c}else for(var u,f=ne(n);!(u=f()).done;){var _=u.value;e+=" "+_}return e}function Ve(){for(var e=arguments.length-1,t=new Array(e),n=0;n<e;++n)t[n]=arguments[n+1];return t}function qe(e,t){for(;e;){var n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function We(e,t,n){var i=qe(t,e);i&&Object.defineProperty(n,e,i)}function Ye(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){N(5402,r);continue}for(var c in r)c in e||We(c,r,e)}}return e}function Xe(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){N(5403,r);continue}for(var c in r)We(c,r,e)}}return e}function Ke(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function Qe(e){var t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function Je(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=Qe(e)))return!1;if(e===t)return!0}}return!1}function Ze(e){for(var t=0,n=Object.keys(e);t<n.length;t++)delete e[n[t]]}function $e(e){return"string"!=typeof e||e.startsWith(Ie.prefix)}var et=Fe(!0),tt=Fe(!0);function nt(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],Oe(i.prototype,e,n),n){var o=t[n];o&&o!==i?y("A Class already exists with the same "+e+' : "'+n+'".'):t[n]=i}}}var it=nt("__cid__",et),ot=nt("__classname__",tt);function at(e,t){if(ot(e,t),!t.prototype.hasOwnProperty(Pe)){var n=e||Ie.getNewId();n&&it(n,t)}}function rt(e,t){var n=tt[t],i=et[t],o=!0;if(n&&n!==e&&(y('"'+t+'" has already been set as name or alias of another class.'),o=!1),i&&i!==e&&(y('"'+t+'" has already been set as id or alias of another class.'),o=!1),o){var a=e[be];a||(a=[],e[be]=a),a.push(t),tt[t]=e,et[t]=e}}function ct(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var i=0,o=t;i<o.length;i++){var a=o[i],r=a.prototype,c=r.__cid__;c&&delete et[c];var s=r.__classname__;s&&delete tt[s];var l=r[be];if(l)for(var u=0;u<l.length;++u){var f=l[u];delete tt[f],delete et[f]}}}function st(e){return et[e]}function lt(e){return tt[e]}function ut(e,t){var i;if(t=void 0===t||t,"function"==typeof e&&e.prototype.hasOwnProperty(Pe))return i=e.prototype.__cid__,!t&&n&&$e(i)?"":i;if(e&&e.constructor){var o=e.constructor.prototype;if(o&&o.hasOwnProperty(Pe))return i=e.__cid__,!t&&n&&$e(i)?"":i}return""}var ft=e("gO",function(){var e=t.prototype;function t(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;var n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}return e.get=function(){return this._get()},e._get=function(){if(this.count>0){--this.count;var e=this._pool[this.count];return this._pool[this.count]=null,e}return null},e.put=function(e){var t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}},e.resize=function(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))},t}()),_t=e("fe",Te),mt=e("fj",{IDGenerator:Ae,Pool:ft,array:Te,isNumber:we,isString:Re,isEmptyObject:Ne,getPropertyDescriptor:qe,addon:Ye,mixin:Xe,extend:Ke,getSuper:Qe,isChildClassOf:Je,clear:Ze,value:Oe,getset:Me,get:ze,set:Le,unregisterClass:ct,getClassName:Ue,setClassName:at,setClassAlias:rt,getClassByName:lt,get _registeredClassNames(){return Y({},tt)},set _registeredClassNames(e){Ze(tt),Object.assign(tt,e)},get _registeredClassIds(){return Y({},et)},set _registeredClassIds(e){Ze(et),Object.assign(et,e)},_getClassId:ut,_setClassId:it,_getClassById:st,obsolete:Be,obsoletes:Ge,formatStr:je,shiftArguments:Ve,createMap:Fe});s.js=mt,e("cL",Object.freeze({__proto__:null,array:_t,js:mt,IDGenerator:Ae,Pool:ft,isNumber:we,isString:Re,isEmptyObject:Ne,value:Oe,getset:Me,get:ze,set:Le,createMap:Fe,getClassName:Ue,obsolete:Be,obsoletes:Ge,formatStr:je,shiftArguments:Ve,getPropertyDescriptor:qe,addon:Ye,mixin:Xe,extend:Ke,getSuper:Qe,isChildClassOf:Je,clear:Ze,_idToClass:et,_nameToClass:tt,_setClassId:it,setClassName:at,setClassAlias:rt,unregisterClass:ct,_getClassById:st,getClassByName:lt,_getClassId:ut}));var pt=function(){function e(){this._pools=[],this._lastShrinkPassed=0,this.shrinkTimeSpan=5}var t=e.prototype;return t.addContainer=function(e){-1===e._poolHandle&&(e._poolHandle=this._pools.length,this._pools.push(e))},t.removeContainer=function(e){-1!==e._poolHandle&&(this._pools[this._pools.length-1]._poolHandle=e._poolHandle,mt.array.fastRemoveAt(this._pools,e._poolHandle),e._poolHandle=-1)},t.tryShrink=function(){for(var e=0;e<this._pools.length;e++)this._pools[e].tryShrink()},t.update=function(e){this._lastShrinkPassed+=e,this._lastShrinkPassed>this.shrinkTimeSpan&&(this.tryShrink(),this._lastShrinkPassed-=this.shrinkTimeSpan)},e}(),ht=e("ff",new pt),dt=e("gV",function(){function e(){this._poolHandle=-1,ht.addContainer(this)}return e.prototype.destroy=function(){ht.removeContainer(this)},e}()),vt=e("P",function(e){function t(t,n,i){var o;(o=e.call(this)||this)._ctor=void 0,o._elementsPerBatch=void 0,o._nextAvail=void 0,o._freepool=[],o._dtor=void 0,o._ctor=t,o._dtor=i||null,o._elementsPerBatch=Math.max(n,1),o._nextAvail=o._elementsPerBatch-1;for(var a=0;a<o._elementsPerBatch;++a)o._freepool.push(t());return o}X(t,e);var n=t.prototype;return n.alloc=function(){if(this._nextAvail<0){this._freepool.length=this._elementsPerBatch;for(var e=0;e<this._elementsPerBatch;e++)this._freepool[e]=this._ctor();this._nextAvail=this._elementsPerBatch-1}return this._freepool[this._nextAvail--]},n.free=function(e){this._freepool[++this._nextAvail]=e},n.freeArray=function(e){this._freepool.length=this._nextAvail+1,Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length},n.tryShrink=function(){if(this._nextAvail>>1>this._elementsPerBatch){if(this._dtor)for(var e=this._nextAvail>>1;e<=this._nextAvail;e++)this._dtor(this._freepool[e]);this._freepool.length=this._nextAvail>>1,this._nextAvail=this._freepool.length-1}},n.destroy=function(){var t=arguments.length>0?arguments[0]:null;t&&w(14100);var n=t||this._dtor;if(n)for(var i=0;i<=this._nextAvail;i++)n(this._freepool[i]);this._freepool.length=0,this._nextAvail=-1,e.prototype.destroy.call(this)},t}(dt));function gt(e){if("__bitmask__"in e)return e;Oe(e,"__bitmask__",null,!0);for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Oe(e,r,o)}return e}function xt(e){return"__enums__"in e?e:(Oe(e,"__enums__",null,!0),xt.update(e))}function yt(e){e.hasOwnProperty("__enums__")}function Ct(e){yt(e);var t=e.__enums__||[];for(var n in t.length=0,e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),e.__enums__=t,t}function St(e){"__enums__"in e||Oe(e,"__enums__",null,!0)}e("R",function(e){function t(t,n,i){var o;(o=e.call(this)||this)._fn=void 0,o._dtor=null,o._count=0,o._data=void 0,o._initSize=0,o._fn=t,o._dtor=i||null,o._data=new Array(n),o._initSize=n;for(var a=0;a<n;++a)o._data[a]=t();return o}X(t,e);var n=t.prototype;return n.reset=function(){this._count=0},n.resize=function(e){if(e>this._data.length)for(var t=this._data.length;t<e;++t)this._data[t]=this._fn()},n.add=function(){return this._count>=this._data.length&&this.resize(this._data.length<<1),this._data[this._count++]},n.destroy=function(){if(this._dtor)for(var t=0;t<this._data.length;t++)this._dtor(this._data[t]);this._data.length=0,this._count=0,e.prototype.destroy.call(this)},n.tryShrink=function(){if(this._data.length>>2>this._count){var e=Math.max(this._initSize,this._data.length>>1);if(this._dtor)for(var t=e;t<this._data.length;t++)this._dtor(this._data[t]);this._data.length=e}},n.removeAt=function(e){if(!(e>=this._count)){var t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}},W(t,[{key:"length",get:function(){return this._count}},{key:"data",get:function(){return this._data}}]),t}(dt)),e("C",function(e){function t(t,n){var i;return(i=e.call(this)||this).array=void 0,i.length=0,i._compareFn=void 0,i._initSize=0,i.array=new Array(t),i._initSize=t,i.length=0,i._compareFn=void 0!==n?n:function(e,t){return e-t},i}X(t,e);var n=t.prototype;return n.push=function(e){this.array[this.length++]=e},n.pop=function(){return this.array[--this.length]},n.get=function(e){return this.array[e]},n.clear=function(){this.length=0},n.destroy=function(){this.length=0,this.array.length=0,e.prototype.destroy.call(this)},n.tryShrink=function(){this.array.length>>2>this.length&&(this.array.length=Math.max(this._initSize,this.array.length>>1))},n.sort=function(){this.array.length=this.length,this.array.sort(this._compareFn)},n.concat=function(e){for(var t=0;t<e.length;++t)this.array[this.length++]=e[t]},n.fastRemove=function(e){if(!(e>=this.length||e<0)){var t=--this.length;this.array[e]=this.array[t]}},n.indexOf=function(e){for(var t=0,n=this.length;t<n;++t)if(this.array[t]===e)return t;return-1},t}(dt)),gt.isBitMask=function(e){return e&&e.hasOwnProperty("__bitmask__")},gt.getList=function(e){if(e.__bitmask__)return e.__bitmask__;var t=e.__bitmask__=[];for(var n in e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),t},s.BitMask=gt,xt.update=function(e){for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Oe(e,r,o)}return Array.isArray(e.__enums__)&&Ct(e),e},xt||(xt=e("cI",{})),xt.isEnum=function(e){return e&&e.hasOwnProperty("__enums__")},xt.getList=function(e){return yt(e),e.__enums__?e.__enums__:Ct(e)},s.Enum=xt;var Et=e("cK",function(){function e(){}var t=e.prototype;return t.clone=function(){return N(100,Ue(this)+".clone"),this},t.equals=function(){return!1},t.set=function(){N(100,Ue(this)+".set")},t.toString=function(){return""+{}},e}());at("cc.ValueType",Et),s.ValueType=Et;var Tt=e("dB",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,ENABLE_ANTIALIAS_FXAA:!1,ENABLE_BLOOM:!1,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20});s.macro=Tt;for(var At=/^(?:cc|dragonBones|sp|ccsg)\..+/,It=new Array(123),bt=0;bt<123;++bt)It[bt]=64;for(var Pt=0;Pt<64;++Pt)It["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(Pt)]=Pt;var wt=It;function Rt(e,t,n){function i(e,t,n,i){var o=Object.getOwnPropertyDescriptor(e,t);if(o)o.get&&(e[n]=o.get),o.set&&i&&(e[i]=o.set);else{var a=e[n];Me(e,t,a,e[i])}}for(var o,a=e.prototype,r=0;r<t.length;r++){var c=(o=t[r])[0].toUpperCase()+o.slice(1);i(a,o,"get"+c,"set"+c)}for(o in n){var s=n[o];i(a,o,s[0],s[1])}}function Nt(e,t,n,i){var o=e[t];o?Array.isArray(o)?i?(o.push(o[0]),o[0]=n):o.push(n):e[t]=i?[n,o]:[o,n]:e[t]=n}function Dt(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));var n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}function Ot(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function Mt(e,t,n){e&&setTimeout((function(){e(t,n)}),0)}function zt(e){return!(!e||e.constructor!==Object)&&Ne(e)}function Lt(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e<n?e:n}function Ft(e){return e*Tt.RAD}function Ut(e){return e*Tt.DEG}s.misc={BUILTIN_CLASSID_RE:At,BASE64_VALUES:wt,propertyDefine:Rt,pushToMap:Nt,contains:Dt,isDomNode:Ot,callInNextTick:Mt,isPlainEmptyObj_DEV:zt,clampf:Lt,degreesToRadians:Ft,radiansToDegrees:Ut},e("cM",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:At,BASE64_VALUES:wt,propertyDefine:Rt,pushToMap:Nt,contains:Dt,isDomNode:Ot,callInNextTick:Mt,tryCatchFunctor_EDITOR:function(e){return Function("target","try {\n  target."+e+"();\n}\ncatch (e) {\n  cc._throw(e);\n}")},isPlainEmptyObj_DEV:zt,clampf:Lt,degreesToRadians:Ft,radiansToDegrees:Ut}));var Bt="$_$";function Gt(e,t){var n=t?Object.create(t):{};return Oe(e,"__attrs__",n),n}function kt(e){if("function"!=typeof e)return Gt(e,jt(e.constructor));for(var t,n=s.Class.getInheritanceChain(e),i=n.length-1;i>=0;i--){var o=n[i];o.hasOwnProperty("__attrs__")&&o.__attrs__||Gt(o,(t=n[i+1])&&t.__attrs__)}return Gt(e,(t=n[0])&&t.__attrs__),e.__attrs__}function Ht(e,t){var n=jt(e),i=t+Bt,o={};for(var a in n)a.startsWith(i)&&(o[a.slice(i.length)]=n[a]);return o}function jt(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||kt(e)}function Vt(e,t,n,i){jt(e)[t+Bt+n]=i}var qt=function(){function e(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}return e.prototype.toString=function(){return this.name},e}(),Wt=e("d3",new qt("Integer",0));s.Integer=Wt,s.CCInteger=Wt;var Yt=e("d4",new qt("Float",0));s.Float=Yt,s.CCFloat=Yt;var Xt=e("d5",new qt("Boolean",!1));s.Boolean=Xt,s.CCBoolean=Xt;var Kt=e("d6",new qt("String",""));function Qt(e,t){return function(n,i){var o='"'+Ue(n)+"."+i+'"',a=Ht(n,i),r=a.type;if(r===Wt||r===Yt?r="Number":r!==Kt&&r!==Xt||(r=""+r),r===e){if(a.hasOwnProperty("default")){var c=a.default;if(void 0!==c&&!Array.isArray(c)&&!zt(c)){var s=typeof c,l=e.toLowerCase();if(s===l)if("object"===l){if(!c||c instanceof a.ctor)return;w(3605,o,Ue(a.ctor))}else"Number"!==e&&w(3606,t,o,e);else{if("function"===s)return;e===Kt.default&&null==c?w(3607,o):w(3611,t,o,s)}delete a.type}}}else w(3604,o)}}s.String=Kt,s.CCString=Kt;var Jt=Object.freeze({__proto__:null,DELIMETER:Bt,createAttrsSingle:Gt,createAttrs:kt,attr:Ht,getClassAttrs:jt,setClassAttr:Vt,PrimitiveType:qt,CCInteger:Wt,CCFloat:Yt,CCBoolean:Xt,CCString:Kt,getTypeChecker_ET:Qt,getObjTypeChecker_ET:function(e){return function(t,n){Qt("Object","type")(t,n);var i=jt(t)[n+Bt+"default"],o=s.Class.getDefault(i);if(!Array.isArray(o)&&Je(e,s.ValueType)){var a=Ue(e),r=je('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',Ue(t),n,a);i?g(r):w(3612,r,a,Ue(t),n,a)}}}}),Zt={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function $t(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){var o="_N$"+t;e.get=function(){return this[o]},e.set=function(e){var t=this[o];this[o]=e,n.call(this,t)};var a={};for(var r in i[o]=a,Zt){var c=Zt[r];e.hasOwnProperty(r)&&(a[r]=e[r],c.canUsedInGet||delete e[r])}}}function en(e,t,n,i){if(Array.isArray(t)){if(!(t.length>0))return N(5508,n,i);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=s.String:t===Boolean?e.type=s.Boolean:t===Number&&(e.type=s.Float))}function tn(e,t,n){var i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function nn(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return tn(t,[],e);if("function"==typeof e){var n=e;return tn(t,Je(n,s.ValueType)?new n:null,n)}return tn(t,e instanceof qt?e.default:e)}return null}var on=[];function an(){return on[on.length-1]}s._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),on.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){var e=on.pop(),t=e.module,n=t.exports;if(n===e.exports){for(var i in n)return;t.exports=n=e.cls}},peek:an};var rn=Bt,cn={datas:null,push:function(e){if(this.datas)this.datas.push(e);else{this.datas=[e];var t=this;setTimeout((function(){t.init()}),0)}},init:function(){var e=this.datas;if(e){for(var t=0;t<e.length;++t){var n=e[t],i=n.cls,o=n.props;"function"==typeof o&&(o=o());var a=Ue(i);o?_n(i,a,o,i.$super,n.mixins):N(3633,a)}this.datas=null}}};function sn(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),hn(e,i,t,n)}function ln(e,t,n,i){var o=i.get;i.set,o&&(hn(e,i,t,n),Vt(e,n,"serializable",!1))}function un(e){return"function"==typeof e?e():e}function fn(e,t,n){for(var i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,qe(t,i))}function _n(e,t,n,i,o){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),o)for(var a=0;a<o.length;++a){var r=o[a];r.__props__&&(e.__props__=e.__props__.concat(r.__props__.filter((function(t){return e.__props__.indexOf(t)<0}))))}if(n)for(var c in function(e,t){for(var n in e){var i=e[n],o=nn(i,!1);if(o&&(i=e[n]=o),i){var a=i.notify;a&&$t(i,n,a,e),"type"in i&&en(i,i.type,t,n)}}}(n,t),n){var s=n[c];s.get||s.set?ln(e,t,c,s):sn(e,t,c,s)}var l=jt(e);e.__values__=e.__props__.filter((function(e){return!1!==l[e+rn+"serializable"]}))}function mn(e){var t=e.name,n=e.extends,i=e.mixins,o=function(e,t,n,i){var o=s.Component,a=an();if(a&&Je(t,o)){if(Je(a.cls,o))return N(3615),null;e=e||a.script}var r=function(e,t,n,i){var o=i.ctor,a=[o],r=o;Oe(r,"__ctors__",a.length>0?a:null,!0);var c=r.prototype;if(t&&(r.$super=t),n){for(var s=n.length-1;s>=0;s--){var l=n[s];fn(c,l.prototype),mn._isCCClass(l)&&fn(jt(r),jt(l))}c.constructor=r}return at(e,r),r}(e,t,n,i);if(a)if(Je(t,o)){var c=a.uuid;c&&it(c,r),a.cls=r}else Je(a.cls,o)||(a.cls=r);return r}(t,n,i,e);t||(t=s.js.getClassName(o)),o._sealed=!0,n&&(n._sealed=!1);var a=e.properties;"function"==typeof a||n&&null===n.__props__||i&&i.some((function(e){return null===e.__props__}))?(cn.push({cls:o,props:a,mixins:i}),o.__props__=o.__values__=null):_n(o,t,a,n,e.mixins);var r=e.editor;return r&&Je(n,s.Component)&&s.Component._registerEditorProps(o,r),o}mn._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},mn.fastDefine=function(e,t,n){at(e,t);for(var i=t.__props__=t.__values__=Object.keys(n),o=jt(t),a=0;a<i.length;a++){var r=i[a];o[r+rn+"visible"]=!1,o[r+rn+"default"]=n[r]}},mn.Attr=Jt,mn.attr=Ht,mn.getInheritanceChain=function(e){for(var t=[];e=Qe(e);)e!==Object&&t.push(e);return t};var pn={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function hn(e,t,n,i){var o=null,a="";function r(){return a=i+rn,o=jt(e)}"type"in t&&void 0===t.type&&w(3660,i,n);var c=t.type;c&&(pn[c]?(o||r())[a+"type"]=c:"Object"===c||("object"==typeof c?xt.isEnum(c)?((o||r())[a+"type"]="Enum",o[a+"enumList"]=xt.getList(c)):gt.isBitMask(c)&&((o||r())[a+"type"]="BitMask",o[a+"bitmaskList"]=gt.getList(c)):"function"==typeof c&&((o||r())[a+"type"]="Object",o[a+"ctor"]=c))),"default"in t&&((o||r())[a+"default"]=t.default);var s,l=function(e,n){if(e in t){var i=t[e];typeof i===n&&((o||r())[a+e]=i)}};t.editorOnly&&((o||r())[a+"editorOnly"]=!0),t.__noImplicit?(o||r())[a+"serializable"]=null!==(s=t.serializable)&&void 0!==s&&s:!1===t.serializable&&((o||r())[a+"serializable"]=!1),l("formerlySerializedAs","string");var u=t.range;u&&Array.isArray(u)&&u.length>=2&&((o||r())[a+"min"]=u[0],o[a+"max"]=u[1],u.length>2&&(o[a+"step"]=u[2])),l("min","number"),l("max","number"),l("step","number")}mn.isArray=function(e){return e=un(e),Array.isArray(e)},mn.getDefault=un,mn.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},mn.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,mn.getNewValueTypeCode=!1,s.Class=mn;var dn,vn=e("d8","__editorExtras__"),gn=1<<22,xn=[],yn=e("cZ",function(){function e(e){void 0===e&&(e=""),this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}e._deferredDestroy=function(){for(var e=xn.length,t=0;t<e;++t){var n=xn[t];1&n._objFlags||n._destroyImmediate()}e===xn.length?xn.length=0:xn.splice(0,e)};var t=e.prototype;return t.destroy=function(){return 1&this._objFlags?(w(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,xn.push(this),0))},t._destruct=function(){var e=this.constructor,t=e.__destruct__;t||(t=function(e,t){var n,i=e instanceof s._BaseNode||e instanceof s.Component,o=i?"_id":null,a={};for(n in e)if(e.hasOwnProperty(n)){if(n===o)continue;switch(typeof e[n]){case"string":a[n]="";break;case"object":case"function":a[n]=null}}if(mn._isCCClass(t))for(var r=s.Class.Attr.getClassAttrs(t),c=t.__props__,l=0;l<c.length;l++){var u=(n=c[l])+s.Class.Attr.DELIMETER+"default";if(u in r){if(i&&"_id"===n)continue;switch(typeof r[u]){case"string":a[n]="";break;case"object":case"function":a[n]=null;break;case"undefined":a[n]=void 0}}}return function(e){for(var t in a)e[t]=a[t]}}(this,e),Oe(e,"__destruct__",t,!0)),t(this)},t._destroyImmediate=function(){1&this._objFlags?N(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)},W(e,[{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"hideFlags",get:function(){return this._objFlags&e.Flags.AllHideMasks},set:function(t){var n=t&e.Flags.AllHideMasks;this._objFlags=this._objFlags&~e.Flags.AllHideMasks|n}},{key:"replicated",get:function(){return!!(this._objFlags&gn)},set:function(e){e?this._objFlags|=gn:this._objFlags&=-4194305}},{key:"isValid",get:function(){return!(1&this._objFlags)}}]),e}()),Cn=yn.prototype;function Sn(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}Cn._deserialize=null,Cn._onPreDestroy=null,mn.fastDefine("cc.Object",yn,((dn={_name:"",_objFlags:0})[vn]={},dn)),mn.Attr.setClassAttr(yn,vn,"editorOnly",!0),mn.Attr.setClassAttr(yn,"replicated","visible",!1),Oe(yn,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,AllHideMasks:1560,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),s.isValid=Sn,s.Object=yn;var En=_t.fastRemoveAt;function Tn(){}var An=function(){function e(){this.callback=Tn,this.target=void 0,this.once=!1}var t=e.prototype;return t.set=function(e,t,n){this.callback=e||Tn,this.target=t,this.once=!!n},t.reset=function(){this.target=void 0,this.callback=Tn,this.once=!1},t.check=function(){return!(this.target instanceof yn&&!Sn(this.target,!0))},e}(),In=new vt((function(){return new An}),32),bn=function(){function e(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}var t=e.prototype;return t.removeByCallback=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),In.free(n),En(this.callbackInfos,t),--t)}},t.removeByTarget=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),In.free(n),En(this.callbackInfos,t),--t)}},t.cancel=function(e){var t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:En(this.callbackInfos,e),In.free(t)),this.containCanceled=!0},t.cancelAll=function(){for(var e=0;e<this.callbackInfos.length;e++){var t=this.callbackInfos[e];t&&(t.reset(),In.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0},t.purgeCanceled=function(){for(var e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||En(this.callbackInfos,e);this.containCanceled=!1},t.clear=function(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1},e}(),Pn=new vt((function(){return new bn}),16),wn=function(){function e(){this._callbackTable=Fe(!0),this._offCallback=void 0}var t=e.prototype;return t.on=function(e,t,n,i){if(!this.hasEventListener(e,t,n)){var o=this._callbackTable[e];o||(o=this._callbackTable[e]=Pn.alloc());var a=In.alloc();a.set(t,n,i),o.callbackInfos.push(a)}return t},t.hasEventListener=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;var o=i.callbackInfos;if(!t){if(i.isInvoking){for(var a=0;a<o.length;++a)if(o[a])return!0;return!1}return o.length>0}for(var r=0;r<o.length;++r){var c=o[r];if(c&&c.check()&&c.callback===t&&c.target===n)return!0}return!1},t.removeAll=function(e){var t=typeof e;if("string"===t||"number"===t){var n=this._callbackTable&&this._callbackTable[e];n&&(n.isInvoking?n.cancelAll():(n.clear(),Pn.free(n),delete this._callbackTable[e]))}else if(e)for(var i in this._callbackTable){var o=this._callbackTable[i];if(o.isInvoking)for(var a=o.callbackInfos,r=0;r<a.length;++r){var c=a[r];c&&c.target===e&&o.cancel(r)}else o.removeByTarget(e)}},t.off=function(e,t,n){var i,o=this._callbackTable&&this._callbackTable[e];if(o){var a=o.callbackInfos;if(t)for(var r=0;r<a.length;++r){var c=a[r];if(c&&c.callback===t&&c.target===n){o.cancel(r);break}}else this.removeAll(e)}null===(i=this._offCallback)||void 0===i||i.call(this)},t.emit=function(e,t,n,i,o,a){var r=this._callbackTable&&this._callbackTable[e];if(r){var c=!r.isInvoking;r.isInvoking=!0;for(var s=r.callbackInfos,l=0,u=s.length;l<u;++l){var f=s[l];if(f){var _=f.callback,m=f.target;f.once&&this.off(e,_,m),f.check()?m?_.call(m,t,n,i,o,a):_(t,n,i,o,a):this.off(e,_,m)}}c&&(r.isInvoking=!1,r.containCanceled&&r.purgeCanceled())}},t.clear=function(){for(var e in this._callbackTable){var t=this._callbackTable[e];t&&(t.clear(),Pn.free(t),delete this._callbackTable[e])}},t._registerOffCallback=function(e){this._offCallback=e},e}();function Rn(e){for(var t=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._callbackTable=Fe(!0),t}X(t,e);var n=t.prototype;return n.once=function(e,t,n){return this.on(e,t,n,!0)},n.targetOff=function(e){this.removeAll(e)},t}(e),n=wn.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n)),o=0;o<i.length;++o){var a=i[o];if(!(a in t.prototype)){var r=Object.getOwnPropertyDescriptor(n,a);r&&Object.defineProperty(t.prototype,a,r)}}return t}var Nn,Dn,On,Mn,zn,Ln,Fn,Un=e("db",Rn((function(){})));s.EventTarget=Un,function(e){e.UNKNOWN="unknown",e.WECHAT="wechat",e.ANDROID="androidbrowser",e.IE="ie",e.EDGE="edge",e.QQ="qqbrowser",e.MOBILE_QQ="mqqbrowser",e.UC="ucbrowser",e.UCBS="ucbs",e.BROWSER_360="360browser",e.BAIDU_APP="baiduboxapp",e.BAIDU="baidubrowser",e.MAXTHON="maxthon",e.OPERA="opera",e.OUPENG="oupeng",e.MIUI="miuibrowser",e.FIREFOX="firefox",e.SAFARI="safari",e.CHROME="chrome",e.LIEBAO="liebao",e.QZONE="qzone",e.SOUGOU="sogou",e.HUAWEI="huawei"}(Nn||(Nn=e("eP",{}))),function(e){e.UNKNOWN="unknown",e.ENGLISH="en",e.CHINESE="zh",e.FRENCH="fr",e.ITALIAN="it",e.GERMAN="de",e.SPANISH="es",e.DUTCH="du",e.RUSSIAN="ru",e.KOREAN="ko",e.JAPANESE="ja",e.HUNGARIAN="hu",e.PORTUGUESE="pt",e.ARABIC="ar",e.NORWEGIAN="no",e.POLISH="pl",e.TURKISH="tr",e.UKRAINIAN="uk",e.ROMANIAN="ro",e.BULGARIAN="bg"}(Dn||(Dn={})),function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}(On||(On={})),function(e){e.UNKNOWN="Unknown",e.IOS="iOS",e.ANDROID="Android",e.WINDOWS="Windows",e.LINUX="Linux",e.OSX="OS X",e.OHOS="OHOS"}(Mn||(Mn=e("gs",{}))),function(e){e.UNKNOWN="UNKNOWN",e.EDITOR_PAGE="EDITOR_PAGE",e.EDITOR_CORE="EDITOR_CORE",e.MOBILE_BROWSER="MOBILE_BROWSER",e.DESKTOP_BROWSER="DESKTOP_BROWSER",e.WIN32="WIN32",e.ANDROID="ANDROID",e.IOS="IOS",e.MACOS="MACOS",e.OHOS="OHOS",e.WECHAT_GAME="WECHAT_GAME",e.BAIDU_MINI_GAME="BAIDU_MINI_GAME",e.XIAOMI_QUICK_GAME="XIAOMI_QUICK_GAME",e.ALIPAY_MINI_GAME="ALIPAY_MINI_GAME",e.BYTEDANCE_MINI_GAME="BYTEDANCE_MINI_GAME",e.OPPO_MINI_GAME="OPPO_MINI_GAME",e.VIVO_MINI_GAME="VIVO_MINI_GAME",e.HUAWEI_QUICK_GAME="HUAWEI_QUICK_GAME",e.COCOSPLAY="COCOSPLAY",e.LINKSURE_MINI_GAME="LINKSURE_MINI_GAME",e.QTT_MINI_GAME="QTT_MINI_GAME"}(zn||(zn={})),function(e){e.WEBP="WEBP",e.IMAGE_BITMAP="IMAGE_BITMAP",e.WEB_VIEW="WEB_VIEW",e.VIDEO_PLAYER="VIDEO_PLAYER",e.SAFE_AREA="SAFE_AREA",e.INPUT_TOUCH="INPUT_TOUCH",e.EVENT_KEYBOARD="EVENT_KEYBOARD",e.EVENT_MOUSE="EVENT_MOUSE",e.EVENT_TOUCH="EVENT_TOUCH",e.EVENT_ACCELEROMETER="EVENT_ACCELEROMETER"}(Ln||(Ln={})),Fn=zn.WECHAT_GAME;var Bn=function(e){function n(){var n,i;(i=e.call(this)||this).networkType=void 0,i.isNative=void 0,i.isBrowser=void 0,i.isMobile=void 0,i.isLittleEndian=void 0,i.platform=void 0,i.language=void 0,i.nativeLanguage=void 0,i.os=void 0,i.osVersion=void 0,i.osMainVersion=void 0,i.browserType=void 0,i.browserVersion=void 0,i._featureMap=void 0;var o,a=ce.getSystemInfoSync();i.networkType=On.LAN,i.isNative=!1,i.isBrowser=!1,i.isLittleEndian=(o=new ArrayBuffer(2),new DataView(o).setInt16(0,256,!0),256===new Int16Array(o)[0]),i.nativeLanguage=a.language,i.language=a.language.substr(0,2);var r=a.platform.toLocaleLowerCase();i.os="android"===r?Mn.ANDROID:"ios"===r?Mn.IOS:"windows"===r?Mn.WINDOWS:Mn.UNKNOWN;var c=a.system.toLowerCase();"android p"===c&&(c="android p 9.0");var s=/[\d.]+/.exec(c);i.osVersion=s?s[0]:c,i.osMainVersion=parseInt(i.osVersion),i.platform=Fn,i.isMobile=i.os!==Mn.WINDOWS,i.browserType=Nn.UNKNOWN,i.browserVersion="";var l,u=document.createElement("canvas");try{l=u.toDataURL("image/webp").startsWith("data:image/webp")}catch(e){l=!1}var f=i.os===Mn.WINDOWS&&!ce.isDevTool;return i._featureMap=((n={})[Ln.WEBP]=l,n[Ln.IMAGE_BITMAP]=!1,n[Ln.WEB_VIEW]=!1,n[Ln.VIDEO_PLAYER]=t,n[Ln.SAFE_AREA]=t,n[Ln.INPUT_TOUCH]=!f,n[Ln.EVENT_KEYBOARD]=f,n[Ln.EVENT_MOUSE]=f,n[Ln.EVENT_TOUCH]=!0,n[Ln.EVENT_ACCELEROMETER]=!f,n),i._registerEvent(),i}X(n,e);var i=n.prototype;return i._registerEvent=function(){var e=this;ce.onHide((function(){e.emit("hide")})),ce.onShow((function(){e.emit("show")}))},i.hasFeature=function(e){return this._featureMap[e]},i.getBatteryLevel=function(){return ce.getBatteryInfoSync().level/100},i.triggerGC=function(){ce.triggerGC()},i.openURL=function(){},i.now=function(){return Date.now?Date.now():+new Date},i.restartJSVM=function(){},i.close=function(){},n}(Un),Gn=e("eK",new Bn),kn=/(\.[^\.\/\?\\]*)(\?.*)?$/,Hn=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,jn=/[^\.\/]+\/\.\.\//;function Vn(){for(var e="",t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];e=(e+(""===e?"":"/")+r).replace(/(\/|\\\\)$/,"")}return e}function qn(e){var t=kn.exec(e);return t?t[1]:""}function Wn(e){if(e){var t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function Yn(e,t){var n=e.indexOf("?");n>0&&(e=e.substring(0,n));var i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;var o=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?o.substring(0,o.length-t.length):o}function Xn(e){var t=Hn.exec(e);return t?t[2]:""}function Kn(e,t){t=t||"";var n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),(n=e.lastIndexOf("."))<0?e+t+i:e.substring(0,n)+t+i}function Qn(e,t,n){if(0===t.indexOf("."))return Kn(e,t);var i=e.indexOf("?"),o="",a=n?qn(e):"";return i>0&&(o=e.substring(i),e=e.substring(0,i)),i=(i=e.lastIndexOf("/"))<=0?0:i+1,e.substring(0,i)+t+a+o}function Jn(e){var t=e=String(e);do{t=e,e=e.replace(jn,"")}while(t.length!==e.length);return e}function Zn(e){return e.replace(/[\/\\]$/,"")}function $n(){return Gn.os===Mn.WINDOWS?"\\":"/"}e("cN",Object.freeze({__proto__:null,join:Vn,extname:qn,mainFileName:Wn,basename:Yn,dirname:Xn,changeExtname:Kn,changeBasename:Qn,_normalize:Jn,stripSep:Zn,getSeperator:$n}));var ei=e("ha",2147483647);function ti(e){return(e>0)-(e<0)}function ni(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1}function ii(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function oi(e){return--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}var ai=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,i=t,o=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--o;e[t]=i<<o&255}}(ai),e("c1",Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:ei,INT_MIN:-2147483648,sign:ti,abs:function(e){var t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:ni,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},countTrailingZeros:ii,nextPow2:oi,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return ai[255&e]<<24|ai[e>>>8&255]<<16|ai[e>>>16&255]<<8|ai[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>ii(e)+1}}));var ri,ci,si,li,ui,fi,_i=10,mi=0,pi=new Map;li=function(e,t,n,i,o,a,r){var c=pi.get(a);c&&c.logTimes>c.count&&(o("'%s' is deprecated, please use '%s' instead. "+r,e+"."+t,n+"."+i),c.count++)},ri=e("cQ",(function(e,t,n){null!=e&&n.forEach((function(n){var i=mi++;pi.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:_i});var o=null!=n.target?n.target:e,a=null!=n.newName?n.newName:n.name,r=null!=n.targetName?n.targetName:t,c=o===e,s=n.suggest?"("+n.suggest+")":"";if(null!=n.customFunction)e[n.name]=function(){var e;return li(t,n.name,r,a,x,i,s),(e=n.customFunction).call.apply(e,[this].concat(Array.prototype.slice.call(arguments)))};else if(null!=n.customSetter||null!=n.customGetter){var l=null!=n.customSetter,u=null!=n.customGetter;l&&u?Object.defineProperty(e,n.name,{get:function(){return li(t,n.name,r,a,x,i,s),n.customGetter.call(this)},set:function(e){li(t,n.name,r,a,x,i,s),n.customSetter.call(this,e)},enumerable:!1}):l?Object.defineProperty(e,n.name,{set:function(e){li(t,n.name,r,a,x,i,s),n.customSetter.call(this,e)},enumerable:!1}):u&&Object.defineProperty(e,n.name,{get:function(){return li(t,n.name,r,a,x,i,s),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get:function(){return li(t,n.name,r,a,x,i,s),c?this[a]:o[a]},set:function(e){li(t,n.name,r,a,x,i,s),c?this[a]=e:o[a]=e},enumerable:!1})}))})),fi=function(e,t,n,i,o){var a=pi.get(i);a&&a.logTimes>a.count&&(n("'%s' has been removed. "+o,e+"."+t),a.count++)},ci=e("cR",(function(e,t,n){null!=e&&n.forEach((function(n){var i=mi++;pi.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:_i});var o=n.suggest?"("+n.suggest+")":"";Object.defineProperty(e,n.name,{get:function(){return fi(t,n.name,y,i,o)},set:function(){fi(t,n.name,y,i,o)},enumerable:!1})}))})),ui=function(e,t,n,i,o){var a=pi.get(i);a&&a.logTimes>a.count&&(n("'%s' is deprecated. "+o,e+"."+t),a.count++)},si=e("cS",(function(e,t,n){null!=e&&n.forEach((function(n){var i=n.name,o=Object.getOwnPropertyDescriptor(e,i);if(o&&o.configurable){var a=mi++;pi.set(a,{id:a,count:0,logTimes:void 0!==n.logTimes?n.logTimes:_i});var r=n.suggest?"("+n.suggest+")":"";if(void 0!==o.value)if("function"==typeof o.value){var c=o.value;e[i]=function(){return ui(t,i,x,a,r),c.call.apply(c,[this].concat(Array.prototype.slice.call(arguments)))}}else{var s=o.value;Object.defineProperty(e,i,{configurable:!0,get:function(){return ui(t,i,x,a,r),s}}),o.writable&&Object.defineProperty(e,i,{set:function(e){ui(t,i,x,a,r),s=e}})}else!function(t,n,i,o,a,r){if(t.get){var c=t.get;t.get=function(){return ui(n,i,o,a,r),c.call(this)}}if(t.set){var s=t.set;t.set=function(e){ui(n,i,o,a,r),s.call(this,e)}}Object.defineProperty(e,i,t)}(o,t,i,x,a,r);Object.defineProperty(e,i,{enumerable:!1})}}))}));var hi=Math.PI/180,di=180/Math.PI,vi=e("ck",1e-6);function gi(e,t,n){return n=n||vi,Math.abs(e-t)<=n}function xi(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e>n?n:e}function yi(e,t,n){return e+(t-e)*n}function Ci(e){return e*di}var Si=e("cs",Math.random);function Ei(e,t){return Math.random()*(t-e)+e}function Ti(e){return(e=(9301*e+49297)%233280)/233280}function Ai(e,t,n){return Ti(e)*(n-t)+t}function Ii(e,t){return e-Math.floor(e/t)*t}function bi(e,t){return e=Ii(e,2*t),t-Math.abs(e-t)}function Pi(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z}var wi=1/255,Ri=e("ci",function(e){function t(t,n,i,o){var a;return(a=e.call(this)||this)._val=0,"string"==typeof t?a.fromHEX(t):void 0!==n?a.set(t,n,i,o):a.set(t),a}X(t,e),t.clone=function(e){var n=new t;return e._val?n._val=e._val:n._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,n},t.copy=function(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e},t.set=function(e,t,n,i,o){return e.r=t,e.g=n,e.b=i,e.a=o,e},t.fromHEX=function(e,t){return t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0,e.a=parseInt(t.substr(6,2),16),e.a=Number.isNaN(e.a)?255:e.a,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e},t.add=function(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e},t.subtract=function(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e},t.multiply=function(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e},t.divide=function(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e},t.scale=function(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e},t.lerp=function(e,t,n,i){var o=t.r,a=t.g,r=t.b,c=t.a;return o+=(n.r-o)*i,a+=(n.g-a)*i,r+=(n.b-r)*i,c+=(n.a-c)*i,e._val=Math.floor((c<<24>>>0)+(r<<16)+(a<<8)+o),e},t.toArray=function(e,n,i){void 0===i&&(i=0);var o=n instanceof t||n.a>1?1/255:1;return e[i+0]=n.r*o,e[i+1]=n.g*o,e[i+2]=n.b*o,e[i+3]=n.a*o,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t},t.strictEquals=function(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))},t.hex=function(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0};var n=t.prototype;return n.clone=function(){var e=new t;return e._val=this._val,e},n.equals=function(e){return e&&this._val===e._val},n.lerp=function(e,t){var n=this.r,i=this.g,o=this.b,a=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,o+=(e.b-o)*t,a+=(e.a-a)*t,this._val=Math.floor((a<<24>>>0)+(o<<16)+(i<<8)+n),this},n.toString=function(){return"rgba("+this.r.toFixed()+", "+this.g.toFixed()+", "+this.b.toFixed()+", "+this.a.toFixed()+")"},n.toCSS=function(e){return void 0===e&&(e="rgba"),"rgba"===e?"rgba("+this.r+","+this.g+","+this.b+","+(this.a*wi).toFixed(2)+")":"rgb"===e?"rgb("+this.r+","+this.g+","+this.b+")":"#"+this.toHEX(e)},n.fromHEX=function(e){e=0===e.indexOf("#")?e.substring(1):e;var t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0,o=parseInt(e.substr(6,2),16);return o=Number.isNaN(o)?255:o,this._val=(o<<24>>>0)+(i<<16)+(n<<8)+(0|t),this},n.toHEX=function(e){void 0===e&&(e="#rrggbb");var t="0",n=[(this.r<16?t:"")+this.r.toString(16),(this.g<16?t:"")+this.g.toString(16),(this.b<16?t:"")+this.b.toString(16)];return"#rgb"===e?(n[0]=n[0][0],n[1]=n[1][0],n[2]=n[2][0]):"#rrggbbaa"===e&&n.push((this.a<16?t:"")+this.a.toString(16)),n.join("")},n.toRGBValue=function(){return 16777215&this._val},n.fromHSV=function(e,t,n){var i=0,o=0,a=0;if(0===t)i=o=a=n;else if(0===n)i=o=a=0;else{1===e&&(e=0),e*=6;var r=Math.floor(e),c=e-r,s=n*(1-t),l=n*(1-t*c),u=n*(1-t*(1-c));switch(r){case 0:i=n,o=u,a=s;break;case 1:i=l,o=n,a=s;break;case 2:i=s,o=n,a=u;break;case 3:i=s,o=l,a=n;break;case 4:i=u,o=s,a=n;break;case 5:i=n,o=s,a=l}}return i*=255,o*=255,a*=255,this._val=(this.a<<24>>>0)+(a<<16)+(o<<8)+(0|i),this},n.toHSV=function(){var e=this.r*wi,t=this.g*wi,n=this.b*wi,i={h:0,s:0,v:0},o=Math.max(e,t,n),a=Math.min(e,t,n),r=0;return i.v=o,i.s=o?(o-a)/o:0,i.s?(r=o-a,i.h=e===o?(t-n)/r:t===o?2+(n-e)/r:4+(e-t)/r,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i},n.set=function(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this},n.multiply=function(e){var t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,o=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&o|16711680&i|65280&n|255&t,this},n._set_r_unsafe=function(e){return this._val=(4294967040&this._val|e)>>>0,this},n._set_g_unsafe=function(e){return this._val=(4294902015&this._val|e<<8)>>>0,this},n._set_b_unsafe=function(e){return this._val=(4278255615&this._val|e<<16)>>>0,this},n._set_a_unsafe=function(e){return this._val=(16777215&this._val|e<<24)>>>0,this},W(t,[{key:"r",get:function(){return 255&this._val},set:function(e){e=~~xi(e,0,255),this._val=(4294967040&this._val|e)>>>0}},{key:"g",get:function(){return(65280&this._val)>>8},set:function(e){e=~~xi(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}},{key:"b",get:function(){return(16711680&this._val)>>16},set:function(e){e=~~xi(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}},{key:"a",get:function(){return(4278190080&this._val)>>>24},set:function(e){e=~~xi(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}},{key:"x",get:function(){return this.r*wi},set:function(e){this.r=255*e}},{key:"y",get:function(){return this.g*wi},set:function(e){this.g=255*e}},{key:"z",get:function(){return this.b*wi},set:function(e){this.b=255*e}},{key:"w",get:function(){return this.a*wi},set:function(e){this.a=255*e}}]),t}(Et));function Ni(e,t,n,i){return new Ri(e,t,n,i)}Ri.WHITE=Object.freeze(new Ri(255,255,255,255)),Ri.GRAY=Object.freeze(new Ri(127,127,127,255)),Ri.BLACK=Object.freeze(new Ri(0,0,0,255)),Ri.TRANSPARENT=Object.freeze(new Ri(0,0,0,0)),Ri.RED=Object.freeze(new Ri(255,0,0,255)),Ri.GREEN=Object.freeze(new Ri(0,255,0,255)),Ri.BLUE=Object.freeze(new Ri(0,0,255,255)),Ri.CYAN=Object.freeze(new Ri(0,255,255,255)),Ri.MAGENTA=Object.freeze(new Ri(255,0,255,255)),Ri.YELLOW=Object.freeze(new Ri(255,255,0,255)),mn.fastDefine("cc.Color",Ri,{r:0,g:0,b:0,a:255}),s.Color=Ri,s.color=Ni;var Di=e("c4",function(e){function t(t,n,i){var o;return o=e.call(this)||this,t&&"object"==typeof t?(o.x=t.x,o.y=t.y,o.z=t.z):(o.x=t||0,o.y=n||0,o.z=i||0),o}X(t,e),t.zero=function(e){return e.x=0,e.y=0,e.z=0,e},t.clone=function(e){return new t(e.x,e.y,e.z)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e},t.set=function(e,t,n,i){return e.x=t,e.y=n,e.z=i,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return Math.sqrt(n*n+i*i+o*o)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return n*n+i*i+o*o},t.len=function(e){var t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e},t.invert=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e},t.invertSafe=function(e,t){var n=t.x,i=t.y,o=t.z;return Math.abs(n)<vi?e.x=0:e.x=1/n,Math.abs(i)<vi?e.y=0:e.y=1/i,Math.abs(o)<vi?e.z=0:e.z=1/o,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=n*n+i*i+o*o;return a>0&&(a=1/Math.sqrt(a),e.x=n*a,e.y=i*a,e.z=o*a),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},t.cross=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,c=n.y,s=n.z;return e.x=o*s-a*c,e.y=a*r-i*s,e.z=i*c-o*r,e},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e},t.random=function(e,t){t=t||1;var n=2*Si()*Math.PI,i=2*Si()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a+n.m15;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a+n.m12)*r,e.y=(n.m01*i+n.m05*o+n.m09*a+n.m13)*r,e.z=(n.m02*i+n.m06*o+n.m10*a+n.m14)*r,e},t.transformMat4Normal=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a)*r,e.y=(n.m01*i+n.m05*o+n.m09*a)*r,e.z=(n.m02*i+n.m06*o+n.m10*a)*r,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=i*n.m00+o*n.m03+a*n.m06,e.y=i*n.m01+o*n.m04+a*n.m07,e.z=i*n.m02+o*n.m05+a*n.m08,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13,e.x=n.m02*i+n.m06*o+n.m10*a+n.m14,e},t.transformQuat=function(e,t,n){var i=n.w*t.x+n.y*t.z-n.z*t.y,o=n.w*t.y+n.z*t.x-n.x*t.z,a=n.w*t.z+n.x*t.y-n.y*t.x,r=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+r*-n.x+o*-n.z-a*-n.y,e.y=o*n.w+r*-n.y+a*-n.x-i*-n.z,e.z=a*n.w+r*-n.z+i*-n.y-o*-n.x,e},t.transformRTS=function(e,t,n,i,o){var a=t.x*o.x,r=t.y*o.y,c=t.z*o.z,s=n.w*a+n.y*c-n.z*r,l=n.w*r+n.z*a-n.x*c,u=n.w*c+n.x*r-n.y*a,f=-n.x*a-n.y*r-n.z*c;return e.x=s*n.w+f*-n.x+l*-n.z-u*-n.y+i.x,e.y=l*n.w+f*-n.y+u*-n.x-s*-n.z+i.y,e.z=u*n.w+f*-n.z+s*-n.y-l*-n.x+i.z,e},t.transformInverseRTS=function(e,t,n,i,o){var a=t.x-i.x,r=t.y-i.y,c=t.z-i.z,s=n.w*a-n.y*c+n.z*r,l=n.w*r-n.z*a+n.x*c,u=n.w*c-n.x*r+n.y*a,f=n.x*a+n.y*r+n.z*c;return e.x=(s*n.w+f*n.x+l*n.z-u*n.y)/o.x,e.y=(l*n.w+f*n.y+u*n.x-s*n.z)/o.y,e.z=(u*n.w+f*n.z+s*n.y-l*n.x)/o.z,e},t.rotateX=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,c=Math.cos(i),s=Math.sin(i),l=o,u=a*c-r*s,f=a*s+r*c;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.rotateY=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,c=Math.cos(i),s=Math.sin(i),l=r*s+o*c,u=a,f=r*c-o*s;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.rotateZ=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,c=Math.cos(i),s=Math.sin(i),l=o*c-a*s,u=o*s+a*c,f=r;return e.x=l+n.x,e.y=u+n.y,e.z=f+n.z,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z},t.equals=function(e,t,n){void 0===n&&(n=vi);var i=e.x,o=e.y,a=e.z,r=t.x,c=t.y,s=t.z;return Math.abs(i-r)<=n*Math.max(1,Math.abs(i),Math.abs(r))&&Math.abs(o-c)<=n*Math.max(1,Math.abs(o),Math.abs(c))&&Math.abs(a-s)<=n*Math.max(1,Math.abs(a),Math.abs(s))},t.angle=function(e,n){t.normalize(Oi,e),t.normalize(Mi,n);var i=t.dot(Oi,Mi);return i>1?0:i<-1?Math.PI:Math.acos(i)},t.projectOnPlane=function(e,n,i){return t.subtract(e,n,t.project(e,n,i))},t.project=function(e,n,i){var o=t.lengthSqr(i);return o<1e-6?t.set(e,0,0,0):t.multiplyScalar(e,i,t.dot(n,i)/o)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z)},n.set=function(e,t,n){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z):(this.x=e||0,this.y=t||0,this.z=n||0),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))},n.equals3f=function(e,t,n,i){return void 0===i&&(i=vi),Math.abs(this.x-e)<=i*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=i*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=i*Math.max(1,Math.abs(this.z),Math.abs(n))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z},n.strictEquals3f=function(e,t,n){return this.x===e&&this.y===t&&this.z===n},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+")"},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},n.add3f=function(e,t,n){return this.x+=e,this.y+=t,this.z+=n,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},n.subtract3f=function(e,t,n){return this.x-=e,this.y-=t,this.z-=n,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this},n.multiply3f=function(e,t,n){return this.x*=e,this.y*=t,this.z*=n,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},n.divide3f=function(e,t,n){return this.x/=e,this.y/=t,this.z/=n,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},n.clampf=function(e,t){return this.x=xi(this.x,e.x,t.x),this.y=xi(this.y,e.y,t.y),this.z=xi(this.z,e.z,t.z),this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this.x=e*i,this.y=t*i,this.z=n*i),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=e.m03*t+e.m07*n+e.m11*i+e.m15;return o=o?1/o:1,this.x=(e.m00*t+e.m04*n+e.m08*i+e.m12)*o,this.y=(e.m01*t+e.m05*n+e.m09*i+e.m13)*o,this.z=(e.m02*t+e.m06*n+e.m10*i+e.m14)*o,this},t}(Et));Di.UNIT_X=Object.freeze(new Di(1,0,0)),Di.UNIT_Y=Object.freeze(new Di(0,1,0)),Di.UNIT_Z=Object.freeze(new Di(0,0,1)),Di.RIGHT=Object.freeze(new Di(1,0,0)),Di.UP=Object.freeze(new Di(0,1,0)),Di.FORWARD=Object.freeze(new Di(0,0,-1)),Di.ZERO=Object.freeze(new Di(0,0,0)),Di.ONE=Object.freeze(new Di(1,1,1)),Di.NEG_ONE=Object.freeze(new Di(-1,-1,-1));var Oi=new Di,Mi=new Di;function zi(e,t,n){return new Di(e,t,n)}mn.fastDefine("cc.Vec3",Di,{x:0,y:0,z:0}),s.Vec3=Di,s.v3=zi;var Li=e("ca",function(e){function t(t,n,i,o,a,r,c,s,l){var u;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=1),u=e.call(this)||this,"object"==typeof t?(u.m00=t.m00,u.m01=t.m01,u.m02=t.m02,u.m03=t.m03,u.m04=t.m04,u.m05=t.m05,u.m06=t.m06,u.m07=t.m07,u.m08=t.m08):(u.m00=t,u.m01=n,u.m02=i,u.m03=o,u.m04=a,u.m05=r,u.m06=c,u.m07=s,u.m08=l),u}X(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.set=function(e,t,n,i,o,a,r,c,s,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=c,e.m07=s,e.m08=l,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=o}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,c=t.m05,s=t.m06,l=t.m07,u=t.m08,f=u*r-c*l,_=-u*a+c*s,m=l*a-r*s,p=n*f+i*_+o*m;return 0===p?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(p=1/p,e.m00=f*p,e.m01=(-u*i+o*l)*p,e.m02=(c*i-o*r)*p,e.m03=_*p,e.m04=(u*n-o*s)*p,e.m05=(-c*n+o*a)*p,e.m06=m*p,e.m07=(-l*n+i*s)*p,e.m08=(r*n-i*a)*p,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,c=e.m06,s=e.m07,l=e.m08;return t*(l*a-r*s)+n*(-l*o+r*c)+i*(s*o-a*c)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,c=t.m04,s=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.m00,m=n.m01,p=n.m02,h=n.m03,d=n.m04,v=n.m05,g=n.m06,x=n.m07,y=n.m08;return e.m00=_*i+m*r+p*l,e.m01=_*o+m*c+p*u,e.m02=_*a+m*s+p*f,e.m03=h*i+d*r+v*l,e.m04=h*o+d*c+v*u,e.m05=h*a+d*s+v*f,e.m06=g*i+x*r+y*l,e.m07=g*o+x*c+y*u,e.m08=g*a+x*s+y*f,e},t.multiplyMat4=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,c=t.m04,s=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.m00,m=n.m01,p=n.m02,h=n.m04,d=n.m05,v=n.m06,g=n.m08,x=n.m09,y=n.m10;return e.m00=_*i+m*r+p*l,e.m01=_*o+m*c+p*u,e.m02=_*a+m*s+p*f,e.m03=h*i+d*r+v*l,e.m04=h*o+d*c+v*u,e.m05=h*a+d*s+v*f,e.m06=g*i+x*r+y*l,e.m07=g*o+x*c+y*u,e.m08=g*a+x*s+y*f,e},t.transform=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,c=t.m04,s=t.m05,l=t.m06,u=t.m07,f=t.m08,_=n.x,m=n.y;return e.m00=i,e.m01=o,e.m02=a,e.m03=r,e.m04=c,e.m05=s,e.m06=_*i+m*r+l,e.m07=_*o+m*c+u,e.m08=_*a+m*s+f,e},t.scale=function(e,t,n){var i=n.x,o=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=o*t.m03,e.m04=o*t.m04,e.m05=o*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.rotate=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,c=t.m04,s=t.m05,l=t.m06,u=t.m07,f=t.m08,_=Math.sin(n),m=Math.cos(n);return e.m00=m*i+_*r,e.m01=m*o+_*c,e.m02=m*a+_*s,e.m03=m*r-_*i,e.m04=m*c-_*o,e.m05=m*s-_*a,e.m06=l,e.m07=u,e.m08=f,e},t.fromMat4=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e},t.fromViewUp=function(e,n,i){return Di.lengthSqr(n)<vi*vi?(t.identity(e),e):(i=i||Di.UNIT_Y,Di.normalize(Fi,Di.cross(Fi,i,n)),Di.lengthSqr(Fi)<vi*vi?(t.identity(e),e):(Di.cross(Ui,n,Fi),t.set(e,Fi.x,Fi.y,Fi.z,Ui.x,Ui.y,Ui.z,n.x,n.y,n.z),e))},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,c=i+i,s=o+o,l=n*r,u=i*r,f=i*c,_=o*r,m=o*c,p=o*s,h=a*r,d=a*c,v=a*s;return e.m00=1-f-p,e.m03=u-v,e.m06=_+d,e.m01=u+v,e.m04=1-l-p,e.m07=m-h,e.m02=_-d,e.m05=m+h,e.m08=1-l-f,e},t.inverseTransposeMat4=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,c=t.m05,s=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*c-i*r,x=n*s-o*r,y=n*l-a*r,C=i*s-o*c,S=i*l-a*c,E=o*l-a*s,T=u*h-f*p,A=u*d-_*p,I=u*v-m*p,b=f*d-_*h,P=f*v-m*h,w=_*v-m*d,R=g*w-x*P+y*b+C*I-S*A+E*T;return R?(R=1/R,e.m00=(c*w-s*P+l*b)*R,e.m01=(s*I-r*w-l*A)*R,e.m02=(r*P-c*I+l*T)*R,e.m03=(o*P-i*w-a*b)*R,e.m04=(n*w-o*I+a*A)*R,e.m05=(i*I-n*P-a*T)*R,e.m06=(h*E-d*S+v*C)*R,e.m07=(d*y-p*E-v*x)*R,e.m08=(p*S-h*y+v*g)*R,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))};var n=t.prototype;return n.clone=function(){var e=this;return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},n.set=function(e,t,n,i,o,a,r,c,s){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=1),"object"==typeof e?(this.m00=e.m00,this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08):(this.m00=e,this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=c,this.m08=s),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08},n.toString=function(){var e=this;return"[\n"+e.m00+", "+e.m01+", "+e.m02+",\n"+e.m03+",\n"+e.m04+", "+e.m05+",\n"+e.m06+", "+e.m07+",\n"+e.m08+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=1,this.m05=0,this.m06=0,this.m07=0,this.m08=1,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m05;return this.m01=this.m03,this.m02=this.m06,this.m03=e,this.m05=this.m07,this.m06=t,this.m07=n,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,c=this.m07,s=this.m08,l=s*o-a*c,u=-s*i+a*r,f=c*i-o*r,_=e*l+t*u+n*f;return 0===_?(this.set(0,0,0,0,0,0,0,0,0),this):(_=1/_,this.m00=l*_,this.m01=(-s*t+n*c)*_,this.m02=(a*t-n*o)*_,this.m03=u*_,this.m04=(s*e-n*r)*_,this.m05=(-a*e+n*i)*_,this.m06=f*_,this.m07=(-c*e+t*r)*_,this.m08=(o*e-t*i)*_,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,c=this.m07,s=this.m08;return e*(s*o-a*c)+t*(-s*i+a*r)+n*(c*i-o*r)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,c=this.m06,s=this.m07,l=this.m08,u=e.m00,f=e.m01,_=e.m02,m=e.m03,p=e.m04,h=e.m05,d=e.m06,v=e.m07,g=e.m08;return this.m00=u*t+f*o+_*c,this.m01=u*n+f*a+_*s,this.m02=u*i+f*r+_*l,this.m03=m*t+p*o+h*c,this.m04=m*n+p*a+h*s,this.m05=m*i+p*r+h*l,this.m06=d*t+v*o+g*c,this.m07=d*n+v*a+g*s,this.m08=d*i+v*r+g*l,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this},n.scale=function(e){var t=e.x,n=e.y;return this.m00=t*this.m00,this.m01=t*this.m01,this.m02=t*this.m02,this.m03=n*this.m03,this.m04=n*this.m04,this.m05=n*this.m05,this.m06=this.m06,this.m07=this.m07,this.m08=this.m08,this},n.rotate=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,c=this.m06,s=this.m07,l=this.m08,u=Math.sin(e),f=Math.cos(e);return this.m00=f*t+u*o,this.m01=f*n+u*a,this.m02=f*i+u*r,this.m03=f*o-u*t,this.m04=f*a-u*n,this.m05=f*r-u*i,this.m06=c,this.m07=s,this.m08=l,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,c=i+i,s=t*a,l=n*a,u=n*r,f=i*a,_=i*r,m=i*c,p=o*a,h=o*r,d=o*c;return this.m00=1-u-m,this.m03=l-d,this.m06=f+h,this.m01=l+d,this.m04=1-s-m,this.m07=_-p,this.m02=f-h,this.m05=_+p,this.m08=1-s-u,this},t}(Et));Li.IDENTITY=Object.freeze(new Li);var Fi=new Di,Ui=new Di;mn.fastDefine("cc.Mat3",Li,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),s.Mat3=Li;var Bi=e("c8",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=null!=o?o:1),a}X(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.identity=function(e){return e.x=0,e.y=0,e.z=0,e.w=1,e},t.rotationTo=function(e,n,i){var o=Di.dot(n,i);return o<-.999999?(Di.cross(Hi,Di.UNIT_X,n),Hi.length()<1e-6&&Di.cross(Hi,Di.UNIT_Y,n),Di.normalize(Hi,Hi),t.fromAxisAngle(e,Hi,Math.PI),e):o>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(Di.cross(Hi,n,i),e.x=Hi.x,e.y=Hi.y,e.z=Hi.z,e.w=1+o,t.normalize(e,e))},t.getAxisAngle=function(e,t){var n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n},t.multiply=function(e,t,n){var i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,o=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,a=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,r=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=o,e.z=a,e.w=r,e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.rotateX=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,c=t.z,s=t.w;return e.x=a*o+s*i,e.y=r*o+c*i,e.z=c*o-r*i,e.w=s*o-a*i,e},t.rotateY=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,c=t.z,s=t.w;return e.x=a*o-c*i,e.y=r*o+s*i,e.z=c*o+a*i,e.w=s*o-r*i,e},t.rotateZ=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,c=t.z,s=t.w;return e.x=a*o+r*i,e.y=r*o-a*i,e.z=c*o+s*i,e.w=s*o-c*i,e},t.rotateAround=function(e,n,i,o){return t.invert(Gi,n),Di.transformQuat(Hi,i,Gi),t.fromAxisAngle(Gi,Hi,o),t.multiply(e,n,Gi),e},t.rotateAroundLocal=function(e,n,i,o){return t.fromAxisAngle(Gi,i,o),t.multiply(e,n,Gi),e},t.calculateW=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.slerp=function(e,t,n,i){var o=0,a=0,r=n.x,c=n.y,s=n.z,l=n.w,u=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(u<0&&(u=-u,r=-r,c=-c,s=-s,l=-l),1-u>1e-6){var f=Math.acos(u),_=Math.sin(f);o=Math.sin((1-i)*f)/_,a=Math.sin(i*f)/_}else o=1-i,a=i;return e.x=o*t.x+a*r,e.y=o*t.y+a*c,e.z=o*t.z+a*s,e.w=o*t.w+a*l,e},t.sqlerp=function(e,n,i,o,a,r){return t.slerp(Gi,n,a,r),t.slerp(ki,i,o,r),t.slerp(e,Gi,ki,2*r*(1-r)),e},t.invert=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e},t.conjugate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e},t.len=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)},t.lengthSqr=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},t.normalize=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e},t.fromAxes=function(e,n,i,o){return Li.set(ji,n.x,n.y,n.z,i.x,i.y,i.z,o.x,o.y,o.z),t.normalize(e,t.fromMat3(e,ji))},t.fromViewUp=function(e,n,i){return Li.fromViewUp(ji,n,i),t.normalize(e,t.fromMat3(e,ji))},t.fromAxisAngle=function(e,t,n){n*=.5;var i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e},t.fromMat3=function(e,t){var n=t.m00,i=t.m03,o=t.m06,a=t.m01,r=t.m04,c=t.m07,s=t.m02,l=t.m05,u=t.m08,f=n+r+u;if(f>0){var _=.5/Math.sqrt(f+1);e.w=.25/_,e.x=(l-c)*_,e.y=(o-s)*_,e.z=(a-i)*_}else if(n>r&&n>u){var m=2*Math.sqrt(1+n-r-u);e.w=(l-c)/m,e.x=.25*m,e.y=(i+a)/m,e.z=(o+s)/m}else if(r>u){var p=2*Math.sqrt(1+r-n-u);e.w=(o-s)/p,e.x=(i+a)/p,e.y=.25*p,e.z=(c+l)/p}else{var h=2*Math.sqrt(1+u-n-r);e.w=(a-i)/h,e.x=(o+s)/h,e.y=(c+l)/h,e.z=.25*h}return e},t.fromEuler=function(e,t,n,i){t*=Vi,n*=Vi,i*=Vi;var o=Math.sin(t),a=Math.cos(t),r=Math.sin(n),c=Math.cos(n),s=Math.sin(i),l=Math.cos(i);return e.x=o*c*l+a*r*s,e.y=a*r*l+o*c*s,e.z=a*c*s-o*r*l,e.w=a*c*l-o*r*s,e},t.fromAngleZ=function(e,t){return t*=Vi,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e},t.toAxisX=function(e,t){var n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e},t.toAxisY=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=i*t.x-o*t.w,e.y=1-n*t.x-o*t.z,e.z=o*t.y+n*t.w,e},t.toAxisZ=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=o*t.x-i*t.w,e.y=o*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e},t.toEuler=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,c=0,s=0,l=0,u=i*o+a*r;if(u>.499999)c=0,s=Ci(2*Math.atan2(i,r)),l=90;else if(u<-.499999)c=0,s=-Ci(2*Math.atan2(i,r)),l=-90;else{var f=i*i,_=o*o,m=a*a;c=Ci(Math.atan2(2*i*r-2*o*a,1-2*f-2*m)),s=Ci(Math.atan2(2*o*r-2*i*a,1-2*_-2*m)),l=Ci(Math.asin(2*u)),n&&(c=-180*Math.sign(c+1e-6)+c,s=-180*Math.sign(s+1e-6)+s,l=180*Math.sign(l+1e-6)-l)}return e.x=c,e.y=s,e.z=l,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=null!=i?i:1),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.getEulerAngles=function(e){return t.toEuler(e,this)},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this.w+=t*(e.w-this.w),this},n.slerp=function(e,n){return t.slerp(this,this,e,n)},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t}(Et));Bi.IDENTITY=Object.freeze(new Bi);var Gi=new Bi,ki=new Bi,Hi=new Di,ji=new Li,Vi=.5*Math.PI/180;function qi(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),new Bi(e,t,n,i)}mn.fastDefine("cc.Quat",Bi,{x:0,y:0,z:0,w:1}),s.Quat=Bi,s.quat=qi;var Wi=e("gh",Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])])),Yi=e("cb",function(e){function t(t,n,i,o,a,r,c,s,l,u,f,_,m,p,h,d){var v;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=1),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=0),void 0===u&&(u=0),void 0===f&&(f=1),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=0),void 0===h&&(h=0),void 0===d&&(d=1),(v=e.call(this)||this).m00=void 0,v.m01=void 0,v.m02=void 0,v.m03=void 0,v.m04=void 0,v.m05=void 0,v.m06=void 0,v.m07=void 0,v.m08=void 0,v.m09=void 0,v.m10=void 0,v.m11=void 0,v.m12=void 0,v.m13=void 0,v.m14=void 0,v.m15=void 0,"object"==typeof t?(v.m00=t.m00,v.m01=t.m01,v.m02=t.m02,v.m03=t.m03,v.m04=t.m04,v.m05=t.m05,v.m06=t.m06,v.m07=t.m07,v.m08=t.m08,v.m09=t.m09,v.m10=t.m10,v.m11=t.m11,v.m12=t.m12,v.m13=t.m13,v.m14=t.m14,v.m15=t.m15):(v.m00=t,v.m01=n,v.m02=i,v.m03=o,v.m04=a,v.m05=r,v.m06=c,v.m07=s,v.m08=l,v.m09=u,v.m10=f,v.m11=_,v.m12=m,v.m13=p,v.m14=h,v.m15=d),v}X(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.set=function(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h,d){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=c,e.m07=s,e.m08=l,e.m09=u,e.m10=f,e.m11=_,e.m12=m,e.m13=p,e.m14=h,e.m15=d,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m03,a=t.m06,r=t.m07,c=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=a,e.m11=t.m14,e.m12=o,e.m13=r,e.m14=c}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,c=t.m05,s=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*c-i*r,x=n*s-o*r,y=n*l-a*r,C=i*s-o*c,S=i*l-a*c,E=o*l-a*s,T=u*h-f*p,A=u*d-_*p,I=u*v-m*p,b=f*d-_*h,P=f*v-m*h,w=_*v-m*d,R=g*w-x*P+y*b+C*I-S*A+E*T;return 0===R?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(R=1/R,e.m00=(c*w-s*P+l*b)*R,e.m01=(o*P-i*w-a*b)*R,e.m02=(h*E-d*S+v*C)*R,e.m03=(_*S-f*E-m*C)*R,e.m04=(s*I-r*w-l*A)*R,e.m05=(n*w-o*I+a*A)*R,e.m06=(d*y-p*E-v*x)*R,e.m07=(u*E-_*y+m*x)*R,e.m08=(r*P-c*I+l*T)*R,e.m09=(i*I-n*P-a*T)*R,e.m10=(p*S-h*y+v*g)*R,e.m11=(f*y-u*S-m*g)*R,e.m12=(c*A-r*b-s*T)*R,e.m13=(n*b-i*A+o*T)*R,e.m14=(h*x-p*C-d*g)*R,e.m15=(u*C-f*x+_*g)*R,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,c=e.m06,s=e.m07,l=e.m08,u=e.m09,f=e.m10,_=e.m11,m=e.m12,p=e.m13,h=e.m14,d=e.m15;return(t*r-n*a)*(f*d-_*h)-(t*c-i*a)*(u*d-_*p)+(t*s-o*a)*(u*h-f*p)+(n*c-i*r)*(l*d-_*m)-(n*s-o*r)*(l*h-f*m)+(i*s-o*c)*(l*p-u*m)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,c=t.m04,s=t.m05,l=t.m06,u=t.m07,f=t.m08,_=t.m09,m=t.m10,p=t.m11,h=t.m12,d=t.m13,v=t.m14,g=t.m15,x=n.m00,y=n.m01,C=n.m02,S=n.m03;return e.m00=x*i+y*c+C*f+S*h,e.m01=x*o+y*s+C*_+S*d,e.m02=x*a+y*l+C*m+S*v,e.m03=x*r+y*u+C*p+S*g,x=n.m04,y=n.m05,C=n.m06,S=n.m07,e.m04=x*i+y*c+C*f+S*h,e.m05=x*o+y*s+C*_+S*d,e.m06=x*a+y*l+C*m+S*v,e.m07=x*r+y*u+C*p+S*g,x=n.m08,y=n.m09,C=n.m10,S=n.m11,e.m08=x*i+y*c+C*f+S*h,e.m09=x*o+y*s+C*_+S*d,e.m10=x*a+y*l+C*m+S*v,e.m11=x*r+y*u+C*p+S*g,x=n.m12,y=n.m13,C=n.m14,S=n.m15,e.m12=x*i+y*c+C*f+S*h,e.m13=x*o+y*s+C*_+S*d,e.m14=x*a+y*l+C*m+S*v,e.m15=x*r+y*u+C*p+S*g,e},t.transform=function(e,t,n){var i=n.x,o=n.y,a=n.z;if(t===e)e.m12=t.m00*i+t.m04*o+t.m08*a+t.m12,e.m13=t.m01*i+t.m05*o+t.m09*a+t.m13,e.m14=t.m02*i+t.m06*o+t.m10*a+t.m14,e.m15=t.m03*i+t.m07*o+t.m11*a+t.m15;else{var r=t.m00,c=t.m01,s=t.m02,l=t.m03,u=t.m04,f=t.m05,_=t.m06,m=t.m07,p=t.m08,h=t.m09,d=t.m10,v=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=r,e.m01=c,e.m02=s,e.m03=l,e.m04=u,e.m05=f,e.m06=_,e.m07=m,e.m08=p,e.m09=h,e.m10=d,e.m11=v,e.m12=r*i+u*o+p*a+t.m12,e.m13=c*i+f*o+h*a+t.m13,e.m14=s*i+_*o+d*a+t.m14,e.m15=l*i+m*o+v*a+t.m15}return e},t.translate=function(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e},t.scale=function(e,t,n){var i=n.x,o=n.y,a=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*o,e.m05=t.m05*o,e.m06=t.m06*o,e.m07=t.m07*o,e.m08=t.m08*a,e.m09=t.m09*a,e.m10=t.m10*a,e.m11=t.m11*a,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.rotate=function(e,t,n,i){var o=i.x,a=i.y,r=i.z,c=Math.sqrt(o*o+a*a+r*r);if(Math.abs(c)<vi)return null;o*=c=1/c,a*=c,r*=c;var s=Math.sin(n),l=Math.cos(n),u=1-l,f=t.m00,_=t.m01,m=t.m02,p=t.m03,h=t.m04,d=t.m05,v=t.m06,g=t.m07,x=t.m08,y=t.m09,C=t.m10,S=t.m11,E=o*o*u+l,T=a*o*u+r*s,A=r*o*u-a*s,I=o*a*u-r*s,b=a*a*u+l,P=r*a*u+o*s,w=o*r*u+a*s,R=a*r*u-o*s,N=r*r*u+l;return e.m00=f*E+h*T+x*A,e.m01=_*E+d*T+y*A,e.m02=m*E+v*T+C*A,e.m03=p*E+g*T+S*A,e.m04=f*I+h*b+x*P,e.m05=_*I+d*b+y*P,e.m06=m*I+v*b+C*P,e.m07=p*I+g*b+S*P,e.m08=f*w+h*R+x*N,e.m09=_*w+d*R+y*N,e.m10=m*w+v*R+C*N,e.m11=p*w+g*R+S*N,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e},t.rotateX=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m04,r=t.m05,c=t.m06,s=t.m07,l=t.m08,u=t.m09,f=t.m10,_=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=a*o+l*i,e.m05=r*o+u*i,e.m06=c*o+f*i,e.m07=s*o+_*i,e.m08=l*o-a*i,e.m09=u*o-r*i,e.m10=f*o-c*i,e.m11=_*o-s*i,e},t.rotateY=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,c=t.m02,s=t.m03,l=t.m08,u=t.m09,f=t.m10,_=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o-l*i,e.m01=r*o-u*i,e.m02=c*o-f*i,e.m03=s*o-_*i,e.m08=a*i+l*o,e.m09=r*i+u*o,e.m10=c*i+f*o,e.m11=s*i+_*o,e},t.rotateZ=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,c=t.m02,s=t.m03,l=t.m04,u=t.m05,f=t.m06,_=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o+l*i,e.m01=r*o+u*i,e.m02=c*o+f*i,e.m03=s*o+_*i,e.m04=l*o-a*i,e.m05=u*o-r*i,e.m06=f*o-c*i,e.m07=_*o-s*i,e},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRotation=function(e,t,n){var i=n.x,o=n.y,a=n.z,r=Math.sqrt(i*i+o*o+a*a);if(Math.abs(r)<vi)return null;i*=r=1/r,o*=r,a*=r;var c=Math.sin(t),s=Math.cos(t),l=1-s;return e.m00=i*i*l+s,e.m01=o*i*l+a*c,e.m02=a*i*l-o*c,e.m03=0,e.m04=i*o*l-a*c,e.m05=o*o*l+s,e.m06=a*o*l+i*c,e.m07=0,e.m08=i*a*l+o*c,e.m09=o*a*l-i*c,e.m10=a*a*l+s,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromXRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromYRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromZRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRT=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,c=i+i,s=o+o,l=a+a,u=i*c,f=i*s,_=i*l,m=o*s,p=o*l,h=a*l,d=r*c,v=r*s,g=r*l;return e.m00=1-(m+h),e.m01=f+g,e.m02=_-v,e.m03=0,e.m04=f-g,e.m05=1-(u+h),e.m06=p+d,e.m07=0,e.m08=_+v,e.m09=p-d,e.m10=1-(u+m),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.getTranslation=function(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e},t.getScaling=function(e,t){var n=Ki.m00=t.m00,i=Ki.m01=t.m01,o=Ki.m02=t.m02,a=Ki.m03=t.m04,r=Ki.m04=t.m05,c=Ki.m05=t.m06,s=Ki.m06=t.m08,l=Ki.m07=t.m09,u=Ki.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+o*o),e.y=Math.sqrt(a*a+r*r+c*c),e.z=Math.sqrt(s*s+l*l+u*u),Li.determinant(Ki)<0&&(e.x*=-1),e},t.getRotation=function(e,t){var n=t.m00+t.m05+t.m10,i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e},t.toRTS=function(e,t,n,i){i.x=Di.set(Xi,e.m00,e.m01,e.m02).length(),Ki.m00=e.m00/i.x,Ki.m01=e.m01/i.x,Ki.m02=e.m02/i.x,i.y=Di.set(Xi,e.m04,e.m05,e.m06).length(),Ki.m03=e.m04/i.y,Ki.m04=e.m05/i.y,Ki.m05=e.m06/i.y,i.z=Di.set(Xi,e.m08,e.m09,e.m10).length(),Ki.m06=e.m08/i.z,Ki.m07=e.m09/i.z,Ki.m08=e.m10/i.z,Li.determinant(Ki)<0&&(i.x*=-1,Ki.m00*=-1,Ki.m01*=-1,Ki.m02*=-1),Bi.fromMat3(t,Ki),Di.set(n,e.m12,e.m13,e.m14)},t.fromRTS=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,c=t.w,s=o+o,l=a+a,u=r+r,f=o*s,_=o*l,m=o*u,p=a*l,h=a*u,d=r*u,v=c*s,g=c*l,x=c*u,y=i.x,C=i.y,S=i.z;return e.m00=(1-(p+d))*y,e.m01=(_+x)*y,e.m02=(m-g)*y,e.m03=0,e.m04=(_-x)*C,e.m05=(1-(f+d))*C,e.m06=(h+v)*C,e.m07=0,e.m08=(m+g)*S,e.m09=(h-v)*S,e.m10=(1-(f+p))*S,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.fromRTSOrigin=function(e,t,n,i,o){var a=t.x,r=t.y,c=t.z,s=t.w,l=a+a,u=r+r,f=c+c,_=a*l,m=a*u,p=a*f,h=r*u,d=r*f,v=c*f,g=s*l,x=s*u,y=s*f,C=i.x,S=i.y,E=i.z,T=o.x,A=o.y,I=o.z;return e.m00=(1-(h+v))*C,e.m01=(m+y)*C,e.m02=(p-x)*C,e.m03=0,e.m04=(m-y)*S,e.m05=(1-(_+v))*S,e.m06=(d+g)*S,e.m07=0,e.m08=(p+x)*E,e.m09=(d-g)*E,e.m10=(1-(_+h))*E,e.m11=0,e.m12=n.x+T-(e.m00*T+e.m04*A+e.m08*I),e.m13=n.y+A-(e.m01*T+e.m05*A+e.m09*I),e.m14=n.z+I-(e.m02*T+e.m06*A+e.m10*I),e.m15=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,c=i+i,s=o+o,l=n*r,u=i*r,f=i*c,_=o*r,m=o*c,p=o*s,h=a*r,d=a*c,v=a*s;return e.m00=1-f-p,e.m01=u+v,e.m02=_-d,e.m03=0,e.m04=u-v,e.m05=1-l-p,e.m06=m+h,e.m07=0,e.m08=_+d,e.m09=m-h,e.m10=1-l-f,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.frustum=function(e,t,n,i,o,a,r){var c=1/(n-t),s=1/(o-i),l=1/(a-r);return e.m00=2*a*c,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*a*s,e.m06=0,e.m07=0,e.m08=(n+t)*c,e.m09=(o+i)*s,e.m10=(r+a)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=r*a*2*l,e.m15=0,e},t.perspective=function(e,t,n,i,o,a,r,c,s){void 0===a&&(a=!0),void 0===r&&(r=-1),void 0===c&&(c=1),void 0===s&&(s=0);var l=1/Math.tan(t/2),u=1/(i-o),f=a?l/n:l,_=(a?l:l*n)*c,m=Wi[s];return e.m00=f*m[0],e.m01=f*m[1],e.m02=0,e.m03=0,e.m04=_*m[2],e.m05=_*m[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(o-r*i)*u,e.m11=-1,e.m12=0,e.m13=0,e.m14=o*i*u*(1-r),e.m15=0,e},t.ortho=function(e,t,n,i,o,a,r,c,s,l){void 0===c&&(c=-1),void 0===s&&(s=1),void 0===l&&(l=0);var u=1/(t-n),f=1/(i-o)*s,_=1/(a-r),m=-2*u,p=-2*f,h=(t+n)*u,d=(o+i)*f,v=Wi[l];return e.m00=m*v[0],e.m01=m*v[1],e.m02=0,e.m03=0,e.m04=p*v[2],e.m05=p*v[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=_*(1-c),e.m11=0,e.m12=h*v[0]+d*v[2],e.m13=h*v[1]+d*v[3],e.m14=(a-c*r)*_,e.m15=1,e},t.lookAt=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,c=i.x,s=i.y,l=i.z,u=o-n.x,f=a-n.y,_=r-n.z,m=1/Math.sqrt(u*u+f*f+_*_),p=s*(_*=m)-l*(f*=m),h=l*(u*=m)-c*_,d=c*f-s*u,v=f*(d*=m=1/Math.sqrt(p*p+h*h+d*d))-_*(h*=m),g=_*(p*=m)-u*d,x=u*h-f*p;return e.m00=p,e.m01=v,e.m02=u,e.m03=0,e.m04=h,e.m05=g,e.m06=f,e.m07=0,e.m08=d,e.m09=x,e.m10=_,e.m11=0,e.m12=-(p*o+h*a+d*r),e.m13=-(v*o+g*a+x*r),e.m14=-(u*o+f*a+_*r),e.m15=1,e},t.inverseTranspose=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,c=t.m05,s=t.m06,l=t.m07,u=t.m08,f=t.m09,_=t.m10,m=t.m11,p=t.m12,h=t.m13,d=t.m14,v=t.m15,g=n*c-i*r,x=n*s-o*r,y=n*l-a*r,C=i*s-o*c,S=i*l-a*c,E=o*l-a*s,T=u*h-f*p,A=u*d-_*p,I=u*v-m*p,b=f*d-_*h,P=f*v-m*h,w=_*v-m*d,R=g*w-x*P+y*b+C*I-S*A+E*T;return R?(R=1/R,e.m00=(c*w-s*P+l*b)*R,e.m01=(s*I-r*w-l*A)*R,e.m02=(r*P-c*I+l*T)*R,e.m03=0,e.m04=(o*P-i*w-a*b)*R,e.m05=(n*w-o*I+a*A)*R,e.m06=(i*I-n*P-a*T)*R,e.m07=0,e.m08=(h*E-d*S+v*C)*R,e.m09=(d*y-p*E-v*x)*R,e.m10=(p*S-h*y+v*g)*R,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))};var n=t.prototype;return n.clone=function(){return new t(this.m00,this.m01,this.m02,this.m03,this.m04,this.m05,this.m06,this.m07,this.m08,this.m09,this.m10,this.m11,this.m12,this.m13,this.m14,this.m15)},n.set=function(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=0),void 0===u&&(u=1),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=0),void 0===h&&(h=1),"object"==typeof e?(this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08,this.m09=e.m09,this.m10=e.m10,this.m11=e.m11,this.m12=e.m12,this.m13=e.m13,this.m14=e.m14,this.m15=e.m15,this.m00=e.m00):(this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=c,this.m08=s,this.m09=l,this.m10=u,this.m11=f,this.m12=_,this.m13=m,this.m14=p,this.m15=h,this.m00=e),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))&&Math.abs(this.m09-e.m09)<=t*Math.max(1,Math.abs(this.m09),Math.abs(e.m09))&&Math.abs(this.m10-e.m10)<=t*Math.max(1,Math.abs(this.m10),Math.abs(e.m10))&&Math.abs(this.m11-e.m11)<=t*Math.max(1,Math.abs(this.m11),Math.abs(e.m11))&&Math.abs(this.m12-e.m12)<=t*Math.max(1,Math.abs(this.m12),Math.abs(e.m12))&&Math.abs(this.m13-e.m13)<=t*Math.max(1,Math.abs(this.m13),Math.abs(e.m13))&&Math.abs(this.m14-e.m14)<=t*Math.max(1,Math.abs(this.m14),Math.abs(e.m14))&&Math.abs(this.m15-e.m15)<=t*Math.max(1,Math.abs(this.m15),Math.abs(e.m15))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08&&this.m09===e.m09&&this.m10===e.m10&&this.m11===e.m11&&this.m12===e.m12&&this.m13===e.m13&&this.m14===e.m14&&this.m15===e.m15},n.toString=function(){return"[\n"+this.m00+", "+this.m01+", "+this.m02+", "+this.m03+",\n"+this.m04+", "+this.m05+", "+this.m06+", "+this.m07+",\n"+this.m08+", "+this.m09+", "+this.m10+", "+this.m11+",\n"+this.m12+", "+this.m13+", "+this.m14+", "+this.m15+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=1,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=1,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},n.zero=function(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m03,i=this.m06,o=this.m07,a=this.m11;return this.m01=this.m04,this.m02=this.m08,this.m03=this.m12,this.m04=e,this.m06=this.m09,this.m07=this.m13,this.m08=t,this.m09=i,this.m11=this.m14,this.m12=n,this.m13=o,this.m14=a,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,c=this.m07,s=this.m08,l=this.m09,u=this.m10,f=this.m11,_=this.m12,m=this.m13,p=this.m14,h=this.m15,d=e*a-t*o,v=e*r-n*o,g=e*c-i*o,x=t*r-n*a,y=t*c-i*a,C=n*c-i*r,S=s*m-l*_,E=s*p-u*_,T=s*h-f*_,A=l*p-u*m,I=l*h-f*m,b=u*h-f*p,P=d*b-v*I+g*A+x*T-y*E+C*S;return 0===P?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(P=1/P,this.m00=(a*b-r*I+c*A)*P,this.m01=(n*I-t*b-i*A)*P,this.m02=(m*C-p*y+h*x)*P,this.m03=(u*y-l*C-f*x)*P,this.m04=(r*T-o*b-c*E)*P,this.m05=(e*b-n*T+i*E)*P,this.m06=(p*g-_*C-h*v)*P,this.m07=(s*C-u*g+f*v)*P,this.m08=(o*I-a*T+c*S)*P,this.m09=(t*T-e*I-i*S)*P,this.m10=(_*y-m*g+h*d)*P,this.m11=(l*g-s*y-f*d)*P,this.m12=(a*E-o*A-r*S)*P,this.m13=(e*A-t*E+n*S)*P,this.m14=(m*v-_*x-p*d)*P,this.m15=(s*x-l*v+u*d)*P,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,c=this.m07,s=this.m08,l=this.m09,u=this.m10,f=this.m11,_=this.m12,m=this.m13,p=this.m14,h=this.m15;return(e*a-t*o)*(u*h-f*p)-(e*r-n*o)*(l*h-f*m)+(e*c-i*o)*(l*p-u*m)+(t*r-n*a)*(s*h-f*_)-(t*c-i*a)*(s*p-u*_)+(n*c-i*r)*(s*m-l*_)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this.m09+=e.m09,this.m10+=e.m10,this.m11+=e.m11,this.m12+=e.m12,this.m13+=e.m13,this.m14+=e.m14,this.m15+=e.m15,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this.m09-=e.m09,this.m10-=e.m10,this.m11-=e.m11,this.m12-=e.m12,this.m13-=e.m13,this.m14-=e.m14,this.m15-=e.m15,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,c=this.m06,s=this.m07,l=this.m08,u=this.m09,f=this.m10,_=this.m11,m=this.m12,p=this.m13,h=this.m14,d=this.m15,v=e.m00,g=e.m01,x=e.m02,y=e.m03;return this.m00=v*t+g*a+x*l+y*m,this.m01=v*n+g*r+x*u+y*p,this.m02=v*i+g*c+x*f+y*h,this.m03=v*o+g*s+x*_+y*d,v=e.m04,g=e.m05,x=e.m06,y=e.m07,this.m04=v*t+g*a+x*l+y*m,this.m05=v*n+g*r+x*u+y*p,this.m06=v*i+g*c+x*f+y*h,this.m07=v*o+g*s+x*_+y*d,v=e.m08,g=e.m09,x=e.m10,y=e.m11,this.m08=v*t+g*a+x*l+y*m,this.m09=v*n+g*r+x*u+y*p,this.m10=v*i+g*c+x*f+y*h,this.m11=v*o+g*s+x*_+y*d,v=e.m12,g=e.m13,x=e.m14,y=e.m15,this.m12=v*t+g*a+x*l+y*m,this.m13=v*n+g*r+x*u+y*p,this.m14=v*i+g*c+x*f+y*h,this.m15=v*o+g*s+x*_+y*d,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this.m09*=e,this.m10*=e,this.m11*=e,this.m12*=e,this.m13*=e,this.m14*=e,this.m15*=e,this},n.translate=function(e){return console.warn("function changed"),this.m12+=e.x,this.m13+=e.y,this.m14+=e.z,this},n.scale=function(e){var t=e.x,n=e.y,i=e.z;return this.m00*=t,this.m01*=t,this.m02*=t,this.m03*=t,this.m04*=n,this.m05*=n,this.m06*=n,this.m07*=n,this.m08*=i,this.m09*=i,this.m10*=i,this.m11*=i,this},n.rotate=function(e,t){var n=t.x,i=t.y,o=t.z,a=Math.sqrt(n*n+i*i+o*o);if(Math.abs(a)<vi)return null;n*=a=1/a,i*=a,o*=a;var r=Math.sin(e),c=Math.cos(e),s=1-c,l=this.m00,u=this.m01,f=this.m02,_=this.m03,m=this.m04,p=this.m05,h=this.m06,d=this.m07,v=this.m08,g=this.m09,x=this.m10,y=this.m11,C=n*n*s+c,S=i*n*s+o*r,E=o*n*s-i*r,T=n*i*s-o*r,A=i*i*s+c,I=o*i*s+n*r,b=n*o*s+i*r,P=i*o*s-n*r,w=o*o*s+c;return this.m00=l*C+m*S+v*E,this.m01=u*C+p*S+g*E,this.m02=f*C+h*S+x*E,this.m03=_*C+d*S+y*E,this.m04=l*T+m*A+v*I,this.m05=u*T+p*A+g*I,this.m06=f*T+h*A+x*I,this.m07=_*T+d*A+y*I,this.m08=l*b+m*P+v*w,this.m09=u*b+p*P+g*w,this.m10=f*b+h*P+x*w,this.m11=_*b+d*P+y*w,this},n.getTranslation=function(e){return e.x=this.m12,e.y=this.m13,e.z=this.m14,e},n.getScale=function(e){var t=Ki.m00=this.m00,n=Ki.m01=this.m01,i=Ki.m02=this.m02,o=Ki.m03=this.m04,a=Ki.m04=this.m05,r=Ki.m05=this.m06,c=Ki.m06=this.m08,s=Ki.m07=this.m09,l=Ki.m08=this.m10;return e.x=Math.sqrt(t*t+n*n+i*i),e.y=Math.sqrt(o*o+a*a+r*r),e.z=Math.sqrt(c*c+s*s+l*l),Li.determinant(Ki)<0&&(e.x*=-1),e},n.getRotation=function(e){var t=this.m00+this.m05+this.m10,n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this.m06-this.m09)/n,e.y=(this.m08-this.m02)/n,e.z=(this.m01-this.m04)/n):this.m00>this.m05&&this.m00>this.m10?(n=2*Math.sqrt(1+this.m00-this.m05-this.m10),e.w=(this.m06-this.m09)/n,e.x=.25*n,e.y=(this.m01+this.m04)/n,e.z=(this.m08+this.m02)/n):this.m05>this.m10?(n=2*Math.sqrt(1+this.m05-this.m00-this.m10),e.w=(this.m08-this.m02)/n,e.x=(this.m01+this.m04)/n,e.y=.25*n,e.z=(this.m06+this.m09)/n):(n=2*Math.sqrt(1+this.m10-this.m00-this.m05),e.w=(this.m01-this.m04)/n,e.x=(this.m08+this.m02)/n,e.y=(this.m06+this.m09)/n,e.z=.25*n),e},n.fromRTS=function(e,t,n){var i=e.x,o=e.y,a=e.z,r=e.w,c=i+i,s=o+o,l=a+a,u=i*c,f=i*s,_=i*l,m=o*s,p=o*l,h=a*l,d=r*c,v=r*s,g=r*l,x=n.x,y=n.y,C=n.z;return this.m00=(1-(m+h))*x,this.m01=(f+g)*x,this.m02=(_-v)*x,this.m03=0,this.m04=(f-g)*y,this.m05=(1-(u+h))*y,this.m06=(p+d)*y,this.m07=0,this.m08=(_+v)*C,this.m09=(p-d)*C,this.m10=(1-(u+m))*C,this.m11=0,this.m12=t.x,this.m13=t.y,this.m14=t.z,this.m15=1,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,c=i+i,s=t*a,l=n*a,u=n*r,f=i*a,_=i*r,m=i*c,p=o*a,h=o*r,d=o*c;return this.m00=1-u-m,this.m01=l+d,this.m02=f-h,this.m03=0,this.m04=l-d,this.m05=1-s-m,this.m06=_+p,this.m07=0,this.m08=f+h,this.m09=_-p,this.m10=1-s-u,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},t}(Et));Yi.IDENTITY=Object.freeze(new Yi);var Xi=new Di,Ki=new Li;function Qi(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h){return new Yi(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h)}mn.fastDefine("cc.Mat4",Yi,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),s.Mat4=Yi,s.mat4=Qi;var Ji=e("c2",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.x=t.x,i.y=t.y):(i.x=t||0,i.y=n||0),i}X(t,e),t.clone=function(e){return new t(e.x,e.y)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e},t.set=function(e,t,n){return e.x=t,e.y=n,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return n*n+i*i},t.len=function(e){var t=e.x,n=e.y;return Math.sqrt(t*t+n*n)},t.lengthSqr=function(e){var t=e.x,n=e.y;return t*t+n*n},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y;return Math.abs(n)<vi?e.x=0:e.x=1/n,Math.abs(i)<vi?e.y=0:e.y=1/i,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=n*n+i*i;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.cross=function(e,t,n){return e instanceof Di?(e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e):e.x*t.y-e.y*t.x},t.lerp=function(e,t,n,i){var o=t.x,a=t.y;return e.x=o+i*(n.x-o),e.y=a+i*(n.y-a),e},t.random=function(e,t){t=t||1;var n=2*Si()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m03*o+n.m06,e.y=n.m01*i+n.m04*o+n.m07,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m04*o+n.m12,e.y=n.m01*i+n.m05*o+n.m13,e},t.str=function(e){return"Vec2("+e.x+", "+e.y+")"},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))},t.angle=function(e,n){t.normalize(Zi,e),t.normalize($i,n);var i=t.dot(Zi,$i);return i>1?0:i<-1?Math.PI:Math.acos(i)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y)},n.set=function(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))},n.equals2f=function(e,t,n){return void 0===n&&(n=vi),Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y},n.strictEquals2f=function(e,t){return this.x===e&&this.y===t},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+")"},n.lerp=function(e,t){var n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this},n.clampf=function(e,t){return this.x=xi(this.x,e.x,t.x),this.y=xi(this.y,e.y,t.y),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this},n.add2f=function(e,t){return this.x+=e,this.y+=t,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},n.subtract2f=function(e,t){return this.x-=e,this.y-=t,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this},n.multiply2f=function(e,t){return this.x*=e,this.y*=t,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this},n.divide2f=function(e,t){return this.x/=e,this.y/=t,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this},n.dot=function(e){return this.x*e.x+this.y*e.y},n.cross=function(e){return this.x*e.y-this.y*e.x},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y},n.normalize=function(){var e=this.x,t=this.y,n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this},n.angle=function(e){var t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;var i=this.dot(e)/Math.sqrt(t*n);return i=xi(i,-1,1),Math.acos(i)},n.signAngle=function(e){var t=this.angle(e);return this.cross(e)<0?-t:t},n.rotate=function(e){var t=this.x,n=this.y,i=Math.sin(e),o=Math.cos(e);return this.x=o*t-i*n,this.y=i*t+o*n,this},n.project=function(e){var t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this},n.transformMat4=function(e){var t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this},t}(Et));Ji.ZERO=Object.freeze(new Ji(0,0)),Ji.ONE=Object.freeze(new Ji(1,1)),Ji.NEG_ONE=Object.freeze(new Ji(-1,-1)),Ji.UNIT_X=Object.freeze(new Ji(1,0)),Ji.UNIT_Y=Object.freeze(new Ji(0,1));var Zi=new Ji,$i=new Ji;function eo(e,t){return new Ji(e,t)}mn.fastDefine("cc.Vec2",Ji,{x:0,y:0}),s.Vec2=Ji,s.v2=eo;var to=e("c6",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=o||0),a}X(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return Math.sqrt(n*n+i*i+o*o+a*a)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return n*n+i*i+o*o+a*a},t.len=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return Math.sqrt(t*t+n*n+i*i+o*o)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return t*t+n*n+i*i+o*o},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w;return Math.abs(n)<vi?e.x=0:e.x=1/n,Math.abs(i)<vi?e.y=0:e.y=1/i,Math.abs(o)<vi?e.z=0:e.z=1/o,Math.abs(a)<vi?e.w=0:e.w=1/a,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n*n+i*i+o*o+a*a;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=o*r,e.w=a*r),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.random=function(e,t){t=t||1;var n=2*Si()*Math.PI,i=2*Si()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e.w=0,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12*r,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13*r,e.z=n.m02*i+n.m06*o+n.m10*a+n.m14*r,e.w=n.m03*i+n.m07*o+n.m11*a+n.m15*r,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m01*o+n.m02*a+n.m03*r,e.y=n.m04*i+n.m05*o+n.m06*a+n.m07*r,e.x=n.m08*i+n.m09*o+n.m10*a+n.m11*r,e.w=t.w,e},t.transformQuat=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,c=n.y,s=n.z,l=n.w,u=l*i+c*a-s*o,f=l*o+s*i-r*a,_=l*a+r*o-c*i,m=-r*i-c*o-s*a;return e.x=u*l+m*-r+f*-s-_*-c,e.y=f*l+m*-c+_*-r-u*-s,e.z=_*l+m*-s+u*-c-f*-r,e.w=t.w,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=vi),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this},n.equals=function(e,t){return void 0===t&&(t=vi),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.equals4f=function(e,t,n,i,o){return void 0===o&&(o=vi),Math.abs(this.x-e)<=o*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=o*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=o*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=o*Math.max(1,Math.abs(this.w),Math.abs(i))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.strictEquals4f=function(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.z,a=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=o+t*(e.z-o),this.w=a+t*(e.w-a),this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+", "+this.w.toFixed(2)+")"},n.clampf=function(e,t){return this.x=xi(this.x,e.x,t.x),this.y=xi(this.y,e.y,t.y),this.z=xi(this.z,e.z,t.z),this.w=xi(this.w,e.w,t.w),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},n.add4f=function(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},n.subtract4f=function(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},n.multiply4f=function(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this},n.divide4f=function(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)},n.lengthSqr=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=this.w,o=e*e+t*t+n*n+i*i;return o>0&&(o=1/Math.sqrt(o),this.x=e*o,this.y=t*o,this.z=n*o,this.w=i*o),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*o,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*o,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*o,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*o,this},t}(Et));function no(e,t,n,i){return new to(e,t,n,i)}to.ZERO=Object.freeze(new to(0,0,0,0)),to.ONE=Object.freeze(new to(1,1,1,1)),to.NEG_ONE=Object.freeze(new to(-1,-1,-1,-1)),mn.fastDefine("cc.Vec4",to,{x:0,y:0,z:0,w:0}),s.Vec4=to,s.v4=no,ri(Ji,"Vec2",[{name:"sub",newName:"subtract",target:Ji,targetName:"Vec2"},{name:"mul",newName:"multiply",target:Ji,targetName:"Vec2"},{name:"div",newName:"divide",target:Ji,targetName:"Vec2"},{name:"dist",newName:"distance",target:Ji,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:Ji,targetName:"Vec2"},{name:"mag",newName:"len",target:Ji,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:Ji,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Ji,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Ji,targetName:"Vec2"}]),ri(Ji.prototype,"Vec2",[{name:"mag",newName:"length",target:Ji.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:Ji.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Ji.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Ji.prototype,targetName:"Vec2"}]),ri(Di,"Vec3",[{name:"sub",newName:"subtract",target:Di,targetName:"Vec3"},{name:"mul",newName:"multiply",target:Di,targetName:"Vec3"},{name:"div",newName:"divide",target:Di,targetName:"Vec3"},{name:"dist",newName:"distance",target:Di,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:Di,targetName:"Vec3"},{name:"mag",newName:"len",target:Di,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:Di,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:Di,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:Di,targetName:"Vec3"}]),ri(Di.prototype,"Vec3",[{name:"mag",newName:"length",target:Di.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:Di.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:Di.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:Di.prototype,targetName:"Vec3"}]),ri(to,"Vec4",[{name:"sub",newName:"subtract",target:to,targetName:"Vec4"},{name:"mul",newName:"multiply",target:to,targetName:"Vec4"},{name:"div",newName:"divide",target:to,targetName:"Vec4"},{name:"dist",newName:"distance",target:to,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:to,targetName:"Vec4"},{name:"mag",newName:"len",target:to,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:to,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:to,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:to,targetName:"Vec4"}]),ri(to.prototype,"Vec4",[{name:"mag",newName:"length",target:to.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:to.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:to.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:to.prototype,targetName:"Vec4"}]),ri(Bi,"Quat",[{name:"mag",newName:"len",target:Bi,targetName:"Quat"},{name:"mul",newName:"multiply",target:Bi,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:Bi,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:Bi,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Bi,targetName:"Quat"}]),ri(Bi.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:Bi.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Bi.prototype,targetName:"Quat"}]),ri(Ri,"Color",[{name:"sub",newName:"subtract",target:Ri,targetName:"Color"},{name:"mul",newName:"multiply",target:Ri,targetName:"Color"},{name:"div",newName:"divide",target:Ri,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:Ri,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[1].toString(16);return s.Color.fromHEX(t[0],i)}}]),ri(Li,"Mat3",[{name:"sub",newName:"subtract",target:Li,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Li,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Li,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:Li,targetName:"Mat3"}]),ri(Li.prototype,"Mat3",[{name:"sub",newName:"subtract",target:Li.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Li.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:Li.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Li.prototype,targetName:"Mat3"}]),ri(Yi,"Mat4",[{name:"sub",newName:"subtract",target:Yi,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Yi,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Yi,targetName:"Mat4"}]),ri(Yi.prototype,"Mat4",[{name:"sub",newName:"subtract",target:Yi.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Yi.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:Yi.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Yi.prototype,targetName:"Mat4"}]);var io=e("cd",function(){function e(e,t,n,i,o,a){void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),this.a=e,this.b=t,this.c=n,this.d=i,this.tx=o,this.ty=a}return e.identity=function(){return new e},e.clone=function(t){return new e(t.a,t.b,t.c,t.d,t.tx,t.ty)},e.concat=function(e,t,n){var i=t.a,o=t.b,a=t.c,r=t.d,c=t.tx,s=t.ty;e.a=i*n.a+o*n.c,e.b=i*n.b+o*n.d,e.c=a*n.a+r*n.c,e.d=a*n.b+r*n.d,e.tx=c*n.a+s*n.c+n.tx,e.ty=c*n.b+s*n.d+n.ty},e.invert=function(e,t){var n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)},e.fromMat4=function(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13},e.transformVec2=function(e,t,n,i){var o,a;void 0===i?(i=n,o=t.x,a=t.y):(o=t,a=n),e.x=i.a*o+i.c*a+i.tx,e.y=i.b*o+i.d*a+i.ty},e.transformSize=function(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height},e.transformRect=function(e,t,n){var i=t.x+t.width,o=t.y+t.height,a=n.a*t.x+n.c*t.y+n.tx,r=n.b*t.x+n.d*t.y+n.ty,c=n.a*i+n.c*t.y+n.tx,s=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*o+n.tx,u=n.b*t.x+n.d*o+n.ty,f=n.a*i+n.c*o+n.tx,_=n.b*i+n.d*o+n.ty,m=Math.min(a,c,l,f),p=Math.max(a,c,l,f),h=Math.min(r,s,u,_),d=Math.max(r,s,u,_);e.x=m,e.y=h,e.width=p-m,e.height=d-h},e.transformObb=function(e,t,n,i,o,a){var r=a.a*o.x+a.c*o.y+a.tx,c=a.b*o.x+a.d*o.y+a.ty,s=a.a*o.width,l=a.b*o.width,u=a.c*o.height,f=a.d*o.height;t.x=r,t.y=c,n.x=s+r,n.y=l+c,e.x=u+r,e.y=f+c,i.x=s+u+r,i.y=l+f+c},e}());s.AffineTransform=io;var oo=e("ce",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.width=t.width,i.height=t.height):(i.width=t||0,i.height=n||0),i}X(t,e),t.lerp=function(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e};var n=t.prototype;return n.clone=function(){return new t(this.width,this.height)},n.set=function(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this},n.equals=function(e){return this.width===e.width&&this.height===e.height},n.lerp=function(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this},n.toString=function(){return"("+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},W(t,[{key:"x",get:function(){return this.width},set:function(e){this.width=e}},{key:"y",get:function(){return this.height},set:function(e){this.height=e}}]),t}(Et));function ao(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),new oo(e,t)}oo.ZERO=Object.freeze(new oo(0,0)),oo.ONE=Object.freeze(new oo(1,1)),mn.fastDefine("cc.Size",oo,{width:0,height:0}),s.size=ao,s.Size=oo;var ro=e("cg",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.y=t.y,a.width=t.width,a.height=t.height,a.x=t.x):(a.x=t||0,a.y=n||0,a.width=i||0,a.height=o||0),a}X(t,e),t.fromMinMax=function(e,t,n){var i=Math.min(t.x,n.x),o=Math.min(t.y,n.y),a=Math.max(t.x,n.x),r=Math.max(t.y,n.y);return e.x=i,e.y=o,e.width=a-i,e.height=r-o,e},t.lerp=function(e,t,n,i){var o=t.x,a=t.y,r=t.width,c=t.height;return e.x=o+(n.x-o)*i,e.y=a+(n.y-a)*i,e.width=r+(n.width-r)*i,e.height=c+(n.height-c)*i,e},t.intersection=function(e,t,n){var i=t.x,o=t.y,a=t.x+t.width,r=t.y+t.height,c=n.x,s=n.y,l=n.x+n.width,u=n.y+n.height;return e.x=Math.max(i,c),e.y=Math.max(o,s),e.width=Math.min(a,l)-e.x,e.height=Math.min(r,u)-e.y,e},t.union=function(e,t,n){var i=t.x,o=t.y,a=t.width,r=t.height,c=n.x,s=n.y,l=n.width,u=n.height;return e.x=Math.min(i,c),e.y=Math.min(o,s),e.width=Math.max(i+a,c+l)-e.x,e.height=Math.max(o+r,s+u)-e.y,e};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.width,this.height)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this},n.equals=function(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.width,a=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=o+(e.width-o)*t,this.height=a+(e.height-a)*t,this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},n.intersects=function(e){var t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,o=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||o<this.y)},n.contains=function(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y},n.containsRect=function(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height},n.transformMat4=function(e){var t=this.x,n=this.y,i=t+this.width,o=n+this.height,a=e.m00*t+e.m04*n+e.m12,r=e.m01*t+e.m05*n+e.m13,c=e.m00*i+e.m04*n+e.m12,s=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*o+e.m12,u=e.m01*t+e.m05*o+e.m13,f=e.m00*i+e.m04*o+e.m12,_=e.m01*i+e.m05*o+e.m13,m=Math.min(a,c,l,f),p=Math.max(a,c,l,f),h=Math.min(r,s,u,_),d=Math.max(r,s,u,_);return this.x=m,this.y=h,this.width=p-m,this.height=d-h,this},n.transformMat4ToPoints=function(e,t,n,i,o){var a=this.x,r=this.y,c=a+this.width,s=r+this.height;t.x=e.m00*a+e.m04*r+e.m12,t.y=e.m01*a+e.m05*r+e.m13,o.x=e.m00*c+e.m04*r+e.m12,o.y=e.m01*c+e.m05*r+e.m13,n.x=e.m00*a+e.m04*s+e.m12,n.y=e.m01*a+e.m05*s+e.m13,i.x=e.m00*c+e.m04*s+e.m12,i.y=e.m01*c+e.m05*s+e.m13},W(t,[{key:"xMin",get:function(){return this.x},set:function(e){this.width+=this.x-e,this.x=e}},{key:"yMin",get:function(){return this.y},set:function(e){this.height+=this.y-e,this.y=e}},{key:"xMax",get:function(){return this.x+this.width},set:function(e){this.width=e-this.x}},{key:"yMax",get:function(){return this.y+this.height},set:function(e){this.height=e-this.y}},{key:"center",get:function(){return new Ji(this.x+.5*this.width,this.y+.5*this.height)},set:function(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}},{key:"origin",get:function(){return new Ji(this.x,this.y)},set:function(e){this.x=e.x,this.y=e.y}},{key:"size",get:function(){return new oo(this.width,this.height)},set:function(e){this.width=e.width,this.height=e.height}},{key:"z",get:function(){return this.width},set:function(e){this.width=e}},{key:"w",get:function(){return this.height},set:function(e){this.height=e}}]),t}(Et));function co(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),new ro(e,t,n,i)}mn.fastDefine("cc.Rect",ro,{x:0,y:0,width:0,height:0}),s.Rect=ro,s.rect=co;var so=e("cF",Float64Array),lo=(e("cG",function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t.createFloatArray=function(e){return new so(e)},W(t,[{key:"array",get:function(){return this._array}}]),t}(Et)),e("bB",function(){function e(){this._groundAlbedoHDR=new to(.2,.2,.2,1),this._skyColorHDR=new to(.2,.5,.8,1),this._skyIllumHDR=0,this._groundAlbedoLDR=new to(.2,.2,.2,1),this._skyColorLDR=new to(.2,.5,.8,1),this._skyIllumLDR=0,this._enabled=!1}var t=e.prototype;return t.initialize=function(e){this._skyColorHDR=e.skyColorHDR,this._groundAlbedoHDR.x=e.groundAlbedoHDR.x,this._groundAlbedoHDR.y=e.groundAlbedoHDR.y,this._groundAlbedoHDR.z=e.groundAlbedoHDR.z,this._skyIllumHDR=e.skyIllumHDR,this._skyColorLDR=e.skyColorLDR,this._groundAlbedoLDR.x=e.groundAlbedoLDR.x,this._groundAlbedoLDR.y=e.groundAlbedoLDR.y,this._groundAlbedoLDR.z=e.groundAlbedoLDR.z,this._skyIllumLDR=e.skyIllumLDR},t._destroy=function(){},t.destroy=function(){this._destroy()},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled=e}},{key:"skyColor",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR:this._skyColorLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?(this._skyColorHDR.x=e.x,this._skyColorHDR.y=e.y,this._skyColorHDR.z=e.z):(this._skyColorLDR.x=e.x,this._skyColorLDR.y=e.y,this._skyColorLDR.z=e.z)}},{key:"skyIllum",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR=e:this._skyIllumLDR=e}},{key:"groundAlbedo",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR:this._groundAlbedoLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?(this._groundAlbedoHDR.x=e.x,this._groundAlbedoHDR.y=e.y,this._groundAlbedoHDR.z=e.z):(this._groundAlbedoLDR.x=e.x,this._groundAlbedoLDR.y=e.y,this._groundAlbedoLDR.z=e.z)}},{key:"native",get:function(){return this._nativeObj}}]),e}()));lo.SUN_ILLUM=65e3,lo.SKY_ILLUM=2e4,s.Ambient=lo;var uo=new Di,fo=new Di,_o=new Di,mo=new Di,po=new Di,ho=new Di,vo=new Array(3),go=new Array(3);function xo(e,t){return Di.dot(t.n,e)-t.d}function yo(e,t,n){return Di.copy(e,t),Di.subtract(po,n.center,n.halfExtents),Di.add(ho,n.center,n.halfExtents),e.x=e.x<po.x?po.x:e.x,e.y=e.y<po.y?po.y:e.y,e.z=e.z<po.z?po.z:e.z,e.x=e.x>ho.x?ho.x:e.x,e.y=e.y>ho.y?ho.y:e.y,e.z=e.z>ho.z?ho.z:e.z,e}function Co(e,t,n){Di.set(uo,n.orientation.m00,n.orientation.m01,n.orientation.m02),Di.set(fo,n.orientation.m03,n.orientation.m04,n.orientation.m05),Di.set(_o,n.orientation.m06,n.orientation.m07,n.orientation.m08),vo[0]=uo,vo[1]=fo,vo[2]=_o,go[0]=n.halfExtents.x,go[1]=n.halfExtents.y,go[2]=n.halfExtents.z,Di.subtract(mo,t,n.center),Di.set(e,n.center.x,n.center.y,n.center.z);for(var i=0;i<3;i++){var o=Di.dot(mo,vo[i]);o>go[i]&&(o=go[i]),o<-go[i]&&(o=-go[i]),e.x+=o*vo[i].x,e.y+=o*vo[i].y,e.z+=o*vo[i].z}return e}e("eT",Object.freeze({__proto__:null,point_plane:xo,pt_point_plane:function(e,t,n){var i=xo(t,n);return Di.subtract(e,t,Di.multiplyScalar(e,n.n,i))},pt_point_aabb:yo,pt_point_obb:Co,pt_point_line:function(e,t,n,i){Di.subtract(uo,n,i);var o=uo,a=Di.lengthSqr(o);if(0==a)Di.copy(e,n);else{Di.subtract(uo,t,n);var r=Di.dot(uo,o)/a;r<0?Di.copy(e,n):r>1?Di.copy(e,i):Di.scaleAndAdd(e,n,o,r)}}}));var So=e("eU",{SHAPE_RAY:1,SHAPE_LINE:2,SHAPE_SPHERE:4,SHAPE_AABB:8,SHAPE_OBB:16,SHAPE_PLANE:32,SHAPE_TRIANGLE:64,SHAPE_FRUSTUM:128,SHAPE_FRUSTUM_ACCURATE:256,SHAPE_CAPSULE:512}),Eo=e("eV",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=-1),this.s=void 0,this.e=void 0,this._type=void 0,this._type=So.SHAPE_LINE,this.s=new Di(e,t,n),this.e=new Di(i,o,a)}return e.create=function(t,n,i,o,a,r){return new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.s.x,t.s.y,t.s.z,t.e.x,t.e.y,t.e.z)},e.copy=function(e,t){return Di.copy(e.s,t.s),Di.copy(e.e,t.e),e},e.fromPoints=function(e,t,n){return Di.copy(e.s,t),Di.copy(e.e,n),e},e.set=function(e,t,n,i,o,a,r){return e.s.x=t,e.s.y=n,e.s.z=i,e.e.x=o,e.e.y=a,e.e.z=r,e},e.len=function(e){return Di.distance(e.s,e.e)},e.prototype.length=function(){return Di.distance(this.s,this.e)},W(e,[{key:"type",get:function(){return this._type}}]),e}()),To=e("eX",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=-1),this.o=void 0,this.d=void 0,this._type=void 0,this._type=So.SHAPE_RAY,this.o=new Di(e,t,n),this.d=new Di(i,o,a)}return e.create=function(t,n,i,o,a,r){return void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=1),new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.o.x,t.o.y,t.o.z,t.d.x,t.d.y,t.d.z)},e.copy=function(e,t){return Di.copy(e.o,t.o),Di.copy(e.d,t.d),e},e.fromPoints=function(e,t,n){return Di.copy(e.o,t),Di.normalize(e.d,Di.subtract(e.d,n,t)),e},e.set=function(e,t,n,i,o,a,r){return e.o.x=t,e.o.y=n,e.o.z=i,e.d.x=o,e.d.y=a,e.d.z=r,e},e.prototype.computeHit=function(e,t){Di.normalize(e,this.d),Di.scaleAndAdd(e,this.o,e,t)},W(e,[{key:"type",get:function(){return this._type}}]),e}()),Ao=new Di,Io=new Di,bo=new Di,Po=new Di;function wo(e){return Math.max(Math.max(e.x,e.y),e.z)}var Ro,No,Do,Oo,Mo,zo,Lo,Fo,Uo,Bo,Go,ko,Ho,jo,Vo,qo,Wo,Yo,Xo,Ko,Qo,Jo,Zo,$o,ea,ta,na,ia,oa,aa,ra,ca,sa,la,ua,fa,_a,ma,pa,ha,da,va=e("ee",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this._center=new Di(0,0,0),this._radius=0,this._type=void 0,this._type=So.SHAPE_SPHERE,this._center=new Di(e,t,n),this._radius=i}e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.radius)},e.copy=function(e,t){return Di.copy(e.center,t.center),e.radius=t.radius,e},e.fromPoints=function(e,t,n){return Di.multiplyScalar(e.center,Di.add(Ao,t,n),.5),e.radius=.5*Di.subtract(Ao,n,t).length(),e},e.set=function(e,t,n,i,o){return e.center.x=t,e.center.y=n,e.center.z=i,e.radius=o,e};var t=e.prototype;return t.destroy=function(){},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},t.getBoundary=function(e,t){Di.set(e,this.center.x-this.radius,this.center.y-this.radius,this.center.z-this.radius),Di.set(t,this.center.x+this.radius,this.center.y+this.radius,this.center.z+this.radius)},t.transform=function(e,t,n,i,o){Di.transformMat4(o.center,this.center,e),o.radius=this.radius*wo(i)},t.translateAndRotate=function(e,t,n){Di.transformMat4(n.center,this.center,e)},t.setScale=function(e,t){t.radius=this.radius*wo(e)},t.mergePoint=function(e){this.radius<0&&(this.center.set(e),this.radius=0),Di.subtract(Io,e,this.center);var t=Io.length();if(t>this.radius){var n=.5*(t-this.radius);this.radius+=n,Di.multiplyScalar(Io,Io,n/t),Di.add(this.center,this.center,Io)}},t.mergePoints=function(e){var t=e.length;if(!(t<1)){this.radius=-1;for(var n=0;n<t;n++)this.mergePoint(e[n])}},t.mergeAABB=function(e){e.getBoundary(bo,Po),this.mergePoint(bo),this.mergePoint(Po)},W(e,[{key:"center",get:function(){return this._center},set:function(e){this._center=e}},{key:"radius",get:function(){return this._radius},set:function(e){this._radius=e}},{key:"type",get:function(){return this._type}}]),e}()),ga=e("eY",function(){function e(e,t,n,i,o,a,r,c,s){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===c&&(c=1),void 0===s&&(s=0),this.a=void 0,this.b=void 0,this.c=void 0,this._type=void 0,this._type=So.SHAPE_TRIANGLE,this.a=new Di(e,t,n),this.b=new Di(i,o,a),this.c=new Di(r,c,s)}return e.create=function(t,n,i,o,a,r,c,s,l){return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=1),new e(t,n,i,o,a,r,c,s,l)},e.clone=function(t){return new e(t.a.x,t.a.y,t.a.z,t.b.x,t.b.y,t.b.z,t.c.x,t.c.y,t.c.z)},e.copy=function(e,t){return Di.copy(e.a,t.a),Di.copy(e.b,t.b),Di.copy(e.c,t.c),e},e.fromPoints=function(e,t,n,i){return Di.copy(e.a,t),Di.copy(e.b,n),Di.copy(e.c,i),e},e.set=function(e,t,n,i,o,a,r,c,s,l){return e.a.x=t,e.a.y=n,e.a.z=i,e.b.x=o,e.b.y=a,e.b.z=r,e.c.x=c,e.c.y=s,e.c.z=l,e},W(e,[{key:"type",get:function(){return this._type}}]),e}()),xa=function(e,t,n){for(var i=0;i<t.length;++i)e.length<=i&&e.push(new n),e[i].copy(t[i]);e.length=t.length};!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.SWAPCHAIN=1]="SWAPCHAIN",e[e.BUFFER=2]="BUFFER",e[e.TEXTURE=3]="TEXTURE",e[e.RENDER_PASS=4]="RENDER_PASS",e[e.FRAMEBUFFER=5]="FRAMEBUFFER",e[e.SAMPLER=6]="SAMPLER",e[e.SHADER=7]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=8]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=9]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=10]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=11]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=12]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=13]="COMMAND_BUFFER",e[e.QUEUE=14]="QUEUE",e[e.QUERY_POOL=15]="QUERY_POOL",e[e.GLOBAL_BARRIER=16]="GLOBAL_BARRIER",e[e.TEXTURE_BARRIER=17]="TEXTURE_BARRIER",e[e.BUFFER_BARRIER=18]="BUFFER_BARRIER",e[e.COUNT=19]="COUNT"}(Ro||(Ro=e("O",{}))),function(e){e[e.UNREADY=0]="UNREADY",e[e.FAILED=1]="FAILED",e[e.SUCCESS=2]="SUCCESS"}(No||(No=e("S",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.WEBGL=5]="WEBGL",e[e.WEBGL2=6]="WEBGL2",e[e.WEBGPU=7]="WEBGPU"}(Do||(Do=e("A",{}))),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(Oo||(Oo=e("v",{}))),function(e){e[e.COLOR_FLOAT=0]="COLOR_FLOAT",e[e.COLOR_HALF_FLOAT=1]="COLOR_HALF_FLOAT",e[e.TEXTURE_FLOAT=2]="TEXTURE_FLOAT",e[e.TEXTURE_HALF_FLOAT=3]="TEXTURE_HALF_FLOAT",e[e.TEXTURE_FLOAT_LINEAR=4]="TEXTURE_FLOAT_LINEAR",e[e.TEXTURE_HALF_FLOAT_LINEAR=5]="TEXTURE_HALF_FLOAT_LINEAR",e[e.FORMAT_R11G11B10F=6]="FORMAT_R11G11B10F",e[e.FORMAT_SRGB=7]="FORMAT_SRGB",e[e.FORMAT_ETC1=8]="FORMAT_ETC1",e[e.FORMAT_ETC2=9]="FORMAT_ETC2",e[e.FORMAT_DXT=10]="FORMAT_DXT",e[e.FORMAT_PVRTC=11]="FORMAT_PVRTC",e[e.FORMAT_ASTC=12]="FORMAT_ASTC",e[e.FORMAT_RGB8=13]="FORMAT_RGB8",e[e.ELEMENT_INDEX_UINT=14]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=15]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=16]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=17]="BLEND_MINMAX",e[e.COMPUTE_SHADER=18]="COMPUTE_SHADER",e[e.INPUT_ATTACHMENT_BENEFIT=19]="INPUT_ATTACHMENT_BENEFIT",e[e.COUNT=20]="COUNT"}(Mo||(Mo=e("F",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.DEPTH=54]="DEPTH",e[e.DEPTH_STENCIL=55]="DEPTH_STENCIL",e[e.BC1=56]="BC1",e[e.BC1_ALPHA=57]="BC1_ALPHA",e[e.BC1_SRGB=58]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=59]="BC1_SRGB_ALPHA",e[e.BC2=60]="BC2",e[e.BC2_SRGB=61]="BC2_SRGB",e[e.BC3=62]="BC3",e[e.BC3_SRGB=63]="BC3_SRGB",e[e.BC4=64]="BC4",e[e.BC4_SNORM=65]="BC4_SNORM",e[e.BC5=66]="BC5",e[e.BC5_SNORM=67]="BC5_SNORM",e[e.BC6H_UF16=68]="BC6H_UF16",e[e.BC6H_SF16=69]="BC6H_SF16",e[e.BC7=70]="BC7",e[e.BC7_SRGB=71]="BC7_SRGB",e[e.ETC_RGB8=72]="ETC_RGB8",e[e.ETC2_RGB8=73]="ETC2_RGB8",e[e.ETC2_SRGB8=74]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=75]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=76]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=77]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=78]="ETC2_SRGB8_A8",e[e.EAC_R11=79]="EAC_R11",e[e.EAC_R11SN=80]="EAC_R11SN",e[e.EAC_RG11=81]="EAC_RG11",e[e.EAC_RG11SN=82]="EAC_RG11SN",e[e.PVRTC_RGB2=83]="PVRTC_RGB2",e[e.PVRTC_RGBA2=84]="PVRTC_RGBA2",e[e.PVRTC_RGB4=85]="PVRTC_RGB4",e[e.PVRTC_RGBA4=86]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=87]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=88]="PVRTC2_4BPP",e[e.ASTC_RGBA_4X4=89]="ASTC_RGBA_4X4",e[e.ASTC_RGBA_5X4=90]="ASTC_RGBA_5X4",e[e.ASTC_RGBA_5X5=91]="ASTC_RGBA_5X5",e[e.ASTC_RGBA_6X5=92]="ASTC_RGBA_6X5",e[e.ASTC_RGBA_6X6=93]="ASTC_RGBA_6X6",e[e.ASTC_RGBA_8X5=94]="ASTC_RGBA_8X5",e[e.ASTC_RGBA_8X6=95]="ASTC_RGBA_8X6",e[e.ASTC_RGBA_8X8=96]="ASTC_RGBA_8X8",e[e.ASTC_RGBA_10X5=97]="ASTC_RGBA_10X5",e[e.ASTC_RGBA_10X6=98]="ASTC_RGBA_10X6",e[e.ASTC_RGBA_10X8=99]="ASTC_RGBA_10X8",e[e.ASTC_RGBA_10X10=100]="ASTC_RGBA_10X10",e[e.ASTC_RGBA_12X10=101]="ASTC_RGBA_12X10",e[e.ASTC_RGBA_12X12=102]="ASTC_RGBA_12X12",e[e.ASTC_SRGBA_4X4=103]="ASTC_SRGBA_4X4",e[e.ASTC_SRGBA_5X4=104]="ASTC_SRGBA_5X4",e[e.ASTC_SRGBA_5X5=105]="ASTC_SRGBA_5X5",e[e.ASTC_SRGBA_6X5=106]="ASTC_SRGBA_6X5",e[e.ASTC_SRGBA_6X6=107]="ASTC_SRGBA_6X6",e[e.ASTC_SRGBA_8X5=108]="ASTC_SRGBA_8X5",e[e.ASTC_SRGBA_8X6=109]="ASTC_SRGBA_8X6",e[e.ASTC_SRGBA_8X8=110]="ASTC_SRGBA_8X8",e[e.ASTC_SRGBA_10X5=111]="ASTC_SRGBA_10X5",e[e.ASTC_SRGBA_10X6=112]="ASTC_SRGBA_10X6",e[e.ASTC_SRGBA_10X8=113]="ASTC_SRGBA_10X8",e[e.ASTC_SRGBA_10X10=114]="ASTC_SRGBA_10X10",e[e.ASTC_SRGBA_12X10=115]="ASTC_SRGBA_12X10",e[e.ASTC_SRGBA_12X12=116]="ASTC_SRGBA_12X12",e[e.COUNT=117]="COUNT"}(zo||(zo=e("x",{}))),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(Lo||(Lo=e("y",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE1D=33]="TEXTURE1D",e[e.TEXTURE1D_ARRAY=34]="TEXTURE1D_ARRAY",e[e.TEXTURE2D=35]="TEXTURE2D",e[e.TEXTURE2D_ARRAY=36]="TEXTURE2D_ARRAY",e[e.TEXTURE3D=37]="TEXTURE3D",e[e.TEXTURE_CUBE=38]="TEXTURE_CUBE",e[e.IMAGE1D=39]="IMAGE1D",e[e.IMAGE1D_ARRAY=40]="IMAGE1D_ARRAY",e[e.IMAGE2D=41]="IMAGE2D",e[e.IMAGE2D_ARRAY=42]="IMAGE2D_ARRAY",e[e.IMAGE3D=43]="IMAGE3D",e[e.IMAGE_CUBE=44]="IMAGE_CUBE",e[e.SUBPASS_INPUT=45]="SUBPASS_INPUT",e[e.COUNT=46]="COUNT"}(Fo||(Fo=e("T",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(Uo||(Uo=e("z",{}))),function(e){e[e.NONE=0]="NONE"}(Bo||(Bo=e("E",{}))),function(e){e[e.NONE=0]="NONE",e[e.READ_ONLY=1]="READ_ONLY",e[e.WRITE_ONLY=2]="WRITE_ONLY",e[e.READ_WRITE=3]="READ_WRITE"}(Go||(Go=e("M",{}))),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(ko||(ko=e("G",{}))),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(Ho||(Ho=e("H",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.INPUT_ATTACHMENT=64]="INPUT_ATTACHMENT"}(jo||(jo=e("I",{}))),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.GENERAL_LAYOUT=2]="GENERAL_LAYOUT"}(Vo||(Vo=e("J",{}))),function(e){e[e.ONE=0]="ONE",e[e.MULTIPLE_PERFORMANCE=1]="MULTIPLE_PERFORMANCE",e[e.MULTIPLE_BALANCE=2]="MULTIPLE_BALANCE",e[e.MULTIPLE_QUALITY=3]="MULTIPLE_QUALITY"}(qo||(qo=e("K",{}))),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON",e[e.RELAXED=2]="RELAXED",e[e.MAILBOX=3]="MAILBOX",e[e.HALF=4]="HALF"}(Wo||(Wo=e("V",{}))),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(Yo||(Yo=e("L",{}))),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(Xo||(Xo=e("N",{}))),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}(Ko||(Ko=e("Q",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(Qo||(Qo=e("U",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(Jo||(Jo=e("W",{}))),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(Zo||(Zo=e("X",{}))),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}($o||($o=e("Y",{}))),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(ea||(ea=e("Z",{}))),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}(ta||(ta=e("$",{}))),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}(na||(na=e("a0",{}))),function(e){e[e.NONE=0]="NONE",e[e.INDIRECT_BUFFER=1]="INDIRECT_BUFFER",e[e.INDEX_BUFFER=2]="INDEX_BUFFER",e[e.VERTEX_BUFFER=3]="VERTEX_BUFFER",e[e.VERTEX_SHADER_READ_UNIFORM_BUFFER=4]="VERTEX_SHADER_READ_UNIFORM_BUFFER",e[e.VERTEX_SHADER_READ_TEXTURE=5]="VERTEX_SHADER_READ_TEXTURE",e[e.VERTEX_SHADER_READ_OTHER=6]="VERTEX_SHADER_READ_OTHER",e[e.FRAGMENT_SHADER_READ_UNIFORM_BUFFER=7]="FRAGMENT_SHADER_READ_UNIFORM_BUFFER",e[e.FRAGMENT_SHADER_READ_TEXTURE=8]="FRAGMENT_SHADER_READ_TEXTURE",e[e.FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT=9]="FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT=10]="FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_OTHER=11]="FRAGMENT_SHADER_READ_OTHER",e[e.COLOR_ATTACHMENT_READ=12]="COLOR_ATTACHMENT_READ",e[e.DEPTH_STENCIL_ATTACHMENT_READ=13]="DEPTH_STENCIL_ATTACHMENT_READ",e[e.COMPUTE_SHADER_READ_UNIFORM_BUFFER=14]="COMPUTE_SHADER_READ_UNIFORM_BUFFER",e[e.COMPUTE_SHADER_READ_TEXTURE=15]="COMPUTE_SHADER_READ_TEXTURE",e[e.COMPUTE_SHADER_READ_OTHER=16]="COMPUTE_SHADER_READ_OTHER",e[e.TRANSFER_READ=17]="TRANSFER_READ",e[e.HOST_READ=18]="HOST_READ",e[e.PRESENT=19]="PRESENT",e[e.VERTEX_SHADER_WRITE=20]="VERTEX_SHADER_WRITE",e[e.FRAGMENT_SHADER_WRITE=21]="FRAGMENT_SHADER_WRITE",e[e.COLOR_ATTACHMENT_WRITE=22]="COLOR_ATTACHMENT_WRITE",e[e.DEPTH_STENCIL_ATTACHMENT_WRITE=23]="DEPTH_STENCIL_ATTACHMENT_WRITE",e[e.COMPUTE_SHADER_WRITE=24]="COMPUTE_SHADER_WRITE",e[e.TRANSFER_WRITE=25]="TRANSFER_WRITE",e[e.HOST_PREINITIALIZED=26]="HOST_PREINITIALIZED",e[e.HOST_WRITE=27]="HOST_WRITE"}(ia||(ia=e("a1",{}))),function(e){e[e.NONE=0]="NONE",e[e.SAMPLE_ZERO=1]="SAMPLE_ZERO",e[e.AVERAGE=2]="AVERAGE",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(oa||(oa=e("a2",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(aa||(aa=e("a3",{}))),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(ra||(ra=e("a4",{}))),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(ca||(ca=e("a5",{}))),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(sa||(sa=e("a6",{}))),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(la||(la=e("a7",{}))),function(e){e[e.NONE=0]="NONE",e[e.LINE_WIDTH=1]="LINE_WIDTH",e[e.DEPTH_BIAS=2]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=4]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=8]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=16]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=32]="STENCIL_COMPARE_MASK"}(ua||(ua=e("a8",{}))),function(e){e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK",e[e.ALL=3]="ALL"}(fa||(fa=e("a9",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER_TEXTURE=16]="SAMPLER_TEXTURE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE=64]="TEXTURE",e[e.STORAGE_IMAGE=128]="STORAGE_IMAGE",e[e.INPUT_ATTACHMENT=256]="INPUT_ATTACHMENT"}(_a||(_a=e("aa",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(ma||(ma=e("ab",{}))),function(e){e[e.OCCLUSION=0]="OCCLUSION",e[e.PIPELINE_STATISTICS=1]="PIPELINE_STATISTICS",e[e.TIMESTAMP=2]="TIMESTAMP"}(pa||(pa=e("ac",{}))),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(ha||(ha=e("ad",{}))),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(da||(da=e("ae",{})));var ya,Ca=e("af",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),Sa=e("ag",function(){function e(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h,d,v,g,x,y,C){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=0),void 0===u&&(u=0),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=1),void 0===p&&(p=0),void 0===h&&(h=0),void 0===d&&(d=new Ca),void 0===v&&(v=new Ca),void 0===g&&(g=!1),void 0===x&&(x=-1),void 0===y&&(y=1),void 0===C&&(C=1),this.maxVertexAttributes=e,this.maxVertexUniformVectors=t,this.maxFragmentUniformVectors=n,this.maxTextureUnits=i,this.maxImageUnits=o,this.maxVertexTextureUnits=a,this.maxColorRenderTargets=r,this.maxShaderStorageBufferBindings=c,this.maxShaderStorageBlockSize=s,this.maxUniformBufferBindings=l,this.maxUniformBlockSize=u,this.maxTextureSize=f,this.maxCubeMapTextureSize=_,this.uboOffsetAlignment=m,this.maxComputeSharedMemorySize=p,this.maxComputeWorkGroupInvocations=h,this.maxComputeWorkGroupSize=d,this.maxComputeWorkGroupCount=v,this.supportQuery=g,this.clipSpaceMinZ=x,this.screenSpaceSignY=y,this.clipSpaceSignY=C}return e.prototype.copy=function(e){return this.maxVertexAttributes=e.maxVertexAttributes,this.maxVertexUniformVectors=e.maxVertexUniformVectors,this.maxFragmentUniformVectors=e.maxFragmentUniformVectors,this.maxTextureUnits=e.maxTextureUnits,this.maxImageUnits=e.maxImageUnits,this.maxVertexTextureUnits=e.maxVertexTextureUnits,this.maxColorRenderTargets=e.maxColorRenderTargets,this.maxShaderStorageBufferBindings=e.maxShaderStorageBufferBindings,this.maxShaderStorageBlockSize=e.maxShaderStorageBlockSize,this.maxUniformBufferBindings=e.maxUniformBufferBindings,this.maxUniformBlockSize=e.maxUniformBlockSize,this.maxTextureSize=e.maxTextureSize,this.maxCubeMapTextureSize=e.maxCubeMapTextureSize,this.uboOffsetAlignment=e.uboOffsetAlignment,this.maxComputeSharedMemorySize=e.maxComputeSharedMemorySize,this.maxComputeWorkGroupInvocations=e.maxComputeWorkGroupInvocations,this.maxComputeWorkGroupSize.copy(e.maxComputeWorkGroupSize),this.maxComputeWorkGroupCount.copy(e.maxComputeWorkGroupCount),this.supportQuery=e.supportQuery,this.clipSpaceMinZ=e.clipSpaceMinZ,this.screenSpaceSignY=e.screenSpaceSignY,this.clipSpaceSignY=e.clipSpaceSignY,this},e}()),Ea=e("ah",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},e}()),Ta=e("ai",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.width=n,this.height=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this},e}()),Aa=e("aj",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.width=e,this.height=t,this.depth=n}return e.prototype.copy=function(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this},e}()),Ia=e("ak",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n}return e.prototype.copy=function(e){return this.mipLevel=e.mipLevel,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),ba=e("al",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=1),this.baseMipLevel=e,this.levelCount=t,this.baseArrayLayer=n,this.layerCount=i}return e.prototype.copy=function(e){return this.baseMipLevel=e.baseMipLevel,this.levelCount=e.levelCount,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this},e}()),Pa=e("am",function(){function e(e,t,n,i,o){void 0===e&&(e=new Ia),void 0===t&&(t=new Ea),void 0===n&&(n=new Ia),void 0===i&&(i=new Ea),void 0===o&&(o=new Aa),this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=o}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.extent.copy(e.extent),this},e}()),wa=e("an",function(){function e(e,t,n,i,o,a){void 0===e&&(e=new Ia),void 0===t&&(t=new Ea),void 0===n&&(n=new Aa),void 0===i&&(i=new Ia),void 0===o&&(o=new Ea),void 0===a&&(a=new Aa),this.srcSubres=e,this.srcOffset=t,this.srcExtent=n,this.dstSubres=i,this.dstOffset=o,this.dstExtent=a}return e.prototype.copy=function(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.srcExtent.copy(e.srcExtent),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.dstExtent.copy(e.dstExtent),this},e}()),Ra=e("ao",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=new Ea),void 0===i&&(i=new Aa),void 0===o&&(o=new Ia),this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=o}return e.prototype.copy=function(e){return this.buffStride=e.buffStride,this.buffTexHeight=e.buffTexHeight,this.texOffset.copy(e.texOffset),this.texExtent.copy(e.texExtent),this.texSubres.copy(e.texSubres),this},e}()),Na=e("ap",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=o,this.maxDepth=a}return e.prototype.copy=function(e){return this.left=e.left,this.top=e.top,this.width=e.width,this.height=e.height,this.minDepth=e.minDepth,this.maxDepth=e.maxDepth,this},e}()),Da=e("aq",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.z=n,this.w=i}return e.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},e}()),Oa=e("ar",function(){function e(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=0),this.bufferOffsets=e,this.samplerOffsets=t,this.flexibleSet=n}return e.prototype.copy=function(e){return this.bufferOffsets=e.bufferOffsets.slice(),this.samplerOffsets=e.samplerOffsets.slice(),this.flexibleSet=e.flexibleSet,this},e}()),Ma=e("as",function(){function e(e,t,n,i){void 0===e&&(e=null),void 0===t&&(t=Wo.ON),void 0===n&&(n=0),void 0===i&&(i=0),this.windowHandle=e,this.vsyncMode=t,this.width=n,this.height=i}return e.prototype.copy=function(e){return this.windowHandle=e.windowHandle,this.vsyncMode=e.vsyncMode,this.width=e.width,this.height=e.height,this},e}()),za=e("at",function(){function e(e){void 0===e&&(e=new Oa),this.bindingMappingInfo=e}return e.prototype.copy=function(e){return this.bindingMappingInfo.copy(e.bindingMappingInfo),this},e}()),La=e("au",function(){function e(e,t,n,i,o){void 0===e&&(e=Uo.NONE),void 0===t&&(t=ko.NONE),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=Bo.NONE),this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=o}return e.prototype.copy=function(e){return this.usage=e.usage,this.memUsage=e.memUsage,this.size=e.size,this.stride=e.stride,this.flags=e.flags,this},e}()),Fa=e("av",function(){function e(e,t,n){void 0===e&&(e=null),void 0===t&&(t=0),void 0===n&&(n=0),this.buffer=e,this.offset=t,this.range=n}return e.prototype.copy=function(e){return this.buffer=e.buffer,this.offset=e.offset,this.range=e.range,this},e}()),Ua=e("aw",function(){function e(e,t,n,i,o,a,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=o,this.instanceCount=a,this.firstInstance=r}return e.prototype.copy=function(e){return this.vertexCount=e.vertexCount,this.firstVertex=e.firstVertex,this.indexCount=e.indexCount,this.firstIndex=e.firstIndex,this.vertexOffset=e.vertexOffset,this.instanceCount=e.instanceCount,this.firstInstance=e.firstInstance,this},e}()),Ba=e("ax",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=null),void 0===o&&(o=0),this.groupCountX=e,this.groupCountY=t,this.groupCountZ=n,this.indirectBuffer=i,this.indirectOffset=o}return e.prototype.copy=function(e){return this.groupCountX=e.groupCountX,this.groupCountY=e.groupCountY,this.groupCountZ=e.groupCountZ,this.indirectBuffer=e.indirectBuffer,this.indirectOffset=e.indirectOffset,this},e}()),Ga=e("ay",function(){function e(e){void 0===e&&(e=[]),this.drawInfos=e}return e.prototype.copy=function(e){return xa(this.drawInfos,e.drawInfos,Ua),this},e}()),ka=e("az",function(){function e(e,t,n,i,o,a,r,c,s,l,u){void 0===e&&(e=Ho.TEX2D),void 0===t&&(t=jo.NONE),void 0===n&&(n=zo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=Vo.NONE),void 0===r&&(r=1),void 0===c&&(c=1),void 0===s&&(s=qo.ONE),void 0===l&&(l=1),void 0===u&&(u=0),this.type=e,this.usage=t,this.format=n,this.width=i,this.height=o,this.flags=a,this.layerCount=r,this.levelCount=c,this.samples=s,this.depth=l,this.externalRes=u}return e.prototype.copy=function(e){return this.type=e.type,this.usage=e.usage,this.format=e.format,this.width=e.width,this.height=e.height,this.flags=e.flags,this.layerCount=e.layerCount,this.levelCount=e.levelCount,this.samples=e.samples,this.depth=e.depth,this.externalRes=e.externalRes,this},e}()),Ha=e("aA",function(){function e(e,t,n,i,o,a,r){void 0===e&&(e=null),void 0===t&&(t=Ho.TEX2D),void 0===n&&(n=zo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=1),this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=o,this.baseLayer=a,this.layerCount=r}return e.prototype.copy=function(e){return this.texture=e.texture,this.type=e.type,this.format=e.format,this.baseLevel=e.baseLevel,this.levelCount=e.levelCount,this.baseLayer=e.baseLayer,this.layerCount=e.layerCount,this},e}()),ja=e("aB",function(){function e(e,t,n,i,o,a,r,c){void 0===e&&(e=Yo.LINEAR),void 0===t&&(t=Yo.LINEAR),void 0===n&&(n=Yo.NONE),void 0===i&&(i=Xo.WRAP),void 0===o&&(o=Xo.WRAP),void 0===a&&(a=Xo.WRAP),void 0===r&&(r=0),void 0===c&&(c=Ko.ALWAYS),this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=o,this.addressW=a,this.maxAnisotropy=r,this.cmpFunc=c}return e.prototype.copy=function(e){return this.minFilter=e.minFilter,this.magFilter=e.magFilter,this.mipFilter=e.mipFilter,this.addressU=e.addressU,this.addressV=e.addressV,this.addressW=e.addressW,this.maxAnisotropy=e.maxAnisotropy,this.cmpFunc=e.cmpFunc,this},e}()),Va=e("aC",function(){function e(e,t,n){void 0===e&&(e=""),void 0===t&&(t=Fo.UNKNOWN),void 0===n&&(n=0),this.name=e,this.type=t,this.count=n}return e.prototype.copy=function(e){return this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),qa=e("aD",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=[]),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.members=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,xa(this.members,e.members,Va),this.count=e.count,this},e}()),Wa=e("aE",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=Fo.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),Ya=e("aF",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),Xa=e("aG",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=Fo.UNKNOWN),void 0===o&&(o=0),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this},e}()),Ka=e("aH",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=Fo.UNKNOWN),void 0===o&&(o=0),void 0===a&&(a=Go.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o,this.memoryAccess=a}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),Qa=e("aI",function(){function e(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),void 0===o&&(o=Go.READ_WRITE),this.set=e,this.binding=t,this.name=n,this.count=i,this.memoryAccess=o}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this.memoryAccess=e.memoryAccess,this},e}()),Ja=e("aJ",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=""),void 0===i&&(i=0),this.set=e,this.binding=t,this.name=n,this.count=i}return e.prototype.copy=function(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this},e}()),Za=e("aK",function(){function e(e,t){void 0===e&&(e=ea.NONE),void 0===t&&(t=""),this.stage=e,this.source=t}return e.prototype.copy=function(e){return this.stage=e.stage,this.source=e.source,this},e}()),$a=e("aL",function(){function e(e,t,n,i,o,a){void 0===e&&(e=""),void 0===t&&(t=zo.UNKNOWN),void 0===n&&(n=!1),void 0===i&&(i=0),void 0===o&&(o=!1),void 0===a&&(a=0),this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=o,this.location=a}return e.prototype.copy=function(e){return this.name=e.name,this.format=e.format,this.isNormalized=e.isNormalized,this.stream=e.stream,this.isInstanced=e.isInstanced,this.location=e.location,this},e}()),er=e("aM",function(){function e(e,t,n,i,o,a,r,c,s,l){void 0===e&&(e=""),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=[]),void 0===a&&(a=[]),void 0===r&&(r=[]),void 0===c&&(c=[]),void 0===s&&(s=[]),void 0===l&&(l=[]),this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.buffers=o,this.samplerTextures=a,this.samplers=r,this.textures=c,this.images=s,this.subpassInputs=l}return e.prototype.copy=function(e){return this.name=e.name,xa(this.stages,e.stages,Za),xa(this.attributes,e.attributes,$a),xa(this.blocks,e.blocks,qa),xa(this.buffers,e.buffers,Qa),xa(this.samplerTextures,e.samplerTextures,Wa),xa(this.samplers,e.samplers,Ya),xa(this.textures,e.textures,Xa),xa(this.images,e.images,Ka),xa(this.subpassInputs,e.subpassInputs,Ja),this},e}()),tr=e("aN",function(){function e(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=null),this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i}return e.prototype.copy=function(e){return xa(this.attributes,e.attributes,$a),this.vertexBuffers=e.vertexBuffers.slice(),this.indexBuffer=e.indexBuffer,this.indirectBuffer=e.indirectBuffer,this},e}()),nr=e("aO",function(){function e(e,t,n,i,o,a,r){void 0===e&&(e=zo.UNKNOWN),void 0===t&&(t=qo.ONE),void 0===n&&(n=ta.CLEAR),void 0===i&&(i=na.STORE),void 0===o&&(o=[]),void 0===a&&(a=[ia.COLOR_ATTACHMENT_WRITE]),void 0===r&&(r=!1),this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.beginAccesses=o,this.endAccesses=a,this.isGeneralLayout=r}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.loadOp=e.loadOp,this.storeOp=e.storeOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this},e}()),ir=e("aP",function(){function e(e,t,n,i,o,a,r,c,s){void 0===e&&(e=zo.UNKNOWN),void 0===t&&(t=qo.ONE),void 0===n&&(n=ta.CLEAR),void 0===i&&(i=na.STORE),void 0===o&&(o=ta.CLEAR),void 0===a&&(a=na.STORE),void 0===r&&(r=[]),void 0===c&&(c=[ia.DEPTH_STENCIL_ATTACHMENT_WRITE]),void 0===s&&(s=!1),this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=o,this.stencilStoreOp=a,this.beginAccesses=r,this.endAccesses=c,this.isGeneralLayout=s}return e.prototype.copy=function(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.depthLoadOp=e.depthLoadOp,this.depthStoreOp=e.depthStoreOp,this.stencilLoadOp=e.stencilLoadOp,this.stencilStoreOp=e.stencilStoreOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this},e}()),or=e("aQ",function(){function e(e,t,n,i,o,a,r,c){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=-1),void 0===a&&(a=-1),void 0===r&&(r=oa.NONE),void 0===c&&(c=oa.NONE),this.inputs=e,this.colors=t,this.resolves=n,this.preserves=i,this.depthStencil=o,this.depthStencilResolve=a,this.depthResolveMode=r,this.stencilResolveMode=c}return e.prototype.copy=function(e){return this.inputs=e.inputs.slice(),this.colors=e.colors.slice(),this.resolves=e.resolves.slice(),this.preserves=e.preserves.slice(),this.depthStencil=e.depthStencil,this.depthStencilResolve=e.depthStencilResolve,this.depthResolveMode=e.depthResolveMode,this.stencilResolveMode=e.stencilResolveMode,this},e}()),ar=e("aR",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=[]),void 0===i&&(i=[]),this.srcSubpass=e,this.dstSubpass=t,this.srcAccesses=n,this.dstAccesses=i}return e.prototype.copy=function(e){return this.srcSubpass=e.srcSubpass,this.dstSubpass=e.dstSubpass,this.srcAccesses=e.srcAccesses.slice(),this.dstAccesses=e.dstAccesses.slice(),this},e}()),rr=e("aS",function(){function e(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=new ir),void 0===n&&(n=[]),void 0===i&&(i=[]),this.colorAttachments=e,this.depthStencilAttachment=t,this.subpasses=n,this.dependencies=i}return e.prototype.copy=function(e){return xa(this.colorAttachments,e.colorAttachments,nr),this.depthStencilAttachment.copy(e.depthStencilAttachment),xa(this.subpasses,e.subpasses,or),xa(this.dependencies,e.dependencies,ar),this},e}()),cr=e("aT",function(){function e(e,t){void 0===e&&(e=[]),void 0===t&&(t=[]),this.prevAccesses=e,this.nextAccesses=t}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this},e}()),sr=e("aU",function(){function e(e,t,n,i,o){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=!1),void 0===i&&(i=null),void 0===o&&(o=null),this.prevAccesses=e,this.nextAccesses=t,this.discardContents=n,this.srcQueue=i,this.dstQueue=o}return e.prototype.copy=function(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this.discardContents=e.discardContents,this.srcQueue=e.srcQueue,this.dstQueue=e.dstQueue,this},e}()),lr=e("aV",function(){function e(e,t,n){void 0===e&&(e=null),void 0===t&&(t=[]),void 0===n&&(n=null),this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n}return e.prototype.copy=function(e){return this.renderPass=e.renderPass,this.colorTextures=e.colorTextures.slice(),this.depthStencilTexture=e.depthStencilTexture,this},e}()),ur=e("aW",function(){function e(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=_a.UNKNOWN),void 0===n&&(n=0),void 0===i&&(i=ea.NONE),void 0===o&&(o=[]),this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=o}return e.prototype.copy=function(e){return this.binding=e.binding,this.descriptorType=e.descriptorType,this.count=e.count,this.stageFlags=e.stageFlags,this.immutableSamplers=e.immutableSamplers.slice(),this},e}()),fr=e("aX",function(){function e(e){void 0===e&&(e=[]),this.bindings=e}return e.prototype.copy=function(e){return xa(this.bindings,e.bindings,ur),this},e}()),_r=e("aY",function(){function e(e){void 0===e&&(e=null),this.layout=e}return e.prototype.copy=function(e){return this.layout=e.layout,this},e}()),mr=e("aZ",function(){function e(e){void 0===e&&(e=[]),this.setLayouts=e}return e.prototype.copy=function(e){return this.setLayouts=e.setLayouts.slice(),this},e}()),pr=e("a_",function(){function e(e){void 0===e&&(e=[]),this.attributes=e}return e.prototype.copy=function(e){return xa(this.attributes,e.attributes,$a),this},e}()),hr=e("a$",function(){function e(e,t){void 0===e&&(e=null),void 0===t&&(t=ha.PRIMARY),this.queue=e,this.type=t}return e.prototype.copy=function(e){return this.queue=e.queue,this.type=e.type,this},e}()),dr=e("b0",function(){function e(e){void 0===e&&(e=ma.GRAPHICS),this.type=e}return e.prototype.copy=function(e){return this.type=e.type,this},e}()),vr=e("b1",function(){function e(e,t,n){void 0===e&&(e=pa.OCCLUSION),void 0===t&&(t=65536),void 0===n&&(n=!0),this.type=e,this.maxQueryObjects=t,this.forceWait=n}return e.prototype.copy=function(e){return this.type=e.type,this.maxQueryObjects=e.maxQueryObjects,this.forceWait=e.forceWait,this},e}()),gr=e("b2",(function(e,t,n,i,o,a,r,c){void 0===e&&(e=""),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=Lo.NONE),void 0===o&&(o=!1),void 0===a&&(a=!1),void 0===r&&(r=!1),void 0===c&&(c=!1),this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=o,this.hasDepth=a,this.hasStencil=r,this.isCompressed=c})),xr=e("b3",function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this.bufferSize=e,this.textureSize=t}return e.prototype.copy=function(e){return this.bufferSize=e.bufferSize,this.textureSize=e.textureSize,this},e}()),yr=e("b4",function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.writeMask=e,this.compareMask=t,this.reference=n}return e.prototype.copy=function(e){return this.writeMask=e.writeMask,this.compareMask=e.compareMask,this.reference=e.reference,this},e}()),Cr=e("b5",function(){function e(e,t,n,i,o,a,r,c,s,l,u){void 0===e&&(e=new Na),void 0===t&&(t=new Ta),void 0===n&&(n=new Da),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=new yr),void 0===u&&(u=new yr),this.viewport=e,this.scissor=t,this.blendConstant=n,this.lineWidth=i,this.depthBiasConstant=o,this.depthBiasClamp=a,this.depthBiasSlope=r,this.depthMinBounds=c,this.depthMaxBounds=s,this.stencilStatesFront=l,this.stencilStatesBack=u}return e.prototype.copy=function(e){return this.viewport.copy(e.viewport),this.scissor.copy(e.scissor),this.blendConstant.copy(e.blendConstant),this.lineWidth=e.lineWidth,this.depthBiasConstant=e.depthBiasConstant,this.depthBiasClamp=e.depthBiasClamp,this.depthBiasSlope=e.depthBiasSlope,this.depthMinBounds=e.depthMinBounds,this.depthMaxBounds=e.depthMaxBounds,this.stencilStatesFront.copy(e.stencilStatesFront),this.stencilStatesBack.copy(e.stencilStatesBack),this},e}()),Sr=e("b6",function(){function e(t){this._objectType=Ro.UNKNOWN,this._objectID=0,this._typedID=0,this._objectType=t,this._objectID=e._idTable[Ro.UNKNOWN]++,this._typedID=e._idTable[t]++}return W(e,[{key:"objectType",get:function(){return this._objectType}},{key:"objectID",get:function(){return this._objectID}},{key:"typedID",get:function(){return this._typedID}}]),e}());Sr._idTable=Array(Ro.COUNT).fill(65536),function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(ya||(ya=e("b7",{})));var Er=e("b8",Object.freeze([new gr("UNKNOWN",0,0,Lo.NONE,!1,!1,!1,!1),new gr("A8",1,1,Lo.UNORM,!0,!1,!1,!1),new gr("L8",1,1,Lo.UNORM,!1,!1,!1,!1),new gr("LA8",1,2,Lo.UNORM,!0,!1,!1,!1),new gr("R8",1,1,Lo.UNORM,!1,!1,!1,!1),new gr("R8SN",1,1,Lo.SNORM,!1,!1,!1,!1),new gr("R8UI",1,1,Lo.UINT,!1,!1,!1,!1),new gr("R8I",1,1,Lo.INT,!1,!1,!1,!1),new gr("R16F",2,1,Lo.FLOAT,!1,!1,!1,!1),new gr("R16UI",2,1,Lo.UINT,!1,!1,!1,!1),new gr("R16I",2,1,Lo.INT,!1,!1,!1,!1),new gr("R32F",4,1,Lo.FLOAT,!1,!1,!1,!1),new gr("R32UI",4,1,Lo.UINT,!1,!1,!1,!1),new gr("R32I",4,1,Lo.INT,!1,!1,!1,!1),new gr("RG8",2,2,Lo.UNORM,!1,!1,!1,!1),new gr("RG8SN",2,2,Lo.SNORM,!1,!1,!1,!1),new gr("RG8UI",2,2,Lo.UINT,!1,!1,!1,!1),new gr("RG8I",2,2,Lo.INT,!1,!1,!1,!1),new gr("RG16F",4,2,Lo.FLOAT,!1,!1,!1,!1),new gr("RG16UI",4,2,Lo.UINT,!1,!1,!1,!1),new gr("RG16I",4,2,Lo.INT,!1,!1,!1,!1),new gr("RG32F",8,2,Lo.FLOAT,!1,!1,!1,!1),new gr("RG32UI",8,2,Lo.UINT,!1,!1,!1,!1),new gr("RG32I",8,2,Lo.INT,!1,!1,!1,!1),new gr("RGB8",3,3,Lo.UNORM,!1,!1,!1,!1),new gr("SRGB8",3,3,Lo.UNORM,!1,!1,!1,!1),new gr("RGB8SN",3,3,Lo.SNORM,!1,!1,!1,!1),new gr("RGB8UI",3,3,Lo.UINT,!1,!1,!1,!1),new gr("RGB8I",3,3,Lo.INT,!1,!1,!1,!1),new gr("RGB16F",6,3,Lo.FLOAT,!1,!1,!1,!1),new gr("RGB16UI",6,3,Lo.UINT,!1,!1,!1,!1),new gr("RGB16I",6,3,Lo.INT,!1,!1,!1,!1),new gr("RGB32F",12,3,Lo.FLOAT,!1,!1,!1,!1),new gr("RGB32UI",12,3,Lo.UINT,!1,!1,!1,!1),new gr("RGB32I",12,3,Lo.INT,!1,!1,!1,!1),new gr("RGBA8",4,4,Lo.UNORM,!0,!1,!1,!1),new gr("BGRA8",4,4,Lo.UNORM,!0,!1,!1,!1),new gr("SRGB8_A8",4,4,Lo.UNORM,!0,!1,!1,!1),new gr("RGBA8SN",4,4,Lo.SNORM,!0,!1,!1,!1),new gr("RGBA8UI",4,4,Lo.UINT,!0,!1,!1,!1),new gr("RGBA8I",4,4,Lo.INT,!0,!1,!1,!1),new gr("RGBA16F",8,4,Lo.FLOAT,!0,!1,!1,!1),new gr("RGBA16UI",8,4,Lo.UINT,!0,!1,!1,!1),new gr("RGBA16I",8,4,Lo.INT,!0,!1,!1,!1),new gr("RGBA32F",16,4,Lo.FLOAT,!0,!1,!1,!1),new gr("RGBA32UI",16,4,Lo.UINT,!0,!1,!1,!1),new gr("RGBA32I",16,4,Lo.INT,!0,!1,!1,!1),new gr("R5G6B5",2,3,Lo.UNORM,!1,!1,!1,!1),new gr("R11G11B10F",4,3,Lo.FLOAT,!1,!1,!1,!1),new gr("RGB5A1",2,4,Lo.UNORM,!0,!1,!1,!1),new gr("RGBA4",2,4,Lo.UNORM,!0,!1,!1,!1),new gr("RGB10A2",2,4,Lo.UNORM,!0,!1,!1,!1),new gr("RGB10A2UI",2,4,Lo.UINT,!0,!1,!1,!1),new gr("RGB9E5",2,4,Lo.FLOAT,!0,!1,!1,!1),new gr("DEPTH",4,1,Lo.FLOAT,!1,!0,!1,!1),new gr("DEPTH_STENCIL",5,2,Lo.FLOAT,!1,!0,!0,!1),new gr("BC1",1,3,Lo.UNORM,!1,!1,!1,!0),new gr("BC1_ALPHA",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC1_SRGB",1,3,Lo.UNORM,!1,!1,!1,!0),new gr("BC1_SRGB_ALPHA",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC2",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC2_SRGB",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC3",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC3_SRGB",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC4",1,1,Lo.UNORM,!1,!1,!1,!0),new gr("BC4_SNORM",1,1,Lo.SNORM,!1,!1,!1,!0),new gr("BC5",1,2,Lo.UNORM,!1,!1,!1,!0),new gr("BC5_SNORM",1,2,Lo.SNORM,!1,!1,!1,!0),new gr("BC6H_UF16",1,3,Lo.UFLOAT,!1,!1,!1,!0),new gr("BC6H_SF16",1,3,Lo.FLOAT,!1,!1,!1,!0),new gr("BC7",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("BC7_SRGB",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ETC_RGB8",1,3,Lo.UNORM,!1,!1,!1,!0),new gr("ETC2_RGB8",1,3,Lo.UNORM,!1,!1,!1,!0),new gr("ETC2_SRGB8",1,3,Lo.UNORM,!1,!1,!1,!0),new gr("ETC2_RGB8_A1",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ETC2_SRGB8_A1",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ETC2_RGBA8",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("ETC2_SRGB8_A8",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("EAC_R11",1,1,Lo.UNORM,!1,!1,!1,!0),new gr("EAC_R11SN",1,1,Lo.SNORM,!1,!1,!1,!0),new gr("EAC_RG11",2,2,Lo.UNORM,!1,!1,!1,!0),new gr("EAC_RG11SN",2,2,Lo.SNORM,!1,!1,!1,!0),new gr("PVRTC_RGB2",2,3,Lo.UNORM,!1,!1,!1,!0),new gr("PVRTC_RGBA2",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("PVRTC_RGB4",2,3,Lo.UNORM,!1,!1,!1,!0),new gr("PVRTC_RGBA4",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("PVRTC2_2BPP",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("PVRTC2_4BPP",2,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_4x4",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_5x4",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_5x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_6x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_6x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_8x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_8x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_8x8",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_10x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_10x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_10x8",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_10x10",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_12x10",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_RGBA_12x12",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_4x4",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_5x4",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_5x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_6x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_6x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_8x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_8x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_8x8",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_10x5",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_10x6",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_10x8",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_10x10",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_12x10",1,4,Lo.UNORM,!0,!1,!1,!0),new gr("ASTC_SRGBA_12x12",1,4,Lo.UNORM,!0,!1,!1,!0)])),Tr=e("b9",_a.UNIFORM_BUFFER|_a.DYNAMIC_UNIFORM_BUFFER|_a.STORAGE_BUFFER|_a.DYNAMIC_STORAGE_BUFFER),Ar=e("ba",_a.SAMPLER_TEXTURE|_a.SAMPLER|_a.TEXTURE|_a.STORAGE_IMAGE|_a.INPUT_ATTACHMENT),Ir=e("bb",_a.DYNAMIC_STORAGE_BUFFER|_a.DYNAMIC_UNIFORM_BUFFER),br=e("bc",28);function Pr(e){return e>0&&0==(e&e-1)}function wr(e,t,n,i){if(!Er[e].isCompressed)return t*n*i*Er[e].size;switch(e){case zo.BC1:case zo.BC1_ALPHA:case zo.BC1_SRGB:case zo.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case zo.BC2:case zo.BC2_SRGB:case zo.BC3:case zo.BC3_SRGB:case zo.BC4:case zo.BC4_SNORM:case zo.BC6H_SF16:case zo.BC6H_UF16:case zo.BC7:case zo.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zo.BC5:case zo.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case zo.ETC_RGB8:case zo.ETC2_RGB8:case zo.ETC2_SRGB8:case zo.ETC2_RGB8_A1:case zo.EAC_R11:case zo.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case zo.ETC2_RGBA8:case zo.ETC2_SRGB8_A1:case zo.EAC_RG11:case zo.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zo.PVRTC_RGB2:case zo.PVRTC_RGBA2:case zo.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case zo.PVRTC_RGB4:case zo.PVRTC_RGBA4:case zo.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case zo.ASTC_RGBA_4X4:case zo.ASTC_SRGBA_4X4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zo.ASTC_RGBA_5X4:case zo.ASTC_SRGBA_5X4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case zo.ASTC_RGBA_5X5:case zo.ASTC_SRGBA_5X5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case zo.ASTC_RGBA_6X5:case zo.ASTC_SRGBA_6X5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case zo.ASTC_RGBA_6X6:case zo.ASTC_SRGBA_6X6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case zo.ASTC_RGBA_8X5:case zo.ASTC_SRGBA_8X5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case zo.ASTC_RGBA_8X6:case zo.ASTC_SRGBA_8X6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case zo.ASTC_RGBA_8X8:case zo.ASTC_SRGBA_8X8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case zo.ASTC_RGBA_10X5:case zo.ASTC_SRGBA_10X5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case zo.ASTC_RGBA_10X6:case zo.ASTC_SRGBA_10X6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case zo.ASTC_RGBA_10X8:case zo.ASTC_SRGBA_10X8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case zo.ASTC_RGBA_10X10:case zo.ASTC_SRGBA_10X10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case zo.ASTC_RGBA_12X10:case zo.ASTC_SRGBA_12X10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case zo.ASTC_RGBA_12X12:case zo.ASTC_SRGBA_12X12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function Rr(e,t,n,i,o){for(var a=0,r=0;r<o;++r)a+=wr(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return a}var Nr=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function Dr(e){return Nr[e]||0}function Or(e){var t=e.size/e.count;switch(e.type){case Lo.UNORM:case Lo.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case Lo.SNORM:case Lo.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case Lo.FLOAT:return Float32Array}return Float32Array}var Mr=Object.freeze({__proto__:null,get ObjectType(){return Ro},get Status(){return No},get API(){return Do},get SurfaceTransform(){return Oo},get Feature(){return Mo},get Format(){return zo},get FormatType(){return Lo},get Type(){return Fo},get BufferUsageBit(){return Uo},get BufferFlagBit(){return Bo},get MemoryAccessBit(){return Go},get MemoryUsageBit(){return ko},get TextureType(){return Ho},get TextureUsageBit(){return jo},get TextureFlagBit(){return Vo},get SampleCount(){return qo},get VsyncMode(){return Wo},get Filter(){return Yo},get Address(){return Xo},get ComparisonFunc(){return Ko},get StencilOp(){return Qo},get BlendFactor(){return Jo},get BlendOp(){return Zo},get ColorMask(){return $o},get ShaderStageFlagBit(){return ea},get LoadOp(){return ta},get StoreOp(){return na},get AccessType(){return ia},get ResolveMode(){return oa},get PipelineBindPoint(){return aa},get PrimitiveMode(){return ra},get PolygonMode(){return ca},get ShadeModel(){return sa},get CullMode(){return la},get DynamicStateFlagBit(){return ua},get StencilFace(){return fa},get DescriptorType(){return _a},get QueueType(){return ma},get QueryType(){return pa},get CommandBufferType(){return ha},get ClearFlagBit(){return da},Size:Ca,DeviceCaps:Sa,Offset:Ea,Rect:Ta,Extent:Aa,TextureSubresLayers:Ia,TextureSubresRange:ba,TextureCopy:Pa,TextureBlit:wa,BufferTextureCopy:Ra,Viewport:Na,Color:Da,BindingMappingInfo:Oa,SwapchainInfo:Ma,DeviceInfo:za,BufferInfo:La,BufferViewInfo:Fa,DrawInfo:Ua,DispatchInfo:Ba,IndirectBuffer:Ga,TextureInfo:ka,TextureViewInfo:Ha,SamplerInfo:ja,Uniform:Va,UniformBlock:qa,UniformSamplerTexture:Wa,UniformSampler:Ya,UniformTexture:Xa,UniformStorageImage:Ka,UniformStorageBuffer:Qa,UniformInputAttachment:Ja,ShaderStage:Za,Attribute:$a,ShaderInfo:er,InputAssemblerInfo:tr,ColorAttachment:nr,DepthStencilAttachment:ir,SubpassInfo:or,SubpassDependency:ar,RenderPassInfo:rr,GlobalBarrierInfo:cr,TextureBarrierInfo:sr,FramebufferInfo:lr,DescriptorSetLayoutBinding:ur,DescriptorSetLayoutInfo:fr,DescriptorSetInfo:_r,PipelineLayoutInfo:mr,InputState:pr,CommandBufferInfo:hr,QueueInfo:dr,QueryPoolInfo:vr,FormatInfo:gr,MemoryStatus:xr,DynamicStencilStates:yr,DynamicStates:Cr,GFXObject:Sr,get AttributeName(){return ya},FormatInfos:Er,DESCRIPTOR_BUFFER_TYPE:Tr,DESCRIPTOR_SAMPLER_TYPE:Ar,DESCRIPTOR_DYNAMIC_TYPE:Ir,DRAW_INFO_SIZE:br,IsPowerOf2:Pr,FormatSize:wr,FormatSurfaceSize:Rr,GetTypeSize:Dr,getTypedArrayConstructor:Or}),zr=e("B",function(e){function t(){var t;return(t=e.call(this,Ro.BUFFER)||this)._usage=Uo.NONE,t._memUsage=ko.NONE,t._size=0,t._stride=1,t._count=0,t._flags=Bo.NONE,t._isBufferView=!1,t}return X(t,e),W(t,[{key:"usage",get:function(){return this._usage}},{key:"memUsage",get:function(){return this._memUsage}},{key:"size",get:function(){return this._size}},{key:"stride",get:function(){return this._stride}},{key:"count",get:function(){return this._count}},{key:"flags",get:function(){return this._flags}}]),t}(Sr)),Lr=e("u",function(e){function t(){var t;return(t=e.call(this,Ro.COMMAND_BUFFER)||this)._queue=null,t._type=ha.PRIMARY,t._numDrawCalls=0,t._numInstances=0,t._numTris=0,t}return X(t,e),W(t,[{key:"type",get:function(){return this._type}},{key:"queue",get:function(){return this._queue}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}}]),t}(Sr)),Fr=e("bi",function(){function e(){this._gfxAPI=Do.UNKNOWN,this._renderer="",this._vendor="",this._features=new Array(Mo.COUNT),this._queue=null,this._cmdBuff=null,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new xr,this._caps=new Sa,this._bindingMappingInfo=new Oa,this._samplers=new Map,this._globalBarriers=new Map,this._textureBarriers=new Map}return e.prototype.hasFeature=function(e){return this._features[e]},W(e,[{key:"gfxAPI",get:function(){return this._gfxAPI}},{key:"queue",get:function(){return this._queue}},{key:"commandBuffer",get:function(){return this._cmdBuff}},{key:"renderer",get:function(){return this._renderer}},{key:"vendor",get:function(){return this._vendor}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}},{key:"memoryStatus",get:function(){return this._memoryStatus}},{key:"capabilities",get:function(){return this._caps}},{key:"bindingMappingInfo",get:function(){return this._bindingMappingInfo}}]),e}());Fr.canvas=void 0;var Ur=e("bj",function(e){function t(){var t;return(t=e.call(this,Ro.SWAPCHAIN)||this)._transform=Oo.IDENTITY,t._colorTexture=null,t._depthStencilTexture=null,t}return X(t,e),W(t,[{key:"colorTexture",get:function(){return this._colorTexture}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"surfaceTransform",get:function(){return this._transform}},{key:"width",get:function(){return this._colorTexture.width}},{key:"height",get:function(){return this._colorTexture.height}}]),t}(Sr)),Br=e("bk",function(e){function t(){var t;return(t=e.call(this,Ro.FRAMEBUFFER)||this)._renderPass=null,t._colorTextures=[],t._depthStencilTexture=null,t}return X(t,e),W(t,[{key:"renderPass",get:function(){return this._renderPass}},{key:"colorTextures",get:function(){return this._colorTextures}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}}]),t}(Sr)),Gr=String.prototype.charCodeAt;function kr(e){return this[e]}function Hr(e,t){for(var n=e.length,i=t^n,o=0,a="string"==typeof e?Gr:kr;n>=4;){var r=255&a.call(e,o)|(255&a.call(e,++o))<<8|(255&a.call(e,++o))<<16|(255&a.call(e,++o))<<24;r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^(r=1540483477*(65535&(r^=r>>>24))+((1540483477*(r>>>16)&65535)<<16)),n-=4,++o}switch(n){case 3:i^=(255&a.call(e,o+2))<<16;case 2:i^=(255&a.call(e,o+1))<<8;case 1:i=1540483477*(65535&(i^=255&a.call(e,o)))+((1540483477*(i>>>16)&65535)<<16)}return i=1540483477*(65535&(i^=i>>>13))+((1540483477*(i>>>16)&65535)<<16),(i^=i>>>15)>>>0}var jr=e("bl",function(e){function t(){var t;return(t=e.call(this,Ro.INPUT_ASSEMBLER)||this)._attributes=[],t._attributesHash=0,t._vertexBuffers=[],t._indexBuffer=null,t._indirectBuffer=null,t._drawInfo=new Ua,t}X(t,e);var n=t.prototype;return n.getVertexBuffer=function(e){return void 0===e&&(e=0),e<this._vertexBuffers.length?this._vertexBuffers[e]:null},n.computeAttributesHash=function(){for(var e="attrs",t=0;t<this.attributes.length;++t){var n=this.attributes[t];e+=","+n.name+","+n.format+","+n.isNormalized+","+n.stream+","+n.isInstanced}return Hr(e,666)},W(t,[{key:"attributes",get:function(){return this._attributes}},{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}},{key:"attributesHash",get:function(){return this._attributesHash}},{key:"vertexCount",get:function(){return this._drawInfo.vertexCount},set:function(e){this._drawInfo.vertexCount=e}},{key:"firstVertex",get:function(){return this._drawInfo.firstVertex},set:function(e){this._drawInfo.firstVertex=e}},{key:"indexCount",get:function(){return this._drawInfo.indexCount},set:function(e){this._drawInfo.indexCount=e}},{key:"firstIndex",get:function(){return this._drawInfo.firstIndex},set:function(e){this._drawInfo.firstIndex=e}},{key:"vertexOffset",get:function(){return this._drawInfo.vertexOffset},set:function(e){this._drawInfo.vertexOffset=e}},{key:"instanceCount",get:function(){return this._drawInfo.instanceCount},set:function(e){this._drawInfo.instanceCount=e}},{key:"firstInstance",get:function(){return this._drawInfo.firstInstance},set:function(e){this._drawInfo.firstInstance=e}},{key:"drawInfo",get:function(){return this._drawInfo}}]),t}(Sr)),Vr=e("D",function(e){function t(){var t;return(t=e.call(this,Ro.DESCRIPTOR_SET)||this)._layout=null,t._buffers=[],t._textures=[],t._samplers=[],t._isDirty=!1,t}X(t,e);var n=t.prototype;return n.bindBuffer=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&Tr){var a=this._layout.descriptorIndices[e];this._buffers[a+n]!==t&&(this._buffers[a+n]=t,this._isDirty=!0)}},n.bindSampler=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&Ar){var a=this._layout.descriptorIndices[e];this._samplers[a+n]!==t&&(this._samplers[a+n]=t,this._isDirty=!0)}},n.bindTexture=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o&&o.descriptorType&Ar){var a=this._layout.descriptorIndices[e];this._textures[a+n]!==t&&(this._textures[a+n]=t,this._isDirty=!0)}},n.getBuffer=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._buffers[n+t]},n.getSampler=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._samplers[n+t]},n.getTexture=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._textures[n+t]},W(t,[{key:"layout",get:function(){return this._layout}}]),t}(Sr)),qr=e("bm",function(e){function t(){var t;return(t=e.call(this,Ro.DESCRIPTOR_SET_LAYOUT)||this)._bindings=[],t._bindingIndices=[],t._descriptorIndices=[],t}return X(t,e),W(t,[{key:"bindings",get:function(){return this._bindings}},{key:"bindingIndices",get:function(){return this._bindingIndices}},{key:"descriptorIndices",get:function(){return this._descriptorIndices}}]),t}(Sr)),Wr=e("bn",function(e){function t(){var t;return(t=e.call(this,Ro.PIPELINE_LAYOUT)||this)._setLayouts=[],t}return X(t,e),W(t,[{key:"setLayouts",get:function(){return this._setLayouts}}]),t}(Sr)),Yr=e("bo",function(){function e(e,t,n,i,o,a,r,c,s,l,u,f){void 0===e&&(e=!1),void 0===t&&(t=ca.FILL),void 0===n&&(n=sa.GOURAND),void 0===i&&(i=la.BACK),void 0===o&&(o=!0),void 0===a&&(a=!1),void 0===r&&(r=0),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=!0),void 0===u&&(u=!1),void 0===f&&(f=1),this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=o,this.depthBiasEnabled=a,this.depthBias=r,this.depthBiasClamp=c,this.depthBiasSlop=s,this.isDepthClip=l,this.isMultisample=u,this.lineWidth=f}var t=e.prototype;return t.reset=function(){this.isDiscard=!1,this.polygonMode=ca.FILL,this.shadeModel=sa.GOURAND,this.cullMode=la.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},W(e,[{key:"native",get:function(){return this}}]),e}()),Xr=e("bp",function(){function e(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h,d,v,g){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===n&&(n=Ko.LESS),void 0===i&&(i=!1),void 0===o&&(o=Ko.ALWAYS),void 0===a&&(a=65535),void 0===r&&(r=65535),void 0===c&&(c=Qo.KEEP),void 0===s&&(s=Qo.KEEP),void 0===l&&(l=Qo.KEEP),void 0===u&&(u=1),void 0===f&&(f=!1),void 0===_&&(_=Ko.ALWAYS),void 0===m&&(m=65535),void 0===p&&(p=65535),void 0===h&&(h=Qo.KEEP),void 0===d&&(d=Qo.KEEP),void 0===v&&(v=Qo.KEEP),void 0===g&&(g=1),this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=o,this.stencilReadMaskFront=a,this.stencilWriteMaskFront=r,this.stencilFailOpFront=c,this.stencilZFailOpFront=s,this.stencilPassOpFront=l,this.stencilRefFront=u,this.stencilTestBack=f,this.stencilFuncBack=_,this.stencilReadMaskBack=m,this.stencilWriteMaskBack=p,this.stencilFailOpBack=h,this.stencilZFailOpBack=d,this.stencilPassOpBack=v,this.stencilRefBack=g}var t=e.prototype;return t.reset=function(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=Ko.LESS,this.stencilTestFront=!1,this.stencilFuncFront=Ko.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=Qo.KEEP,this.stencilZFailOpFront=Qo.KEEP,this.stencilPassOpFront=Qo.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=Ko.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=Qo.KEEP,this.stencilZFailOpBack=Qo.KEEP,this.stencilPassOpBack=Qo.KEEP,this.stencilRefBack=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},W(e,[{key:"native",get:function(){return this}}]),e}()),Kr=e("bq",function(){function e(e,t,n,i,o,a,r,c){void 0===e&&(e=!1),void 0===t&&(t=Jo.ONE),void 0===n&&(n=Jo.ZERO),void 0===i&&(i=Zo.ADD),void 0===o&&(o=Jo.ONE),void 0===a&&(a=Jo.ZERO),void 0===r&&(r=Zo.ADD),void 0===c&&(c=$o.ALL),this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=o,this.blendDstAlpha=a,this.blendAlphaEq=r,this.blendColorMask=c}var t=e.prototype;return t.reset=function(){this.blend=!1,this.blendSrc=Jo.ONE,this.blendDst=Jo.ZERO,this.blendEq=Zo.ADD,this.blendSrcAlpha=Jo.ONE,this.blendDstAlpha=Jo.ZERO,this.blendAlphaEq=Zo.ADD,this.blendColorMask=$o.ALL},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},e}()),Qr=e("br",function(){function e(e,t,n,i){void 0===e&&(e=!1),void 0===t&&(t=!1),void 0===n&&(n=new Da),void 0===i&&(i=[new Kr]),this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}var t=e.prototype;return t.setTarget=function(e,t){var n=this.targets[e];n||(n=this.targets[e]=new Kr),Object.assign(n,t)},t.reset=function(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()},t.destroy=function(){},W(e,[{key:"native",get:function(){return this}}]),e}()),Jr=e("bs",(function(e,t,n,i,o,a,r,c,s,l){void 0===e&&(e=null),void 0===t&&(t=null),void 0===n&&(n=null),void 0===i&&(i=new pr),void 0===o&&(o=new Yr),void 0===a&&(a=new Xr),void 0===r&&(r=new Qr),void 0===c&&(c=ra.TRIANGLE_LIST),void 0===s&&(s=ua.NONE),void 0===l&&(l=aa.GRAPHICS),this.shader=e,this.pipelineLayout=t,this.renderPass=n,this.inputState=i,this.rasterizerState=o,this.depthStencilState=a,this.blendState=r,this.primitive=c,this.dynamicStates=s,this.bindPoint=l})),Zr=e("bt",function(e){function t(){var t;return(t=e.call(this,Ro.PIPELINE_STATE)||this)._shader=null,t._pipelineLayout=null,t._primitive=ra.TRIANGLE_LIST,t._is=null,t._rs=new Yr,t._dss=new Xr,t._bs=new Qr,t._dynamicStates=ua.NONE,t._renderPass=null,t}return X(t,e),W(t,[{key:"shader",get:function(){return this._shader}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}},{key:"primitive",get:function(){return this._primitive}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"inputState",get:function(){return this._is}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"renderPass",get:function(){return this._renderPass}}]),t}(Sr)),$r=e("bu",function(e){function t(){var t;return(t=e.call(this,Ro.QUEUE)||this)._type=ma.GRAPHICS,t}return X(t,e),W(t,[{key:"type",get:function(){return this._type}}]),t}(Sr)),ec=e("bv",function(e){function t(){var t;return(t=e.call(this,Ro.RENDER_PASS)||this)._colorInfos=[],t._depthStencilInfo=null,t._subpasses=[],t._hash=0,t}return X(t,e),t.prototype.computeHash=function(){var e="";if(this._subpasses.length)for(var t=0;t<this._subpasses.length;++t){var n=this._subpasses[t];if(n.inputs.length){e+="ia";for(var i=0;i<n.inputs.length;++i){var o=this._colorInfos[n.inputs[i]];e+=","+o.format+","+o.sampleCount}}if(n.colors.length){e+="ca";for(var a=0;a<n.inputs.length;++a){var r=this._colorInfos[n.inputs[a]];e+=","+r.format+","+r.sampleCount}}if(n.depthStencil>=0){var c=this._colorInfos[n.depthStencil];e+="ds,"+c.format+","+c.sampleCount}}else{e+="ca";for(var s=0;s<this._colorInfos.length;++s){var l=this._colorInfos[s];e+=","+l.format+","+l.sampleCount}var u=this._depthStencilInfo;u&&(e+="ds,"+u.format+","+u.sampleCount)}return Hr(e,666)},W(t,[{key:"colorAttachments",get:function(){return this._colorInfos}},{key:"depthStencilAttachment",get:function(){return this._depthStencilInfo}},{key:"subPasses",get:function(){return this._subpasses}},{key:"hash",get:function(){return this._hash}}]),t}(Sr)),tc=e("bw",function(e){function t(t,n){var i;return(i=e.call(this,Ro.SAMPLER)||this)._info=new ja,i._hash=0,i._info.copy(t),i._hash=n,i}return X(t,e),t.computeHash=function(e){var t=e.minFilter;return t|=e.magFilter<<2,t|=e.mipFilter<<4,t|=e.addressU<<6,t|=e.addressV<<8,t|=e.addressW<<10,(t|=e.maxAnisotropy<<12)|e.cmpFunc<<16},t.unpackFromHash=function(e){var t=new ja;return t.minFilter=(3&e)>>0,t.magFilter=(3&e)>>2,t.mipFilter=(3&e)>>4,t.addressU=(3&e)>>6,t.addressV=(3&e)>>8,t.addressW=(3&e)>>10,t.maxAnisotropy=(15&e)>>12,t.cmpFunc=(7&e)>>16,t},W(t,[{key:"info",get:function(){return this._info}},{key:"hash",get:function(){return this._hash}}]),t}(Sr)),nc=e("bx",function(e){function t(){var t;return(t=e.call(this,Ro.SHADER)||this)._name="",t._stages=[],t._attributes=[],t._blocks=[],t._samplers=[],t}return X(t,e),W(t,[{key:"name",get:function(){return this._name}},{key:"attributes",get:function(){return this._attributes}},{key:"blocks",get:function(){return this._blocks}},{key:"samplers",get:function(){return this._samplers}}]),t}(Sr)),ic=e("by",function(e){function t(){var t;return(t=e.call(this,Ro.TEXTURE)||this)._type=Ho.TEX2D,t._usage=jo.NONE,t._format=zo.UNKNOWN,t._width=0,t._height=0,t._depth=1,t._layerCount=1,t._levelCount=1,t._samples=qo.ONE,t._flags=Vo.NONE,t._isPowerOf2=!1,t._size=0,t}return X(t,e),W(t,[{key:"type",get:function(){return this._type}},{key:"usage",get:function(){return this._usage}},{key:"format",get:function(){return this._format}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"depth",get:function(){return this._depth}},{key:"layerCount",get:function(){return this._layerCount}},{key:"levelCount",get:function(){return this._levelCount}},{key:"samples",get:function(){return this._samples}},{key:"flags",get:function(){return this._flags}},{key:"size",get:function(){return this._size}}]),t}(Sr)),oc=e("bz",function(e){function t(t,n){var i;return(i=e.call(this,Ro.GLOBAL_BARRIER)||this)._info=new cr,i._hash=0,i._info.copy(t),i._hash=n,i}return X(t,e),t.computeHash=function(e){for(var t="prev:",n=0;n<e.prevAccesses.length;++n)t+=" "+e.prevAccesses[n];t+="next:";for(var i=0;i<e.nextAccesses.length;++i)t+=" "+e.nextAccesses[i];return Hr(t,666)},W(t,[{key:"info",get:function(){return this._info}},{key:"hash",get:function(){return this._hash}}]),t}(Sr)),ac=e("bA",function(e){function t(t,n){var i;return(i=e.call(this,Ro.TEXTURE_BARRIER)||this)._info=new sr,i._hash=0,i._info.copy(t),i._hash=n,i}return X(t,e),t.computeHash=function(e){for(var t="prev:",n=0;n<e.prevAccesses.length;++n)t+=" "+e.prevAccesses[n];t+="next:";for(var i=0;i<e.nextAccesses.length;++i)t+=" "+e.nextAccesses[i];return t+=e.discardContents,t+=e.srcQueue?e.srcQueue.type:0,Hr(t+=e.dstQueue?e.dstQueue.type:0,666)},W(t,[{key:"info",get:function(){return this._info}},{key:"hash",get:function(){return this._hash}}]),t}(Sr)),rc={Device:Fr,Swapchain:Ur,Buffer:zr,Texture:ic,Sampler:tc,Shader:nc,InputAssembler:jr,RenderPass:ec,Framebuffer:Br,DescriptorSet:Vr,DescriptorSetLayout:qr,PipelineLayout:Wr,PipelineState:Zr,CommandBuffer:Lr,Queue:$r,GlobalBarrier:oc,TextureBarrier:ac,RasterizerState:Yr,BlendState:Qr,BlendTarget:Kr,DepthStencilState:Xr,PipelineStateInfo:Jr};Object.assign(rc,Mr),s.gfx=rc;var cc,sc={Obj:"GFXObject",DRAW_INFO_SIZE:"GFX_DRAW_INFO_SIZE",DESCRIPTOR_BUFFER_TYPE:"",DESCRIPTOR_SAMPLER_TYPE:"",DESCRIPTOR_DYNAMIC_TYPE:"",getTypedArrayConstructor:""};for(var lc in s.gfx)if("__esModule"!==lc){var uc=sc[lc];""===uc?uc=lc:void 0===uc&&(uc="GFX"+lc),ri(s,"cc",[{name:uc,newName:lc,target:s.gfx,targetName:"cc.gfx"}])}!function(e){e[e.ALL=0]="ALL",e[e.CLOSEST=1]="CLOSEST",e[e.ANY=2]="ANY"}(cc||(cc=e("f1",{})));var fc,_c,mc,pc,hc,dc,vc,gc,xc=(fc=new Di(0,0,0),function(e,t){var n=Di.dot(e.d,t.n);if(Math.abs(n)<Number.EPSILON)return 0;Di.multiplyScalar(fc,t.n,t.d);var i=Di.dot(Di.subtract(fc,fc,e.o),t.n)/n;return i<0?0:i}),yc=(_c=new Di(0,0,0),mc=new Di(0,0,0),pc=new Di(0,0,0),hc=new Di(0,0,0),dc=new Di(0,0,0),function(e,t,n){Di.subtract(_c,t.b,t.a),Di.subtract(mc,t.c,t.a),Di.cross(pc,e.d,mc);var i=Di.dot(_c,pc);if(i<Number.EPSILON&&(!n||i>-Number.EPSILON))return 0;var o=1/i;Di.subtract(hc,e.o,t.a);var a=Di.dot(hc,pc)*o;if(a<0||a>1)return 0;Di.cross(dc,hc,_c);var r=Di.dot(e.d,dc)*o;if(r<0||a+r>1)return 0;var c=Di.dot(mc,dc)*o;return c<0?0:c}),Cc=function(){var e=new Di(0,0,0);return function(t,n){var i=n.radius,o=n.center,a=t.o,r=t.d,c=i*i;Di.subtract(e,o,a);var s=e.lengthSqr(),l=Di.dot(e,r),u=c-(s-l*l);if(u<0)return 0;var f=Math.sqrt(u),_=s<c?l+f:l-f;return _<0?0:_}}(),Sc=(vc=new Di,gc=new Di,function(e,t){return Di.subtract(vc,t.center,t.halfExtents),Di.add(gc,t.center,t.halfExtents),Ec(e,vc,gc)});function Ec(e,t,n){var i=e.o,o=e.d,a=1/o.x,r=1/o.y,c=1/o.z,s=(t.x-i.x)*a,l=(n.x-i.x)*a,u=(t.y-i.y)*r,f=(n.y-i.y)*r,_=(t.z-i.z)*c,m=(n.z-i.z)*c,p=Math.max(Math.max(Math.min(s,l),Math.min(u,f)),Math.min(_,m)),h=Math.min(Math.min(Math.max(s,l),Math.max(u,f)),Math.max(_,m));return h<0||p>h?0:p>0?p:h}var Tc,Ac,Ic,bc,Pc=function(){var e=new Di,t=new Di,n=new Di,i=new Di,o=new Di,a=new Di,r=new Di,c=new Array(3),s=new Array(3),l=new Array(3),u=new Array(6);return function(f,_){c[0]=_.halfExtents.x,c[1]=_.halfExtents.y,c[2]=_.halfExtents.z,e=_.center,t=f.o,n=f.d,Di.set(i,_.orientation.m00,_.orientation.m01,_.orientation.m02),Di.set(o,_.orientation.m03,_.orientation.m04,_.orientation.m05),Di.set(a,_.orientation.m06,_.orientation.m07,_.orientation.m08),Di.subtract(r,e,t),s[0]=Di.dot(i,n),s[1]=Di.dot(o,n),s[2]=Di.dot(a,n),l[0]=Di.dot(i,r),l[1]=Di.dot(o,r),l[2]=Di.dot(a,r);for(var m=0;m<3;++m){if(0===s[m]){if(-l[m]-c[m]>0||-l[m]+c[m]<0)return 0;s[m]=1e-7}u[2*m+0]=(l[m]+c[m])/s[m],u[2*m+1]=(l[m]-c[m])/s[m]}var p=Math.max(Math.max(Math.min(u[0],u[1]),Math.min(u[2],u[3])),Math.min(u[4],u[5])),h=Math.min(Math.min(Math.max(u[0],u[1]),Math.max(u[2],u[3])),Math.max(u[4],u[5]));return h<0||p>h?0:p>0?p:h}}(),wc=function(){var e=new Di,t=new Di,n=new Di,i=new Di,o=new Di,a=new Di,r=new Di,c=new va;return function(s,l){var u=l.radius*l.radius,f=Di.normalize(e,s.d),_=l.ellipseCenter0,m=l.ellipseCenter1,p=Di.subtract(t,m,_);if(p.equals(Di.ZERO))return c.radius=l.radius,c.center.set(l.ellipseCenter0),ms.raySphere(s,c);var h=s.o,d=Di.subtract(n,h,_),v=Di.cross(i,f,p),g=v.lengthSqr();if(0===g){c.radius=l.radius;var x=Di.subtract(o,m,h);return d.lengthSqr()<x.lengthSqr()?c.center.set(l.ellipseCenter0):c.center.set(l.ellipseCenter1),ms.raySphere(s,c)}var y=Di.cross(o,d,p),C=p.lengthSqr(),S=2*Di.dot(v,y),E=S*S-4*g*(y.lengthSqr()-u*C);if(E<0)return 0;var T=(-S-Math.sqrt(E))/(2*g);if(T<0){c.radius=l.radius;var A=Di.subtract(a,m,h);return d.lengthSqr()<A.lengthSqr()?c.center.set(l.ellipseCenter0):c.center.set(l.ellipseCenter1),ms.raySphere(s,c)}var I=Di.scaleAndAdd(a,s.o,f,T),b=Di.subtract(r,I,_),P=Di.dot(b,p)/C;return P>=0&&P<=1?T:P<0?(c.radius=l.radius,c.center.set(l.ellipseCenter0),ms.raySphere(s,c)):P>1?(c.radius=l.radius,c.center.set(l.ellipseCenter1),ms.raySphere(s,c)):0}}(),Rc=(Tc=ga.create(),Ac={distance:1/0,doubleSided:!1,mode:cc.ANY},Ic=0,bc=function(e,t,n,i,o,a){e===cc.CLOSEST?(Ic>t||0===Ic)&&(Ic=t,a&&(0===a.length?a.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}):(a[0].distance=t,a[0].vertexIndex0=n/3,a[0].vertexIndex1=i/3,a[0].vertexIndex2=o/3))):(Ic=t,a&&a.push({distance:t,vertexIndex0:n/3,vertexIndex1:i/3,vertexIndex2:o/3}))},function(e,t,n){if(Ic=0,0===t.geometricInfo.positions.length)return Ic;var i=void 0===n?Ac:n;if(Ec(e,t.geometricInfo.boundingBox.min,t.geometricInfo.boundingBox.max)){var o=t.primitiveMode,a=t.geometricInfo;!function(e,t,n,i,o){if(n===ra.TRIANGLE_LIST)for(var a=t.length,r=0;r<a;r+=3){var c=3*t[r],s=3*t[r+1],l=3*t[r+2];Di.set(Tc.a,e[c],e[c+1],e[c+2]),Di.set(Tc.b,e[s],e[s+1],e[s+2]),Di.set(Tc.c,e[l],e[l+1],e[l+2]);var u=ms.rayTriangle(i,Tc,o.doubleSided);if(!(0===u||u>o.distance)&&(bc(o.mode,u,c,s,l,o.result),o.mode===cc.ANY))return u}else if(n===ra.TRIANGLE_STRIP)for(var f=t.length-2,_=0,m=0;m<f;m+=1){var p=3*t[m-_],h=3*t[m+_+1],d=3*t[m+2];Di.set(Tc.a,e[p],e[p+1],e[p+2]),Di.set(Tc.b,e[h],e[h+1],e[h+2]),Di.set(Tc.c,e[d],e[d+1],e[d+2]),_=~_;var v=ms.rayTriangle(i,Tc,o.doubleSided);if(!(0===v||v>o.distance)&&(bc(o.mode,v,p,h,d,o.result),o.mode===cc.ANY))return v}else if(n===ra.TRIANGLE_FAN){var g=t.length-1,x=3*t[0];Di.set(Tc.a,e[x],e[x+1],e[x+2]);for(var y=1;y<g;y+=1){var C=3*t[y],S=3*t[y+1];Di.set(Tc.b,e[C],e[C+1],e[C+2]),Di.set(Tc.c,e[S],e[S+1],e[S+2]);var E=ms.rayTriangle(i,Tc,o.doubleSided);if(!(0===E||E>o.distance)&&(bc(o.mode,E,x,C,S,o.result),o.mode===cc.ANY))return E}}}(a.positions,a.indices,o,e,i)}return Ic}),Nc=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:cc.ANY};return function(n,i,o){e=0;var a=void 0===o?t:o,r=i.renderingSubMeshes.length,c=i.struct.minPosition,s=i.struct.maxPosition;if(c&&s&&!Ec(n,c,s))return e;for(var l=0;l<r;l++){var u=i.renderingSubMeshes[l],f=Rc(n,u,a);if(f)if(a.mode===cc.CLOSEST)(0===e||e>f)&&(e=f,a.subIndices&&(a.subIndices[0]=l));else if(e=f,a.subIndices&&a.subIndices.push(l),a.mode===cc.ANY)return f}return e&&a.mode===cc.CLOSEST&&(a.result&&(a.result[0].distance=e,a.result.length=1),a.subIndices&&(a.subIndices.length=1)),e}}(),Dc=function(){var e=0,t={distance:1/0,doubleSided:!1,mode:cc.ANY},n=new To,i=new Yi;return function(o,a,r){e=0;var c=void 0===r?t:r,s=a.worldBounds;if(s&&!Sc(o,s))return e;To.copy(n,o),a.node&&(Yi.invert(i,a.node.getWorldMatrix(i)),Di.transformMat4(n.o,o.o,i),Di.transformMat4Normal(n.d,o.d,i));for(var l=a.subModels,u=0;u<l.length;u++){var f=l[u].subMesh,_=Rc(n,f,c);if(_)if(c.mode===cc.CLOSEST)(0===e||e>_)&&(e=_,c.subIndices&&(c.subIndices[0]=u));else if(e=_,c.subIndices&&c.subIndices.push(u),c.mode===cc.ANY)return _}return e&&c.mode===cc.CLOSEST&&(c.result&&(c.result[0].distance=e,c.result.length=1),c.subIndices&&(c.subIndices.length=1)),e}}(),Oc=function(){var e=new Di(0,0,0);return function(t,n){Di.subtract(e,t.e,t.s);var i=(n.d-Di.dot(t.s,n.n))/Di.dot(e,n.n);return i<0||i>1?0:i}}(),Mc=function(){var e=new Di(0,0,0),t=new Di(0,0,0),n=new Di(0,0,0),i=new Di(0,0,0),o=new Di(0,0,0),a=new Di(0,0,0);return function(r,c,s){Di.subtract(e,c.b,c.a),Di.subtract(t,c.c,c.a),Di.subtract(n,r.s,r.e),Di.cross(o,e,t);var l=Di.dot(n,o);if(l<=0)return 0;Di.subtract(i,r.s,c.a);var u=Di.dot(i,o);if(u<0||u>l)return 0;Di.cross(a,n,i);var f=Di.dot(t,a);if(f<0||f>l)return 0;var _=-Di.dot(e,a);if(_<0||f+_>l)return 0;if(s){var m=1/l,p=1-(f*=m)-(_*=m);Di.set(s,c.a.x*p+c.b.x*f+c.c.x*_,c.a.y*p+c.b.y*f+c.c.y*_,c.a.z*p+c.b.z*f+c.c.z*_)}return 1}}(),zc=new To;function Lc(e,t){zc.o.set(e.s),Di.subtract(zc.d,e.e,e.s),zc.d.normalize();var n=Sc(zc,t);return n<=e.length()?n:0}function Fc(e,t){zc.o.set(e.s),Di.subtract(zc.d,e.e,e.s),zc.d.normalize();var n=Pc(zc,t);return n<=e.length()?n:0}function Uc(e,t){zc.o.set(e.s),Di.subtract(zc.d,e.e,e.s),zc.d.normalize();var n=Cc(zc,t);return n<=e.length()?n:0}var Bc,Gc,kc,Hc,jc=(Bc=new Di,Gc=new Di,kc=new Di,Hc=new Di,function(e,t){return Di.subtract(Bc,e.center,e.halfExtents),Di.add(Gc,e.center,e.halfExtents),Di.subtract(kc,t.center,t.halfExtents),Di.add(Hc,t.center,t.halfExtents),Bc.x<=Hc.x&&Gc.x>=kc.x&&Bc.y<=Hc.y&&Gc.y>=kc.y&&Bc.z<=Hc.z&&Gc.z>=kc.z});function Vc(e,t,n,i,o,a){Di.set(a[0],e.x+n.x*t.x+i.x*t.y+o.x*t.z,e.y+n.y*t.x+i.y*t.y+o.y*t.z,e.z+n.z*t.x+i.z*t.y+o.z*t.z),Di.set(a[1],e.x-n.x*t.x+i.x*t.y+o.x*t.z,e.y-n.y*t.x+i.y*t.y+o.y*t.z,e.z-n.z*t.x+i.z*t.y+o.z*t.z),Di.set(a[2],e.x+n.x*t.x-i.x*t.y+o.x*t.z,e.y+n.y*t.x-i.y*t.y+o.y*t.z,e.z+n.z*t.x-i.z*t.y+o.z*t.z),Di.set(a[3],e.x+n.x*t.x+i.x*t.y-o.x*t.z,e.y+n.y*t.x+i.y*t.y-o.y*t.z,e.z+n.z*t.x+i.z*t.y-o.z*t.z),Di.set(a[4],e.x-n.x*t.x-i.x*t.y-o.x*t.z,e.y-n.y*t.x-i.y*t.y-o.y*t.z,e.z-n.z*t.x-i.z*t.y-o.z*t.z),Di.set(a[5],e.x+n.x*t.x-i.x*t.y-o.x*t.z,e.y+n.y*t.x-i.y*t.y-o.y*t.z,e.z+n.z*t.x-i.z*t.y-o.z*t.z),Di.set(a[6],e.x-n.x*t.x+i.x*t.y-o.x*t.z,e.y-n.y*t.x+i.y*t.y-o.y*t.z,e.z-n.z*t.x+i.z*t.y-o.z*t.z),Di.set(a[7],e.x-n.x*t.x-i.x*t.y+o.x*t.z,e.y-n.y*t.x-i.y*t.y+o.y*t.z,e.z-n.z*t.x-i.z*t.y+o.z*t.z)}function qc(e,t){for(var n=Di.dot(t,e[0]),i=n,o=1;o<8;++o){var a=Di.dot(t,e[o]);n=a<n?a:n,i=a>i?a:i}return[n,i]}var Wc,Yc,Xc,Kc=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new Di(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new Di(0,0,0),i[o]=new Di(0,0,0);var a=new Di,r=new Di;return function(t,o){Di.set(e[0],1,0,0),Di.set(e[1],0,1,0),Di.set(e[2],0,0,1),Di.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),Di.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),Di.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var c=0;c<3;++c)Di.cross(e[6+3*c],e[c],e[3]),Di.cross(e[7+3*c],e[c],e[4]),Di.cross(e[7+3*c],e[c],e[5]);Di.subtract(a,t.center,t.halfExtents),Di.add(r,t.center,t.halfExtents),function(e,t,n){Di.set(n[0],e.x,t.y,t.z),Di.set(n[1],e.x,t.y,e.z),Di.set(n[2],e.x,e.y,t.z),Di.set(n[3],e.x,e.y,e.z),Di.set(n[4],t.x,t.y,t.z),Di.set(n[5],t.x,t.y,e.z),Di.set(n[6],t.x,e.y,t.z),Di.set(n[7],t.x,e.y,e.z)}(a,r,n),Vc(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var s=0;s<15;++s){var l=qc(n,e[s]),u=qc(i,e[s]);if(u[0]>l[1]||l[0]>u[1])return 0}return 1}}(),Qc=function(e,t){var n=e.halfExtents.x*Math.abs(t.n.x)+e.halfExtents.y*Math.abs(t.n.y)+e.halfExtents.z*Math.abs(t.n.z),i=Di.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1},Jc=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===Qc(e,t.planes[n]))return 0;return 1},Zc=function(){for(var e=new Array(8),t=0,n=0,i=0;i<e.length;i++)e[i]=new Di(0,0,0);return function(i,o){for(var a=0,r=!1,c=0;c<o.planes.length;c++){if(-1===(a=Qc(i,o.planes[c])))return 0;1===a&&(r=!0)}if(!r)return 1;for(var s=0;s<o.vertices.length;s++)Di.subtract(e[s],o.vertices[s],i.center);t=0,n=0;for(var l=0;l<o.vertices.length;l++)e[l].x>i.halfExtents.x?t++:e[l].x<-i.halfExtents.x&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var u=0;u<o.vertices.length;u++)e[u].y>i.halfExtents.y?t++:e[u].y<-i.halfExtents.y&&n++;if(t===o.vertices.length||n===o.vertices.length)return 0;t=0,n=0;for(var f=0;f<o.vertices.length;f++)e[f].z>i.halfExtents.z?t++:e[f].z<-i.halfExtents.z&&n++;return t===o.vertices.length||n===o.vertices.length?0:1}}(),$c=(Wc=new Di(0,0,0),Yc=new Li,function(e,t){return Di.subtract(Wc,t,e.center),Di.transformMat3(Wc,Wc,Li.transpose(Yc,e.orientation)),n=Wc,i=e.halfExtents,Math.abs(n.x)<i.x&&Math.abs(n.y)<i.y&&Math.abs(n.z)<i.z;var n,i}),es=(Xc=function(e,t,n,i){return Math.abs(e.x*t+e.y*n+e.z*i)},function(e,t){var n=e.halfExtents.x*Xc(t.n,e.orientation.m00,e.orientation.m01,e.orientation.m02)+e.halfExtents.y*Xc(t.n,e.orientation.m03,e.orientation.m04,e.orientation.m05)+e.halfExtents.z*Xc(t.n,e.orientation.m06,e.orientation.m07,e.orientation.m08),i=Di.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1}),ts=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===es(e,t.planes[n]))return 0;return 1},ns=function(){for(var e=new Array(8),t=0,n=0,i=0,o=0;o<e.length;o++)e[o]=new Di(0,0,0);var a=function(e,t,n,i){return e.x*t+e.y*n+e.z*i};return function(o,r){for(var c=0,s=!1,l=0;l<r.planes.length;l++){if(-1===(c=es(o,r.planes[l])))return 0;1===c&&(s=!0)}if(!s)return 1;for(var u=0;u<r.vertices.length;u++)Di.subtract(e[u],r.vertices[u],o.center);n=0,i=0;for(var f=0;f<r.vertices.length;f++)(t=a(e[f],o.orientation.m00,o.orientation.m01,o.orientation.m02))>o.halfExtents.x?n++:t<-o.halfExtents.x&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(var _=0;_<r.vertices.length;_++)(t=a(e[_],o.orientation.m03,o.orientation.m04,o.orientation.m05))>o.halfExtents.y?n++:t<-o.halfExtents.y&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(var m=0;m<r.vertices.length;m++)(t=a(e[m],o.orientation.m06,o.orientation.m07,o.orientation.m08))>o.halfExtents.z?n++:t<-o.halfExtents.z&&i++;return n===r.vertices.length||i===r.vertices.length?0:1}}(),is=function(){for(var e=new Array(15),t=0;t<15;t++)e[t]=new Di(0,0,0);for(var n=new Array(8),i=new Array(8),o=0;o<8;o++)n[o]=new Di(0,0,0),i[o]=new Di(0,0,0);return function(t,o){Di.set(e[0],t.orientation.m00,t.orientation.m01,t.orientation.m02),Di.set(e[1],t.orientation.m03,t.orientation.m04,t.orientation.m05),Di.set(e[2],t.orientation.m06,t.orientation.m07,t.orientation.m08),Di.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),Di.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),Di.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(var a=0;a<3;++a)Di.cross(e[6+3*a],e[a],e[3]),Di.cross(e[7+3*a],e[a],e[4]),Di.cross(e[8+3*a],e[a],e[5]);Vc(t.center,t.halfExtents,e[0],e[1],e[2],n),Vc(o.center,o.halfExtents,e[3],e[4],e[5],i);for(var r=0;r<15;++r){var c=qc(n,e[r]),s=qc(i,e[r]);if(s[0]>c[1]||c[0]>s[1])return 0}return 1}}(),os=function(){for(var e=new va,t=new Di,n=new Di,i=new Di,o=new Array(8),a=0;a<8;a++)o[a]=new Di;for(var r=new Array(8),c=0;c<8;c++)r[c]=new Di;return function(a,c){if(0===Di.squaredDistance(c.ellipseCenter0,c.ellipseCenter1))return e.radius=c.radius,e.center.set(c.ellipseCenter0),ms.sphereOBB(e,a);t.x=a.orientation.m00,t.y=a.orientation.m01,t.z=a.orientation.m02,n.x=a.orientation.m03,n.y=a.orientation.m04,n.z=a.orientation.m05,i.x=a.orientation.m06,i.y=a.orientation.m07,i.z=a.orientation.m08,Vc(a.center,a.halfExtents,t,n,i,o);var s=r,l=Di.copy(s[0],t),u=Di.copy(s[1],n),f=Di.copy(s[2],i);Di.subtract(s[3],c.center,a.center).normalize();var _=Di.subtract(s[4],c.ellipseCenter0,c.ellipseCenter1);_.normalize(),Di.cross(s[5],l,_),Di.cross(s[6],u,_),Di.cross(s[7],f,_);for(var m=0;m<8;++m){var p=qc(o,s[m]),h=Di.dot(s[m],c.ellipseCenter0),d=Di.dot(s[m],c.ellipseCenter1),v=Math.max(h,d),g=Math.min(h,d)-c.radius,x=v+c.radius;if(g>p[1]||p[0]>x)return 0}return 1}}(),as=function(e,t){var n=Di.dot(t.n,e.center),i=e.radius*t.n.length();return n+i<t.d?-1:n-i>t.d?0:1},rs=function(e,t){for(var n=0;n<t.planes.length;n++)if(-1===as(e,t.planes[n]))return 0;return 1},cs=function(){var e=new Di(0,0,0),t=[1,-1,1,-1,1,-1];return function(n,i){for(var o=0;o<6;o++){var a=i.planes[o],r=n.radius,c=n.center,s=a.n,l=a.d,u=Di.dot(s,c);if(u+r<l)return 0;if(!(u-r>l)){Di.add(e,c,Di.multiplyScalar(e,s,r));for(var f=0;f<6;f++)if(f!==o&&f!==o+t[o]){var _=i.planes[f];if(Di.dot(_.n,e)<_.d)return 0}}}return 1}}(),ss=function(e,t){var n=e.radius+t.radius;return Di.squaredDistance(e.center,t.center)<n*n},ls=function(){var e=new Di;return function(t,n){return yo(e,t.center,n),Di.squaredDistance(t.center,e)<t.radius*t.radius}}(),us=function(){var e=new Di;return function(t,n){return Co(e,t.center,n),Di.squaredDistance(t.center,e)<t.radius*t.radius}}(),fs=function(){var e=new Di,t=new Di;return function(n,i){var o=n.radius+i.radius,a=o*o,r=Di.squaredDistance(i.ellipseCenter0,i.ellipseCenter1);if(0===r)return Di.squaredDistance(n.center,i.center)<a;Di.subtract(e,n.center,i.ellipseCenter0),Di.subtract(t,i.ellipseCenter1,i.ellipseCenter0);var c=Di.dot(e,t)/r;return c<0?Di.squaredDistance(n.center,i.ellipseCenter0)<a:c>1?Di.squaredDistance(n.center,i.ellipseCenter1)<a:(Di.scaleAndAdd(e,i.ellipseCenter0,t,c),Di.squaredDistance(n.center,e)<a)}}(),_s=function(){var e=new Di,t=new Di,n=new Di,i=new Di,o=new Di,a=new Di;return function(r,c){var s,l,u=Di.subtract(e,r.ellipseCenter1,r.ellipseCenter0),f=Di.subtract(t,c.ellipseCenter1,c.ellipseCenter0),_=Di.subtract(n,r.ellipseCenter0,c.ellipseCenter0),m=Di.dot(u,u),p=Di.dot(u,f),h=Di.dot(f,f),d=Di.dot(u,_),v=Di.dot(f,_),g=m*h-p*p,x=g,y=g;g<vi?(s=0,x=1,l=v,y=h):(l=m*v-p*d,(s=p*v-h*d)<0?(s=0,l=v,y=h):s>x&&(s=x,l=v+p,y=h)),l<0?(l=0,-d<0?s=0:-d>m?s=x:(s=-d,x=m)):l>y&&(l=y,-d+p<0?s=0:-d+p>m?s=x:(s=-d+p,x=m));var C=Math.abs(s)<vi?0:s/x,S=Math.abs(l)<vi?0:l/y,E=i;E.set(_),E.add(Di.multiplyScalar(o,u,C)),E.subtract(Di.multiplyScalar(a,f,S));var T=r.radius+c.radius;return E.lengthSqr()<T*T}}(),ms=e("eg",{raySphere:Cc,rayAABB:Sc,rayOBB:Pc,rayPlane:xc,rayTriangle:yc,rayCapsule:wc,raySubMesh:Rc,rayMesh:Nc,rayModel:Dc,lineSphere:Uc,lineAABB:Lc,lineOBB:Fc,linePlane:Oc,lineTriangle:Mc,sphereWithSphere:ss,sphereAABB:ls,sphereOBB:us,spherePlane:as,sphereFrustum:rs,sphereFrustumAccurate:cs,sphereCapsule:fs,aabbWithAABB:jc,aabbWithOBB:Kc,aabbPlane:Qc,aabbFrustum:Jc,aabbFrustumAccurate:Zc,obbWithOBB:is,obbPlane:es,obbFrustum:ts,obbFrustumAccurate:ns,obbPoint:$c,obbCapsule:os,capsuleWithCapsule:_s,resolve:function(e,t,n){void 0===n&&(n=null);var i=e._type,o=t._type,a=this[i|o];return i<o?a(e,t,n):a(t,e,n)}});ms[So.SHAPE_RAY|So.SHAPE_SPHERE]=Cc,ms[So.SHAPE_RAY|So.SHAPE_AABB]=Sc,ms[So.SHAPE_RAY|So.SHAPE_OBB]=Pc,ms[So.SHAPE_RAY|So.SHAPE_PLANE]=xc,ms[So.SHAPE_RAY|So.SHAPE_TRIANGLE]=yc,ms[So.SHAPE_RAY|So.SHAPE_CAPSULE]=wc,ms[So.SHAPE_LINE|So.SHAPE_SPHERE]=Uc,ms[So.SHAPE_LINE|So.SHAPE_AABB]=Lc,ms[So.SHAPE_LINE|So.SHAPE_OBB]=Fc,ms[So.SHAPE_LINE|So.SHAPE_PLANE]=Oc,ms[So.SHAPE_LINE|So.SHAPE_TRIANGLE]=Mc,ms[So.SHAPE_SPHERE]=ss,ms[So.SHAPE_SPHERE|So.SHAPE_AABB]=ls,ms[So.SHAPE_SPHERE|So.SHAPE_OBB]=us,ms[So.SHAPE_SPHERE|So.SHAPE_PLANE]=as,ms[So.SHAPE_SPHERE|So.SHAPE_FRUSTUM]=rs,ms[So.SHAPE_SPHERE|So.SHAPE_FRUSTUM_ACCURATE]=cs,ms[So.SHAPE_SPHERE|So.SHAPE_CAPSULE]=fs,ms[So.SHAPE_AABB]=jc,ms[So.SHAPE_AABB|So.SHAPE_OBB]=Kc,ms[So.SHAPE_AABB|So.SHAPE_PLANE]=Qc,ms[So.SHAPE_AABB|So.SHAPE_FRUSTUM]=Jc,ms[So.SHAPE_AABB|So.SHAPE_FRUSTUM_ACCURATE]=Zc,ms[So.SHAPE_OBB]=is,ms[So.SHAPE_OBB|So.SHAPE_PLANE]=es,ms[So.SHAPE_OBB|So.SHAPE_FRUSTUM]=ts,ms[So.SHAPE_OBB|So.SHAPE_FRUSTUM_ACCURATE]=ns,ms[So.SHAPE_OBB|So.SHAPE_CAPSULE]=os,ms[So.SHAPE_CAPSULE]=_s,ri(Eo.prototype,"line",[{name:"mag",newName:"len"},{name:"magnitude",newName:"len"}]),ci(ms,"intersect",[{name:"line_quad"}]);var ps,hs,ds,vs,gs,xs,ys,Cs=new Di(0,0,0),Ss=new Di(0,0,0),Es=s.mat4(),Ts=s.v4(),As=e("eW",function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),this.n=void 0,this.d=void 0,this._type=void 0,this._type=So.SHAPE_PLANE,this.n=new Di(e,t,n),this.d=i}return e.create=function(t,n,i,o){return new e(t,n,i,o)},e.clone=function(t){return new e(t.n.x,t.n.y,t.n.z,t.d)},e.copy=function(e,t){return Di.copy(e.n,t.n),e.d=t.d,e},e.fromPoints=function(e,t,n,i){return Di.subtract(Cs,n,t),Di.subtract(Ss,i,t),Di.normalize(e.n,Di.cross(e.n,Cs,Ss)),e.d=Di.dot(e.n,t),e},e.set=function(e,t,n,i,o){return e.n.x=t,e.n.y=n,e.n.z=i,e.d=o,e},e.fromNormalAndPoint=function(e,t,n){return Di.copy(e.n,t),e.d=Di.dot(t,n),e},e.normalize=function(e,t){var n=t.n.length();return Di.normalize(e.n,t.n),n>0&&(e.d=t.d/n),e},e.prototype.transform=function(e){Yi.invert(Es,e),Yi.transpose(Es,Es),to.set(Ts,this.n.x,this.n.y,this.n.z,this.d),to.transformMat4(Ts,Ts,Es),Di.set(this.n,Ts.x,Ts.y,Ts.z),this.d=Ts.w},W(e,[{key:"type",get:function(){return this._type}},{key:"x",get:function(){return this.n.x},set:function(e){this.n.x=e}},{key:"y",get:function(){return this.n.y},set:function(e){this.n.y=e}},{key:"z",get:function(){return this.n.z},set:function(e){this.n.z=e}},{key:"w",get:function(){return this.d},set:function(e){this.d=e}}]),e}()),Is=function(){function e(e,t,n){this._arrayBuffers=[],this._chunkSize=void 0,this._chunkSize=n*(1<<t)}return e.prototype.allocateNewChunk=function(){return new ArrayBuffer(this._chunkSize)},e}();!function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(ys||(ys={}));var bs,Ps=function(){function e(e,t,n,i,o){void 0===o&&(o=8),this._dataType=void 0,this._dataMembers=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freeLists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=i.COUNT,this._entryBits=o,this._dataType=t,this._dataMembers=n,this._stride=4*this._elementCount,this._entriesPerChunk=1<<o,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new Is(e,o,this._stride);var a=ys.NEVER,r=!1,c=!1;for(var s in t){if(r=this._hasFloat32,(c=this._hasUint32)&&r)break;a=t[s],r||a!==ys.FLOAT32?c||a!==ys.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}var t=e.prototype;return t.alloc=function(){for(var e=0;e<this._freeLists.length;e++){var t=this._freeLists[e];if(t.length){var n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}for(var i=this._nativePool.allocateNewChunk(),o=[],a=[],r=[],c=this._hasFloat32,s=this._hasUint32,l=0;l<this._entriesPerChunk;l++)c&&o.push(new Float32Array(i,this._stride*l,this._elementCount)),s&&a.push(new Uint32Array(i,this._stride*l,this._elementCount)),l&&r.push(l);return s&&this._uint32BufferViews.push(a),c&&this._float32BufferViews.push(o),this._freeLists.push(r),this._arrayBuffers.push(i),(e<<this._entryBits)+this._poolFlag},t.getBuffer=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;return(this._hasFloat32?this._float32BufferViews:this._uint32BufferViews)[t][n]},t.getTypedArray=function(e,t){var n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e,o=t,a=(this._dataType[t]===ys.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i],r=this._dataMembers[t];return a.subarray(o,o+r)},t.free=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freeLists[t].push(n)},e}();!function(e){e[e.NODE=0]="NODE",e[e.PASS=1]="PASS",e[e.AABB=2]="AABB"}(bs||(bs=e("bU",{})));var ws,Rs=e("bV",0);!function(e){e[e.DIRTY_FLAG=0]="DIRTY_FLAG",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.LOCAL_SCALE=28]="LOCAL_SCALE",e[e.LOCAL_POSITION=31]="LOCAL_POSITION",e[e.LOCAL_ROTATION=34]="LOCAL_ROTATION",e[e.COUNT=38]="COUNT"}(ws||(ws=e("bW",{})));var Ns,Ds=((ps={})[ws.DIRTY_FLAG]=ys.UINT32,ps[ws.LAYER]=ys.UINT32,ps[ws.WORLD_SCALE]=ys.FLOAT32,ps[ws.WORLD_POSITION]=ys.FLOAT32,ps[ws.WORLD_ROTATION]=ys.FLOAT32,ps[ws.WORLD_MATRIX]=ys.FLOAT32,ps[ws.LOCAL_SCALE]=ys.FLOAT32,ps[ws.LOCAL_POSITION]=ys.FLOAT32,ps[ws.LOCAL_ROTATION]=ys.FLOAT32,ps[ws.COUNT]=ys.NEVER,ps),Os=((hs={})[ws.DIRTY_FLAG]=ws.LAYER-ws.DIRTY_FLAG,hs[ws.LAYER]=ws.WORLD_SCALE-ws.LAYER,hs[ws.WORLD_SCALE]=ws.WORLD_POSITION-ws.WORLD_SCALE,hs[ws.WORLD_POSITION]=ws.WORLD_ROTATION-ws.WORLD_POSITION,hs[ws.WORLD_ROTATION]=ws.WORLD_MATRIX-ws.WORLD_ROTATION,hs[ws.WORLD_MATRIX]=ws.LOCAL_SCALE-ws.WORLD_MATRIX,hs[ws.LOCAL_SCALE]=ws.LOCAL_POSITION-ws.LOCAL_SCALE,hs[ws.LOCAL_POSITION]=ws.LOCAL_ROTATION-ws.LOCAL_POSITION,hs[ws.LOCAL_ROTATION]=ws.COUNT-ws.LOCAL_ROTATION,hs[ws.COUNT]=1,hs);e("bX",new Ps(bs.NODE,Ds,Os,ws)),function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.PRIMITIVE=3]="PRIMITIVE",e[e.BATCHING_SCHEME=4]="BATCHING_SCHEME",e[e.DYNAMIC_STATE=5]="DYNAMIC_STATE",e[e.HASH=6]="HASH",e[e.COUNT=7]="COUNT"}(Ns||(Ns=e("bY",{})));var Ms,zs=((ds={})[Ns.PRIORITY]=ys.UINT32,ds[Ns.STAGE]=ys.UINT32,ds[Ns.PHASE]=ys.UINT32,ds[Ns.PRIMITIVE]=ys.UINT32,ds[Ns.BATCHING_SCHEME]=ys.UINT32,ds[Ns.DYNAMIC_STATE]=ys.UINT32,ds[Ns.HASH]=ys.UINT32,ds[Ns.COUNT]=ys.NEVER,ds),Ls=((vs={})[Ns.PRIORITY]=Ns.STAGE-Ns.PRIORITY,vs[Ns.STAGE]=Ns.PHASE-Ns.STAGE,vs[Ns.PHASE]=Ns.PRIMITIVE-Ns.PHASE,vs[Ns.PRIMITIVE]=Ns.BATCHING_SCHEME-Ns.PRIMITIVE,vs[Ns.BATCHING_SCHEME]=Ns.DYNAMIC_STATE-Ns.BATCHING_SCHEME,vs[Ns.DYNAMIC_STATE]=Ns.HASH-Ns.DYNAMIC_STATE,vs[Ns.HASH]=Ns.COUNT-Ns.HASH,vs[Ns.COUNT]=1,vs);e("bZ",new Ps(bs.PASS,zs,Ls,Ns)),function(e){e[e.CENTER=0]="CENTER",e[e.HALFEXTENTS=3]="HALFEXTENTS",e[e.COUNT=6]="COUNT"}(Ms||(Ms=e("b_",{})));var Fs=((gs={})[Ms.CENTER]=ys.FLOAT32,gs[Ms.HALFEXTENTS]=ys.FLOAT32,gs[Ms.COUNT]=ys.NEVER,gs),Us=((xs={})[Ms.CENTER]=Ms.HALFEXTENTS-Ms.CENTER,xs[Ms.HALFEXTENTS]=Ms.COUNT-Ms.HALFEXTENTS,xs[Ms.COUNT]=1,xs),Bs=(e("b$",new Ps(bs.AABB,Fs,Us,Ms)),new Di),Gs=new Di,ks=new Di,Hs=new Di,js=new Li,Vs=function(e,t,n){js.m00=Math.abs(n.m00),js.m01=Math.abs(n.m01),js.m02=Math.abs(n.m02),js.m03=Math.abs(n.m04),js.m04=Math.abs(n.m05),js.m05=Math.abs(n.m06),js.m06=Math.abs(n.m08),js.m07=Math.abs(n.m09),js.m08=Math.abs(n.m10),Di.transformMat3(e,t,js)},qs=e("ed",function(){function e(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),this.center=void 0,this.halfExtents=void 0,this._type=void 0,this._aabbHandle=Rs,this._type=So.SHAPE_AABB,this.center=new Di(e,t,n),this.halfExtents=new Di(i,o,a)}e.create=function(t,n,i,o,a,r){return new e(t,n,i,o,a,r)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z)},e.copy=function(e,t){return Di.copy(e.center,t.center),Di.copy(e.halfExtents,t.halfExtents),e},e.fromPoints=function(e,t,n){return Di.add(Bs,n,t),Di.subtract(Gs,n,t),Di.multiplyScalar(e.center,Bs,.5),Di.multiplyScalar(e.halfExtents,Gs,.5),e},e.set=function(e,t,n,i,o,a,r){return e.center.set(t,n,i),e.halfExtents.set(o,a,r),e},e.merge=function(t,n,i){return Di.subtract(Bs,n.center,n.halfExtents),Di.subtract(Gs,i.center,i.halfExtents),Di.add(ks,n.center,n.halfExtents),Di.add(Hs,i.center,i.halfExtents),Di.max(Hs,ks,Hs),Di.min(ks,Bs,Gs),e.fromPoints(t,ks,Hs)},e.toBoundingSphere=function(e,t){return e.center.set(t.center),e.radius=t.halfExtents.length(),e},e.transform=function(e,t,n){return Di.transformMat4(e.center,t.center,n),Vs(e.halfExtents,t.halfExtents,n),e};var t=e.prototype;return t.getBoundary=function(e,t){Di.subtract(e,this.center,this.halfExtents),Di.add(t,this.center,this.halfExtents)},t.transform=function(e,t,n,i,o){Di.transformMat4(o.center,this.center,e),Vs(o.halfExtents,this.halfExtents,e)},t.clone=function(){return e.clone(this)},t.copy=function(t){return e.copy(this,t)},t.mergePoint=function(e){this.getBoundary(Bs,Gs),e.x<Bs.x&&(Bs.x=e.x),e.y<Bs.y&&(Bs.y=e.y),e.z<Bs.z&&(Bs.z=e.z),e.x>Gs.x&&(Gs.x=e.x),e.y>Gs.y&&(Gs.y=e.y),e.z>Gs.z&&(Gs.z=e.z),Di.add(ks,Bs,Gs),this.center.set(Di.multiplyScalar(ks,ks,.5)),this.halfExtents.set(Gs.x-ks.x,Gs.y-ks.y,Gs.z-ks.z)},t.mergePoints=function(e){if(!(e.length<1))for(var t=0;t<e.length;t++)this.mergePoint(e[t])},t.mergeFrustum=function(e){return this.mergePoints(e.vertices)},W(e,[{key:"type",get:function(){return this._type}},{key:"native",get:function(){return this._nativeObj}}]),e}()),Ws=new Di,Ys=new Di,Xs=new Li,Ks=e("eZ",function(){function e(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),void 0===r&&(r=1),void 0===c&&(c=0),void 0===s&&(s=0),void 0===l&&(l=0),void 0===u&&(u=1),void 0===f&&(f=0),void 0===_&&(_=0),void 0===m&&(m=0),void 0===p&&(p=1),this.center=void 0,this.halfExtents=void 0,this.orientation=void 0,this._type=void 0,this._type=So.SHAPE_OBB,this.center=new Di(e,t,n),this.halfExtents=new Di(i,o,a),this.orientation=new Li(r,c,s,l,u,f,_,m,p)}e.create=function(t,n,i,o,a,r,c,s,l,u,f,_,m,p,h){return new e(t,n,i,o,a,r,c,s,l,u,f,_,m,p,h)},e.clone=function(t){return new e(t.center.x,t.center.y,t.center.z,t.halfExtents.x,t.halfExtents.y,t.halfExtents.z,t.orientation.m00,t.orientation.m01,t.orientation.m02,t.orientation.m03,t.orientation.m04,t.orientation.m05,t.orientation.m06,t.orientation.m07,t.orientation.m08)},e.copy=function(e,t){return Di.copy(e.center,t.center),Di.copy(e.halfExtents,t.halfExtents),Li.copy(e.orientation,t.orientation),e},e.fromPoints=function(e,t,n){return Di.multiplyScalar(e.center,Di.add(Ws,t,n),.5),Di.multiplyScalar(e.halfExtents,Di.subtract(Ys,n,t),.5),Li.identity(e.orientation),e},e.set=function(e,t,n,i,o,a,r,c,s,l,u,f,_,m,p,h){return Di.set(e.center,t,n,i),Di.set(e.halfExtents,o,a,r),Li.set(e.orientation,c,s,l,u,f,_,m,p,h),e};var t=e.prototype;return t.getBoundary=function(e,t){!function(e,t,n){Xs.m00=Math.abs(n.m00),Xs.m01=Math.abs(n.m01),Xs.m02=Math.abs(n.m02),Xs.m03=Math.abs(n.m03),Xs.m04=Math.abs(n.m04),Xs.m05=Math.abs(n.m05),Xs.m06=Math.abs(n.m06),Xs.m07=Math.abs(n.m07),Xs.m08=Math.abs(n.m08),Di.transformMat3(e,t,Xs)}(Ws,this.halfExtents,this.orientation),Di.subtract(e,this.center,Ws),Di.add(t,this.center,Ws)},t.transform=function(e,t,n,i,o){Di.transformMat4(o.center,this.center,e),Li.fromQuat(o.orientation,n),Di.multiply(o.halfExtents,this.halfExtents,i)},t.translateAndRotate=function(e,t,n){Di.transformMat4(n.center,this.center,e),Li.fromQuat(n.orientation,t)},t.setScale=function(e,t){Di.multiply(t.halfExtents,this.halfExtents,e)},W(e,[{key:"type",get:function(){return this._type}}]),e}()),Qs=e("e_",function(){function e(e,t,n){void 0===e&&(e=.5),void 0===t&&(t=.5),void 0===n&&(n=1),this._type=void 0,this.radius=void 0,this.halfHeight=void 0,this.axis=void 0,this.center=void 0,this.rotation=void 0,this.ellipseCenter0=void 0,this.ellipseCenter1=void 0,this._type=So.SHAPE_CAPSULE,this.radius=e,this.halfHeight=t,this.axis=n,this.center=new Di,this.rotation=new Bi,this.ellipseCenter0=new Di(0,t,0),this.ellipseCenter1=new Di(0,-t,0),this.updateCache()}var t=e.prototype;return t.transform=function(e,t,n,i,o){var a=i,r=Pi(a);o.radius=this.radius*Math.abs(r);var c=(this.halfHeight+this.radius)*Math.abs(a.y)-o.radius;c<0&&(c=0),o.halfHeight=c,Di.transformMat4(o.center,this.center,e),Bi.multiply(o.rotation,this.rotation,n),o.updateCache()},t.updateCache=function(){this.updateLocalCenter(),Di.transformQuat(this.ellipseCenter0,this.ellipseCenter0,this.rotation),Di.transformQuat(this.ellipseCenter1,this.ellipseCenter1,this.rotation),this.ellipseCenter0.add(this.center),this.ellipseCenter1.add(this.center)},t.updateLocalCenter=function(){var e=this.halfHeight;switch(this.axis){case 0:this.ellipseCenter0.set(e,0,0),this.ellipseCenter1.set(-e,0,0);break;case 1:this.ellipseCenter0.set(0,e,0),this.ellipseCenter1.set(0,-e,0);break;case 2:this.ellipseCenter0.set(0,0,e),this.ellipseCenter1.set(0,0,-e)}},W(e,[{key:"type",get:function(){return this._type}}]),e}()),Js=new Array(8);Js[0]=new Di(1,1,1),Js[1]=new Di(-1,1,1),Js[2]=new Di(-1,-1,1),Js[3]=new Di(1,-1,1),Js[4]=new Di(1,1,-1),Js[5]=new Di(-1,1,-1),Js[6]=new Di(-1,-1,-1),Js[7]=new Di(1,-1,-1);var Zs,$s,el=new Di,tl=new Di,nl=new Di,il=e("ef",function(){function e(){this._type=void 0,this.planes=void 0,this.vertices=void 0,this._type=So.SHAPE_FRUSTUM,this.planes=new Array(6);for(var e=0;e<6;++e)this.planes[e]=As.create(0,0,0,0);this.vertices=new Array(8);for(var t=0;t<8;++t)this.vertices[t]=new Di}e.createFromAABB=function(e,t){var n=new Di,i=new Di;return Di.subtract(n,t.center,t.halfExtents),Di.add(i,t.center,t.halfExtents),e.vertices[0].set(n.x,i.y,n.z),e.vertices[1].set(i.x,i.y,n.z),e.vertices[2].set(i.x,n.y,n.z),e.vertices[3].set(n.x,n.y,n.z),e.vertices[4].set(n.x,i.y,i.z),e.vertices[5].set(i.x,i.y,i.z),e.vertices[6].set(i.x,n.y,i.z),e.vertices[7].set(n.x,n.y,i.z),e._type!==So.SHAPE_FRUSTUM_ACCURATE||e.updatePlanes(),e},e.split=function(e,t,n,i,o){var a=Math.tan(.5*t.fov),r=a*t.aspect;el.set(i*r,i*a,i),tl.set(o*r,o*a,o);var c=e.vertices;return nl.set(el.x,el.y,el.z),Di.transformMat4(c[0],nl,n),nl.set(-el.x,el.y,el.z),Di.transformMat4(c[1],nl,n),nl.set(-el.x,-el.y,el.z),Di.transformMat4(c[2],nl,n),nl.set(el.x,-el.y,el.z),Di.transformMat4(c[3],nl,n),nl.set(tl.x,tl.y,tl.z),Di.transformMat4(c[4],nl,n),nl.set(-tl.x,tl.y,tl.z),Di.transformMat4(c[5],nl,n),nl.set(-tl.x,-tl.y,tl.z),Di.transformMat4(c[6],nl,n),nl.set(tl.x,-tl.y,tl.z),Di.transformMat4(c[7],nl,n),e.updatePlanes(),e},e.create=function(){return new e},e.clone=function(t){return e.copy(new e,t)},e.copy=function(e,t){e._type=t._type;for(var n=0;n<6;++n)As.copy(e.planes[n],t.planes[n]);for(var i=0;i<8;++i)Di.copy(e.vertices[i],t.vertices[i]);return e};var t=e.prototype;return t.update=function(e,t){if(Di.set(this.planes[0].n,e.m03+e.m00,e.m07+e.m04,e.m11+e.m08),this.planes[0].d=-(e.m15+e.m12),Di.set(this.planes[1].n,e.m03-e.m00,e.m07-e.m04,e.m11-e.m08),this.planes[1].d=-(e.m15-e.m12),Di.set(this.planes[2].n,e.m03+e.m01,e.m07+e.m05,e.m11+e.m09),this.planes[2].d=-(e.m15+e.m13),Di.set(this.planes[3].n,e.m03-e.m01,e.m07-e.m05,e.m11-e.m09),this.planes[3].d=-(e.m15-e.m13),Di.set(this.planes[4].n,e.m03+e.m02,e.m07+e.m06,e.m11+e.m10),this.planes[4].d=-(e.m15+e.m14),Di.set(this.planes[5].n,e.m03-e.m02,e.m07-e.m06,e.m11-e.m10),this.planes[5].d=-(e.m15-e.m14),this._type===So.SHAPE_FRUSTUM_ACCURATE){for(var n=0;n<6;n++){var i=this.planes[n],o=1/i.n.length();Di.multiplyScalar(i.n,i.n,o),i.d*=o}for(var a=0;a<8;a++)Di.transformMat4(this.vertices[a],Js[a],t)}},t.transform=function(e){if(this._type===So.SHAPE_FRUSTUM_ACCURATE){for(var t=0;t<8;t++)Di.transformMat4(this.vertices[t],this.vertices[t],e);As.fromPoints(this.planes[0],this.vertices[1],this.vertices[6],this.vertices[5]),As.fromPoints(this.planes[1],this.vertices[3],this.vertices[4],this.vertices[7]),As.fromPoints(this.planes[2],this.vertices[6],this.vertices[3],this.vertices[7]),As.fromPoints(this.planes[3],this.vertices[0],this.vertices[5],this.vertices[4]),As.fromPoints(this.planes[4],this.vertices[2],this.vertices[0],this.vertices[3]),As.fromPoints(this.planes[5],this.vertices[7],this.vertices[5],this.vertices[6])}},t.updatePlanes=function(){As.fromPoints(this.planes[0],this.vertices[1],this.vertices[6],this.vertices[5]),As.fromPoints(this.planes[1],this.vertices[3],this.vertices[4],this.vertices[7]),As.fromPoints(this.planes[2],this.vertices[6],this.vertices[3],this.vertices[7]),As.fromPoints(this.planes[3],this.vertices[0],this.vertices[5],this.vertices[4]),As.fromPoints(this.planes[4],this.vertices[2],this.vertices[0],this.vertices[3]),As.fromPoints(this.planes[5],this.vertices[7],this.vertices[5],this.vertices[6])},W(e,[{key:"accurate",set:function(e){this._type=e?So.SHAPE_FRUSTUM_ACCURATE:So.SHAPE_FRUSTUM}},{key:"type",get:function(){return this._type}}]),e}());function ol(e,t,n){void 0===n&&(n=1e-6);for(var i=0,o=e.length-1,a=o>>>1;i<=o;a=i+o>>>1){var r=e[a];if(r>t+n)o=a-1;else{if(!(r<t-n))return a;i=a+1}}return~i}il.createOrtho=function(e,t,n,i,o,a){var r=t/2,c=n/2;Di.set(nl,r,c,-i),Di.transformMat4(e.vertices[0],nl,a),Di.set(nl,-r,c,-i),Di.transformMat4(e.vertices[1],nl,a),Di.set(nl,-r,-c,-i),Di.transformMat4(e.vertices[2],nl,a),Di.set(nl,r,-c,-i),Di.transformMat4(e.vertices[3],nl,a),Di.set(nl,r,c,-o),Di.transformMat4(e.vertices[4],nl,a),Di.set(nl,-r,c,-o),Di.transformMat4(e.vertices[5],nl,a),Di.set(nl,-r,-c,-o),Di.transformMat4(e.vertices[6],nl,a),Di.set(nl,r,-c,-o),Di.transformMat4(e.vertices[7],nl,a),As.fromPoints(e.planes[0],e.vertices[1],e.vertices[6],e.vertices[5]),As.fromPoints(e.planes[1],e.vertices[3],e.vertices[4],e.vertices[7]),As.fromPoints(e.planes[2],e.vertices[6],e.vertices[3],e.vertices[7]),As.fromPoints(e.planes[3],e.vertices[0],e.vertices[5],e.vertices[4]),As.fromPoints(e.planes[4],e.vertices[2],e.vertices[0],e.vertices[3]),As.fromPoints(e.planes[5],e.vertices[7],e.vertices[5],e.vertices[6])},function(e){e[e.Default=0]="Default",e[e.Normal=1]="Normal",e[e.Loop=2]="Loop",e[e.ShouldWrap=4]="ShouldWrap",e[e.Clamp=8]="Clamp",e[e.PingPong=22]="PingPong",e[e.Reverse=36]="Reverse"}(Zs||(Zs=e("gd",{}))),function(e){e[e.Default=Zs.Default]="Default",e[e.Normal=Zs.Normal]="Normal",e[e.Reverse=Zs.Reverse]="Reverse",e[e.Loop=Zs.Loop]="Loop",e[e.LoopReverse=Zs.Loop|Zs.Reverse]="LoopReverse",e[e.PingPong=Zs.PingPong]="PingPong",e[e.PingPongReverse=Zs.PingPong|Zs.Reverse]="PingPongReverse"}($s||($s=e("gc",{}))),St($s),e("ge",function(){function e(e){this.ratio=0,this.time=0,this.direction=1,this.stopped=!0,this.iterations=0,this.frameIndex=void 0,e&&this.set(e)}return e.prototype.set=function(e){this.ratio=e.ratio,this.time=e.time,this.direction=e.direction,this.stopped=e.stopped,this.iterations=e.iterations,this.frameIndex=e.frameIndex},e}());var al=function(){},rl=function(){return al},cl=sl((function(){}));function sl(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function ll(e){return function(t){return function(n){!function(e,t,n){var i=fl(e);if(i){var o=_l(i,"proto");_l(o,"editor")[t]=n}}(n,e,t)}}}var ul="__ccclassCache__";function fl(e){return _l(e,ul)}function _l(e,t){return e[t]||(e[t]={})}var ml=e("eq",sl((function(e,t){var n=mt.getSuper(e);n===Object&&(n=null);var i={name:t,extends:n,ctor:e},o=e[ul];if(o){var a=o.proto;a&&mt.mixin(i,a),e[ul]=void 0}return mn(i)}))),pl=e("gR",ll("requireComponent")),hl=e("gg",ll("executionOrder")),dl=e("gQ",cl);function vl(e,t,n){var i=null;function o(e,t,n){var o=fl(e.constructor);if(o){var a=_l(o,"proto"),r=_l(a,"properties");!function(e,t,n,i,o,a){var r,c=o&&(o.get||o.set);i&&(r=nn(i,c));var s=t[n],l=mt.mixin(s||{},r||i||{});if(c)o.get&&(l.get=o.get),o.set&&(l.set=o.set);else if(o)o.initializer&&(l.default=function(e){var t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(o.initializer));else{var u=a.default||(a.default=function(e){var t;try{t=new e}catch(e){return{}}return t}(e));u.hasOwnProperty(n)&&(l.default=u[n])}t[n]=l}(e.constructor,r,t,i,n,o)}}return void 0===e?vl({type:void 0}):void 0===t?(i=e,o):void o(e,t,n)}var gl=Symbol("cc:SerializationMetadata"),xl=e("et",(function(e,t,n){return vl(Sl({}))(e,t,n)}));function yl(e){return vl(Sl({formerlySerializedAs:e}))}var Cl=e("h4",(function(e,t,n){return vl({editorOnly:!0})(e,t,n)}));function Sl(e){return e.__noImplicit=!0,"serializable"in e||(e.serializable=!0),e}var El=e("g8",al),Tl=e("fT",cl),Al=e("fW",rl),Il=e("hd",cl),bl=rl,Pl=rl,wl=e("fV",rl),Rl=e("ez",al),Nl=e("gG",rl),Dl=e("he",al),Ol=e("g7",rl),Ml=e("fS",rl),zl=e("gx",rl),Ll=e("g_",rl),Fl=(e("g$",rl),rl),Ul=e("gw",al),Bl=e("eu",rl),Gl=(e("h9",al),e("gP",al),e("gL",al)),kl=ql(Wt),Hl=e("fZ",ql(Yt)),jl=ql(Xt),Vl=e("gN",ql(Kt));function ql(e){return vl({type:e})}var Wl,Yl,Xl,Kl,Ql,Jl,Zl,$l,eu,tu=e("gF",(function(e,t,n){return vl({__noImplicit:!0,override:!0})(e,t,n)})),nu=ml("cc.KeyframeCurve")((Wl=Symbol.iterator,Jl=function(){function e(){ie(this,"_times",Kl,this),ie(this,"_values",Ql,this)}var t=e.prototype;return t[Wl]=function(){var e=this,t=0;return{next:function(){if(t>=e._times.length)return{done:!0,value:void 0};var n=[e._times[t],e._values[t]];return++t,{done:!1,value:n}}}},t.keyframes=function(){return this},t.times=function(){return this._times},t.values=function(){return this._values},t.getKeyframeTime=function(e){return this._times[e]},t.getKeyframeValue=function(e){return this._values[e]},t.addKeyFrame=function(e,t){return this._insertNewKeyframe(e,t)},t.removeKeyframe=function(e){this._times.splice(e,1),this._values.splice(e,1)},t.indexOfKeyframe=function(e){return ol(this._times,e)},t.updateTime=function(e,t){var n=this._values[e];this.removeKeyframe(e),this._insertNewKeyframe(t,n)},t.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.slice());else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return e[1]})))}},t.clear=function(){this._times.length=0,this._values.length=0},t.searchKeyframe=function(e){return ol(this._times,e)},t.setKeyframes=function(e,t){e.length,t.length,function(e){e.every((function(e,t,n){return 0===t||e>n[t-1]||gi(e,n[t-1],1e-6)}))}(e),this._times=e,this._values=t},t._insertNewKeyframe=function(e,t){var n=this._times,i=this._values,o=n.length,a=ol(n,e);if(a>=0)return a;var r=~a;return 0===r?(n.unshift(e),i.unshift(t)):r===o?(n.push(e),i.push(t)):(n.splice(r-1,0,e),i.splice(r-1,0,t)),r},W(e,[{key:"keyFramesCount",get:function(){return this._times.length}},{key:"rangeMin",get:function(){return this._times[0]}},{key:"rangeMax",get:function(){return this._times[this._values.length-1]}}]),e}(),Kl=oe((Xl=Jl).prototype,"_times",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ql=oe(Xl.prototype,"_values",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Yl=Xl))||Yl;function iu(e){return e>-1e-9&&e<1e-9}!function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.CUBIC=2]="CUBIC"}(Zl||(Zl=e("dV",{}))),function(e){e[e.LINEAR=0]="LINEAR",e[e.CLAMP=1]="CLAMP",e[e.LOOP=2]="LOOP",e[e.PING_PONG=3]="PING_PONG"}($l||($l=e("dW",{}))),function(e){e[e.NONE=0]="NONE",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.BOTH=3]="BOTH"}(eu||(eu=e("dX",{})));var ou=e("g1",(function(){})),au=Object.freeze({__proto__:null,uniquelyReferenced:El,ccclass:ml,property:vl,requireComponent:pl,executionOrder:hl,disallowMultiple:dl,allowReplicated:function(e){mn.Attr.setClassAttr(e,"replicated","visible",!0)},executeInEditMode:Tl,menu:Al,playOnFocus:Il,inspector:bl,icon:Pl,help:wl,type:ql,integer:kl,float:Hl,boolean:jl,string:Vl});e("cX",au);var ru=e("fh",function(){function e(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=mt.createMap(!0),this._count=0)}var t=e.prototype;return t.add=function(e,t){return e in this._map||this._count++,this._map[e]=t},t.get=function(e){return this._map[e]},t.has=function(e){return e in this._map},t.remove=function(e){var t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t},t.clear=function(){0!==this._count&&(this._map=mt.createMap(!0),this._count=0)},t.forEach=function(e){for(var t in this._map)e(this._map[t],t)},t.find=function(e){for(var t in this._map)if(e(this._map[t],t))return this._map[t];return null},t.destroy=function(){this._map=null},W(e,[{key:"count",get:function(){return this._count}}]),e}()),cu=e("fI",function(){function e(t,n){this.id=e._pipelineId++,this.name="",this.pipes=[],this.name=t;for(var i=0,o=n.length;i<o;i++)this.pipes.push(n[i])}var t=e.prototype;return t.insert=function(e,t){return t>this.pipes.length?(w(4921),this):(this.pipes.splice(t,0,e),this)},t.append=function(e){return this.pipes.push(e),this},t.remove=function(e){return this.pipes.splice(e,1),this},t.sync=function(e){var t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(var n=0,i=t.length;n<i;){var o=(0,t[n])(e);if(o)return e.isFinish=!0,o;++n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output},t.async=function(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))},t._flow=function(e,t){var n=this;(0,this.pipes[e])(t,(function(i){i?(t.isFinish=!0,t.dispatch("complete",i)):++e<n.pipes.length?(t.input=t.output,t.output=null,n._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",i,t.output))}))},e}());cu._pipelineId=0,function(){function e(e){if(this._weakMap={},void 0===window.WeakRef)throw new Error("this platform does not support WeakRef!");if(e)for(var t in e)this._weakMap[t]=new WeakRef(e[t])}var t=e.prototype;t.add=function(e,t){return this._weakMap[e]=new WeakRef(t),t},t.has=function(e){return e in this._weakMap&&!!this._weakMap[e].deref()},t.get=function(e){return this._weakMap[e]&&this._weakMap[e].deref()},t.remove=function(e){var t=this._weakMap[e];return delete this._weakMap[e],t&&t.deref()},t.clear=function(){this._weakMap=mt.createMap(!0)},t.forEach=function(e){for(var t in this._weakMap){var n=this.get(t);n&&e(n,t)}},t.find=function(e){for(var t in this._weakMap){var n=this.get(t);if(n&&e(n,t))return this._weakMap[t].deref()}return null},t.destroy=function(){this._weakMap={}},W(e,[{key:"count",get:function(){return Object.values(this._weakMap).filter((function(e){return e.deref()})).length}}])}(),e("fl",new ru);var su,lu,uu=e("fv",new ru),fu=e("fG",new ru),_u=e("fs",new ru),mu=(e("fK",new cu("normal load",[])),e("fE",new cu("fetch",[])),e("fL",new cu("transform url",[])));e("fQ",null),function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(su||(su=e("ft",{}))),e("fN",{default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}}),function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(lu||(lu=e("fz",{})));var pu=e("fD",function(){function e(t){this.id=e._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(t)}e.create=function(t){var n;return 0!==e._deadPool.length?(n=e._deadPool.pop()).set(t):n=new e(t),n};var t=e.prototype;return t.set=function(e){void 0===e&&(e=Object.create(null)),this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)},t.dispatch=function(e,t,n,i,o){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,o);break;case"error":this.onError&&this.onError(t,n,i,o);break;default:var a="on"+e[0].toUpperCase()+e.substr(1);"function"==typeof this[a]&&this[a](t,n,i,o)}},t.recycle=function(){e._deadPool.length!==e.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,e._deadPool.push(this))},e}());pu.MAX_DEAD_NUM=500,pu._taskId=0,pu._deadPool=[];var hu="0123456789abcdef".split(""),du=["","","",""],vu=du.concat(du,"-",du,"-",du,"-",du,"-",du,du,du),gu=vu.map((function(e,t){return"-"===e?NaN:t})).filter(isFinite);function xu(e){var t=e.split("@")[0];if(22!==t.length)return e;vu[0]=e[0],vu[1]=e[1];for(var n=2,i=2;n<22;n+=2){var o=wt[e.charCodeAt(n)],a=wt[e.charCodeAt(n+1)];vu[gu[i++]]=hu[o>>2],vu[gu[i++]]=hu[(3&o)<<2|a>>4],vu[gu[i++]]=hu[15&a]}return e.replace(t,vu.join(""))}var yu=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function Cu(e){var t=yu.exec(e);return t?t[1]:""}function Su(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.ext=t.nativeExt;var n=_u.find((function(t){return!!t.getAssetInfo(e)}));return n&&(t.bundle=n.name),Au(e,t)}function Eu(e){return!!e&&(e instanceof s.SceneAsset||e instanceof s.Scene)}function Tu(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function Au(e,t){var n=pu.create({input:e,options:t}),i=[];try{for(var o,a=ne(mu.sync(n));!(o=a()).done;){var r=o.value,c=r.url;r.recycle(),i.push(c)}}catch(e){for(var s,l=ne(n.output);!(s=l()).done;)s.value.recycle();y(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}e("fP",Object.freeze({__proto__:null,getUuidFromURL:Cu,getUrlWithUuid:Su,isScene:Eu,normalize:Tu,transform:Au,decodeUuid:xu}));var Iu,bu,Pu,wu,Ru,Nu,Du,Ou,Mu=function(){function e(){this._finalizationRegistry=null}var t=e.prototype;return t.registerGCObject=function(e){return e},t.unregisterGCObject=function(){},t.init=function(){},t.finalizationRegistryCallback=function(e){e.isValid&&e.destroy()},t.destroy=function(){},e}(),zu=e("eM",new Mu),Lu=ml("cc.GCObject")(Iu=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return t=e.call.apply(e,[this].concat(i))||this,zu.registerGCObject(ee(t))||ee(t)}X(t,e);var n=t.prototype;return n.equals=function(e){return!!e&&e===this},n.destroy=function(){return zu.unregisterGCObject(this),e.prototype.destroy.call(this)},t}(yn))||Iu,Fu=e("dd",ml("cc.Asset")((Ru=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).loaded=!0,ie(t,"_native",wu,ee(t)),t._nativeUrl="",t._file=null,t._ref=0,Object.defineProperty(ee(t),"_uuid",{value:"",writable:!0}),t}X(t,e),t.deserialize=function(e){return s.deserialize(e)};var n=t.prototype;return n.toString=function(){return this.nativeUrl},n.serialize=function(){},n._setRawAsset=function(e,t){void 0===t&&(t=!0),this._native=!1!==t?e||"":"/"+e},n.addRef=function(){return this._ref++,this},n.decRef=function(e){return void 0===e&&(e=!0),this._ref>0&&this._ref--,e&&s.assetManager._releaseManager.tryRelease(this),this},n.onLoaded=function(){},n.initDefault=function(e){e&&(this._uuid=e),this.isDefault=!0},n.validate=function(){return!0},n.destroy=function(){return S(H(12101,this._uuid)),e.prototype.destroy.call(this)},W(t,[{key:"nativeUrl",get:function(){if(!this._nativeUrl){if(!this._native)return"";var e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=Su(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=Su(this._uuid,{__nativeName__:e,nativeExt:qn(e),isNative:!0})}return this._nativeUrl}},{key:"_nativeAsset",get:function(){return this._file},set:function(e){this._file=e}},{key:"_nativeDep",get:function(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}},{key:"refCount",get:function(){return this._ref}}]),t}(Rn(Lu)),wu=oe((Pu=Ru).prototype,"_native",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),oe(Pu.prototype,"_nativeAsset",[vl],Object.getOwnPropertyDescriptor(Pu.prototype,"_nativeAsset"),Pu.prototype),bu=Pu))||bu);Fu.prototype.createNode=null,s.Asset=Fu;var Uu=e("dr",ml("cc.Script")(Nu=function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t}(Fu))||Nu);s._Script=Uu;var Bu=e("ds",ml("cc.JavaScript")(Du=function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t}(Uu))||Du);s._JavaScript=Bu;var Gu,ku,Hu,ju,Vu,qu,Wu,Yu,Xu,Ku,Qu,Ju=e("dt",ml("cc.TypeScript")(Ou=function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t}(Uu))||Ou);s._TypeScript=Ju;var Zu,$u,ef,tf,nf=new Ae("Comp"),of=yn.Flags.IsOnLoadCalled,af=e("dO",(Gu=ml("cc.Component"),ku=Ol(),Hu=ql(Uu),ju=Ml(),Gu((Qu=Ku=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"node",Wu,ee(t)),ie(t,"_enabled",Yu,ee(t)),ie(t,"__prefab",Xu,ee(t)),t._sceneGetter=null,t._id=nf.getNewId(),t}X(t,e);var n=t.prototype;return n._getRenderScene=function(){return this._sceneGetter?this._sceneGetter():this.node.scene.renderScene},n.addComponent=function(e){return this.node.addComponent(e)},n.getComponent=function(e){return this.node.getComponent(e)},n.getComponents=function(e){return this.node.getComponents(e)},n.getComponentInChildren=function(e){return this.node.getComponentInChildren(e)},n.getComponentsInChildren=function(e){return this.node.getComponentsInChildren(e)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this._enabled&&this.node.activeInHierarchy&&s.director._compScheduler.disableComp(this),!0)},n._onPreDestroy=function(){this.unscheduleAllCallbacks(),s.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)},n._instantiate=function(e){return e||(e=s.instantiate._clone(this,this)),e&&(e.node=null),e},n.schedule=function(e,t,n,i){void 0===t&&(t=0),void 0===n&&(n=s.macro.REPEAT_FOREVER),void 0===i&&(i=0),k(e,1619),k((t=t||0)>=0,1620),n=Number.isNaN(n)?s.macro.REPEAT_FOREVER:n,i=i||0;var o=s.director.getScheduler(),a=o.isTargetPaused(this);o.schedule(e,this,t,n,i,a)},n.scheduleOnce=function(e,t){void 0===t&&(t=0),this.schedule(e,0,0,t)},n.unschedule=function(e){e&&s.director.getScheduler().unschedule(e,this)},n.unscheduleAllCallbacks=function(){s.director.getScheduler().unscheduleAllForTarget(this)},W(t,[{key:"name",get:function(){if(this._name)return this._name;var e=Ue(this),t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node?this.node.name+"<"+e+">":e},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"__scriptAsset",get:function(){return null}},{key:"enabled",get:function(){return this._enabled},set:function(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){var t=s.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}},{key:"enabledInHierarchy",get:function(){return this._enabled&&this.node&&this.node.activeInHierarchy}},{key:"_isOnLoadCalled",get:function(){return this._objFlags&of}}]),t}(yn),Ku.system=null,oe((qu=Qu).prototype,"__scriptAsset",[ku,Hu,ju,Gl],Object.getOwnPropertyDescriptor(qu.prototype,"__scriptAsset"),qu.prototype),Wu=oe(qu.prototype,"node",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Yu=oe(qu.prototype,"_enabled",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Xu=oe(qu.prototype,"__prefab",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Vu=qu))||Vu)),rf=af.prototype;rf.update=null,rf.lateUpdate=null,rf.__preload=null,rf.onLoad=null,rf.start=null,rf.onEnable=null,rf.onDisable=null,rf.onDestroy=null,rf.onFocusInEditor=null,rf.onLostFocusInEditor=null,rf.resetInEditor=null,rf._getLocalBounds=null,rf.onRestore=null,af._requireComponent=null,af._executionOrder=0,Oe(af,"_registerEditorProps",(function(e,t){var n=t.requireComponent;n&&(Array.isArray(n)&&(n=n.filter(Boolean)),e._requireComponent=n);var i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),s.Component=af;var cf=e("dN",ml("cc.MissingScript")(Zu=bl()((tf=function(e){function t(){var t;return ie(t=e.call(this)||this,"_$erialized",ef,ee(t)),t}return X(t,e),t.safeFindClass=function(e){var t=st(e);if(t)return t;s.deserialize.reportMissingClass(e)},t.prototype.onLoad=function(){w(4600,this.node.name)},t}(af),ef=oe(($u=tf).prototype,"_$erialized",[xl,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Zu=$u))||Zu)||Zu);s._MissingScript=cf;try{var sf=cf.__values__;0!==sf.length&&"_$erialized"===sf[sf.length-1]||(y("The '_$erialized' prop in MissingScript is missing. Please contact jare."),y("    Error props: ['"+sf+"']"))}catch(go){y("Error when checking MissingScript 5, "+go)}var lf=function(e){function t(){var t;return(t=e.call(this)||this).isFrameRotated=!1,t.handleResizeEvent=!0,t._cbToUpdateFrameBuffer=void 0,t._resolutionScale=1,t._isProportionalToFrame=!1,t}X(t,e);var n=t.prototype;return n.init=function(e,t){this._cbToUpdateFrameBuffer=t,this._cbToUpdateFrameBuffer()},n.requestFullScreen=function(){return Promise.reject(new Error("request fullscreen is not supported on this platform."))},n.exitFullScreen=function(){return Promise.reject(new Error("exit fullscreen is not supported on this platform."))},W(t,[{key:"supportFullScreen",get:function(){return!1}},{key:"isFullScreen",get:function(){return!1}},{key:"devicePixelRatio",get:function(){return ce.getSystemInfoSync().pixelRatio}},{key:"windowSize",get:function(){var e=ce.getSystemInfoSync(),t=this.devicePixelRatio,n=e.screenWidth,i=e.screenHeight;return new oo(n*t,i*t)},set:function(){w(1221)}},{key:"resolution",get:function(){var e=this.windowSize,t=this.resolutionScale;return new oo(e.width*t,e.height*t)}},{key:"resolutionScale",get:function(){return this._resolutionScale},set:function(e){var t;e!==this._resolutionScale&&(this._resolutionScale=e,null===(t=this._cbToUpdateFrameBuffer)||void 0===t||t.call(this))}},{key:"orientation",get:function(){return ce.orientation},set:function(){console.warn("Setting orientation is not supported yet.")}},{key:"safeAreaEdge",get:function(){var e=ce.getSafeArea(),t=this.windowSize,n=this.devicePixelRatio,i=e.top*n,o=t.height-e.bottom*n,a=e.left*n,r=t.width-e.right*n;return this.orientation===O.PORTRAIT?i<o?i=o:o=i:a<r?a=r:r=a,{top:i,bottom:o,left:a,right:r}}},{key:"isProportionalToFrame",get:function(){return this._isProportionalToFrame},set:function(){}}]),t}(Un),uf=e("eS",new lf),ff=function(){function e(){}var t=e.prototype;return t._init=function(e){uf.init(e,(function(){var e,t=s.director;(null===(e=t.root)||void 0===e?void 0:e.pipeline)?t.root.pipeline.pipelineSceneData.shadingScale=uf.resolutionScale:w(1220)}))},t.fullScreen=function(){return uf.isFullScreen},t.requestFullScreen=function(e,t,n){return arguments.length>0&&w(1400,"screen.requestFullScreen(element, onFullScreenChange?, onFullScreenError?)","screen.requestFullScreen(): Promise"),uf.requestFullScreen().then((function(){null==t||t()})).catch((function(e){console.error(e),null==n||n()}))},t.exitFullScreen=function(){return uf.exitFullScreen()},t.autoFullScreen=function(e,t){var n;null===(n=this.requestFullScreen(e,t))||void 0===n||n.catch((function(){}))},t.disableAutoFullScreen=function(){},W(e,[{key:"windowSize",get:function(){return uf.windowSize},set:function(e){uf.windowSize=e}},{key:"resolution",get:function(){return uf.resolution}},{key:"supportsFullScreen",get:function(){return uf.supportFullScreen}}]),e}(),_f=e("dz",new ff);s.screen=_f;var mf=e("dA",{Feature:Ln,hasFeature:function(e){return Gn.hasFeature(e)},NetworkType:On,Language:Dn,OS:Mn,Platform:zn,BrowserType:Nn,isNative:Gn.isNative,isBrowser:Gn.isBrowser,isMobile:Gn.isMobile,isLittleEndian:Gn.isLittleEndian,platform:Gn.platform,language:Gn.language,languageCode:Gn.nativeLanguage,os:Gn.os,osVersion:Gn.osVersion,osMainVersion:Gn.osMainVersion,browserType:Gn.browserType,browserVersion:Gn.browserVersion,windowPixelResolution:_f.windowSize,capabilities:{canvas:!0,opengl:!0,webp:Gn.hasFeature(Ln.WEBP),imageBitmap:Gn.hasFeature(Ln.IMAGE_BITMAP),touches:Gn.hasFeature(Ln.INPUT_TOUCH),mouse:Gn.hasFeature(Ln.EVENT_MOUSE),keyboard:Gn.hasFeature(Ln.EVENT_KEYBOARD),accelerometer:Gn.hasFeature(Ln.EVENT_ACCELEROMETER)},localStorage:{},getNetworkType:function(){return Gn.networkType},getBatteryLevel:function(){return Gn.getBatteryLevel()},garbageCollect:function(){Gn.triggerGC()},isObjectValid:function(e){return null!=e},dump:function(){var e="";e+="isMobile : "+this.isMobile+"\r\n",e+="language : "+this.language+"\r\n",e+="browserType : "+this.browserType+"\r\n",e+="browserVersion : "+this.browserVersion+"\r\n",e+="capabilities : "+JSON.stringify(this.capabilities)+"\r\n",e+="os : "+this.os+"\r\n",e+="osVersion : "+this.osVersion+"\r\n",e+="platform : "+this.platform+"\r\n",g(e+="Using "+(s.game.renderType===s.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS")+" renderer.\r\n")},openURL:function(e){Gn.openURL(e)},now:function(){return Gn.now()},restartVM:function(){Gn.restartJSVM()},getSafeAreaRect:function(){var e=s.view,t=uf.safeAreaEdge,n=uf.windowSize,i=new Ji(t.left,t.bottom),o=new Ji(n.width-t.right,n.height-t.top);e._convertToUISpace(i),e._convertToUISpace(o);var a=i.x,r=i.y,c=o.x-i.x,l=o.y-i.y;return new ro(a,r,c,l)}});!function(){try{var e=mf.localStorage=window.localStorage;e.setItem("storage",""),e.removeItem("storage"),e=null}catch(e){var t=function(){w(5200)};mf.localStorage={getItem:t,setItem:t,clear:t,removeItem:t}}mf.__isWebIOS14OrIPadOS14Env=(mf.os===Mn.IOS||mf.os===Mn.OSX)&&Gn.isBrowser&&/(OS 1[4-9])|(Version\/1[4-9])/.test(window.navigator.userAgent)}(),s.sys=mf;var pf=e("da",Symbol("[[Serialize]]")),hf=e("d9",Symbol("[[Deserialize]]")),df=e("fy",function(){function e(e,t){this._document=void 0,this._chunks=void 0,this._document=e,this._chunks=t}return W(e,[{key:"document",get:function(){return this._document}},{key:"chunks",get:function(){return this._chunks}}]),e}());function vf(e){var t=e;return{chunks:t.chunks,document:t.document}}function gf(e){if(e.length<16)throw new xf(H(13102));var t=new DataView(e.buffer,e.byteOffset,e.byteLength);if(1313817411!==t.getUint32(0,!0))throw new xf(H(13100));var n=t.getUint32(4,!0);if(1!==n)throw new xf(H(13101,n));if(t.getUint32(8,!0)!==t.byteLength)throw new xf(H(13102));var i=12,o=t.getUint32(i,!0);i+=4;var a=new Uint8Array(t.buffer,i+t.byteOffset,o);i+=o;var r,c=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);if("Buffer"in globalThis)return globalThis.Buffer.from(e.buffer,e.byteOffset,e.byteLength).toString();throw new Error(H(13104))}(a);try{r=JSON.parse(c)}catch(e){throw new xf(e)}for(var s=[];i<t.byteLength;){i%8!=0&&(i+=8-i%8);var l=t.getUint32(i,!0);i+=4,s.push(new Uint8Array(t.buffer,i+t.byteOffset,l)),i+=l}if(i!==t.byteLength)throw new xf(H(13102));return new df(r,s)}var xf=function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t}($(Error));!function(){function e(){this._viewOrPaddings=[],this._length=0}var t=e.prototype;t.alignAs=function(e){if(0!==e){var t=this._length%e;if(0!==t){var n=e-t;return this._viewOrPaddings.push(n),this._length+=n,n}}return 0},t.append=function(e){var t=this._length;return this._viewOrPaddings.push(e),this._length+=e.byteLength,t},t.get=function(){var e=new Uint8Array(this._length),t=0;return this._viewOrPaddings.forEach((function(n){"number"==typeof n?t+=n:(e.set(new Uint8Array(n.buffer,n.byteOffset,n.byteLength),t),t+=n.byteLength)})),e},W(e,[{key:"byteLength",get:function(){return this._length}}])}(),s.internal.parseCCONJson=vf,s.internal.decodeCCONBinary=gf,s.internal.CCON=df;var yf="$_$default",Cf="$_$formerlySerializedAs",Sf=function(e){function t(){return e.call(this,(function(e){e.clear()}),1)||this}return X(t,e),t.prototype.get=function(e,t,n,i,o){var a=this._get();return a?(a.reset(e,t,n,i,o),a):new Ef(e,t,n,i,o)},t}(ft),Ef=function(){function e(e,t,n,i){this.deserializedList=void 0,this.deserializedData=void 0,this._ignoreEditorOnly=void 0,this.result=e,this.customEnv=i,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}var t=e.prototype;return t.reset=function(e,t,n,i){this.result=e,this.customEnv=i,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced},t.clear=function(){this.result=null,this.customEnv=null,this.deserializedList.length=0,this.deserializedData=null,this._classFinder=null,this._reportMissingClass=null,this._onDereferenced=null},t.deserialize=function(e){var t,n=!1;e instanceof df?(n=!0,t=e.document,e.chunks.length>0&&(e.chunks.length,this._mainBinChunk=e.chunks[0])):t=e,this._serializedData=t,this._context={fromCCON:n};var i=Array.isArray(t)?t[0]:t;return this.deserializedData=this._deserializeObject(i,0),this._serializedData=void 0,this._mainBinChunk=void 0,this._context=void 0,this.deserializedData},t._deserializeObject=function(e,t,n,i){switch(e.__type__){case"TypedArray":return this._deserializeTypedArrayView(e);case"TypedArrayRef":return this._deserializeTypedArrayViewRef(e);default:return e.__type__?this._deserializeTypeTaggedObject(e,t,n,i):Array.isArray(e)?this._deserializeArray(e):this._deserializePlainObject(e)}},t._deserializeTypedArrayView=function(e){return globalThis[e.ctor].from(e.array)},t._deserializeTypedArrayViewRef=function(e){var t=e.offset,n=e.length,i=e.ctor;return new globalThis[i](this._mainBinChunk.buffer,this._mainBinChunk.byteOffset+t,n)},t._deserializeArray=function(e){for(var t,n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof(t=e[i])&&t?this._deserializeAndAssignField(n,t,""+i)&&(n[i]=null):n[i]=t;return n},t._deserializePlainObject=function(e){var t={};return this._fillPlainObject(t,e),t},t._deserializeTypeTaggedObject=function(e,t,n,i){var o=this,a=e.__type__,r=this._classFinder(a,e,n,i);if(!r)return this._classFinder===st&&this._reportMissingClass(a),null;var c=function(e){var n=new e;return t>=0&&(o.deserializedList[t]=n),n}(r);return this._deserializeInto(e,c,r),c},t._deserializeInto=function(e,t,n,i){void 0===i&&(i=!1),i||!t[hf]?t._deserialize?t._deserialize(e.content,this):s.Class._isCCClass(n)?this._deserializeFireClass(t,e,n):this._deserializeFastDefinedObject(t,e,n):this._runCustomizedDeserialize(e,t,n)},t._runCustomizedDeserialize=function(e,t,n){var i=this,o={readProperty:function(t){var n=e[t];return"object"==typeof n&&n?i._deserializeObjectField(n):n},readThis:function(){i._deserializeInto(e,t,n,!0)},readSuper:function(){var o=Qe(n);o&&i._deserializeInto(e,t,o)}};t[hf](o,this._context)},t._deserializeFireClass=function(e,t,n){var i;if(n.hasOwnProperty("__deserialize__"))i=n.__deserialize__;else{i=function(e,t){var n=At.test(ut(t)),i=Je(t,s._BaseNode)||Je(t,s.Component),o=!1,a=[],r=a,c=[],l=c,u=[];return function(){var e=t.__values__;o="_$erialized"===e[e.length-1];for(var i=jt(t),f=0;f<e.length;f++){var _=e[f],m=_;i[_+Cf]&&(m=i[_+Cf]);var p=mn.getDefault(i[_+yf]),h=!1;if(n){var d=i[_+"$_$type"];if(void 0===p&&d)h=d instanceof qt;else{var v=typeof p;h="string"===v||"number"===v||"boolean"===v}}n&&h?(m!==_&&r===a&&(r=a.slice()),a.push(_),r!==a&&r.push(m)):(m!==_&&l===c&&(l=c.slice()),c.push(_),l!==c&&l.push(m),u.push(p instanceof s.ValueType&&p.constructor))}}(),function(e,t,s){for(var f=0;f<a.length;++f){var _=s[r[f]];void 0!==_&&(t[a[f]]=_)}for(var m=0;m<c.length;++m){var p=c[m],h=s[l[m]];if(void 0!==h)if(n||"object"==typeof h){var d=u[m];d?n||h?e._deserializeFastDefinedObject(t[p],h,d):t[p]=null:h?e._deserializeAndAssignField(t,h,p):t[p]=null}else t[p]=h}i&&s._id&&(t._id=s._id),o&&(t._$erialized=JSON.parse(JSON.stringify(s)),e._fillPlainObject(t._$erialized,s))}}(0,n);try{if(n===cf){var o=n.__values__;0!==o.length&&"_$erialized"===o[o.length-1]||(y("The '_$erialized' prop of MissingScript is missing. Will force the raw data to be save."),y("    Error props: ['"+o+"']. Please contact jare."));var a=i;i=function(e,t,n,i){try{JSON.parse(JSON.stringify(n._$erialized))||y("Unable to load previously serialized data. "+JSON.stringify(n))}catch(e){y("Error when checking MissingScript 7, "+e)}a(e,t,n,i)}}}catch(e){y("Error when checking MissingScript 6, "+e)}Oe(n,"__deserialize__",i,!0)}i(this,e,t,n)},t._deserializeAndAssignField=function(e,t,n){var i=t.__id__;if("number"==typeof i){var o=this.deserializedList[i];if(o)e[n]=o;else{var a,r=this._serializedData[i];e[n]=this._deserializeObject(r,i,void 0,n),null===(a=this._onDereferenced)||void 0===a||a.call(this,this.deserializedList,i,e,n)}}else{var c=t.__uuid__;if(c){var s=t.__expectedType__;this.result.push(e,n,c,s)}else e[n]=this._deserializeObject(t,-1)}return!1},t._deserializeObjectField=function(e){var t=e.__id__;if("number"==typeof t){var n=this.deserializedList[t];if(n)return n;var i=this._serializedData[t];return this._deserializeObject(i,t,void 0,void 0)}if(e.__uuid__)throw e.__expectedType__,new Error("Asset reference field serialization is currently not supported in custom serialization.");return this._deserializeObject(e,-1)},t._fillPlainObject=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeAndAssignField(e,i,n)&&(e[n]=null):e[n]=null}},t._deserializeFastDefinedObject=function(e,t,n){if(n===s.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===s.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n!==s.Color){if(n===s.Size)return e.width=t.width||0,void(e.height=t.height||0);for(var i=jt(n),o=n.__values__,a=0;a<o.length;a++){var r=o[a],c=t[r];void 0!==c||t.hasOwnProperty(r)||(c=mn.getDefault(i[r+yf])),"object"!=typeof c?e[r]=c:c?this._deserializeAndAssignField(e,c,r):e[r]=null}}else{e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;var l=t.a;e.a=void 0===l?255:l}},e}();Ef.pool=new Sf;var Tf=[Ji,Di,to,Bi,Ri,oo,ro,Yi];function Af(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}var If=[function(e,t){e.x=t[1],e.y=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.z=t[3]},Af,Af,function(e,t){e._val=t[1]},function(e,t){e.width=t[1],e.height=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},function(e,t){Yi.fromArray(e,t,1)}],bf=0,Pf=1,wf=2,Rf=3,Nf=4,Df=5,Of=e("d0",function(){function e(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null,this.uuidTypeList=[]}var t=e.prototype;return t.init=function(e){e?(this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]):this.uuidList||(this.uuidList=[],this.uuidObjList=[],this.uuidPropList=[],this.uuidTypeList=[])},t.reset=function(){this.uuidList&&(this.uuidList.length=0,this.uuidObjList.length=0,this.uuidPropList.length=0,this.uuidTypeList.length=0)},t.push=function(e,t,n,i){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n),this.uuidTypeList.push(i||"")},e}());function Mf(e,t){for(var n=e[Nf][t[0]],i=n[0],o=new(0,i[0]),a=i[1],r=i[2],c=n[n.length-1],s=1;s<c;++s)o[a[n[s]]]=t[s];for(;s<t.length;++s){var l=a[n[s]],u=i[n[s]+r];(0,Gf[u])(e,o,l,t[s])}return o}function zf(e,t,n){var i=new t;return i._deserialize?i._deserialize(n,e[0]):N(5303,Ue(t)),i}function Lf(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function Ff(e){return function(t,n,i,o){n[i]=o;for(var a=0;a<o.length;++a)e(t,o,a,o[a])}}function Uf(e,t,n,i){t[n]=null,e[8][i]=t}function Bf(e,t,n,i){t[n]=Mf(e,i)}Of.pool=new ft((function(e){e.reset()}),5),Of.pool.get=function(){return this._get()||new Of};var Gf=new Array(13);function kf(e,t,n){return e||n(t),Object}function Hf(e,t,n,i,o,a,r){var c=e(t);if(!c){if(o)return void(n[i]=function(t,n,i){return function(){var o=e(i)||kf(a,i,r);return t[n]=o,new o}}(n,i,t));c=kf(a,t,r)}n[i]=c}function jf(e,t,n,i){for(var o=n||st,a=e[Rf],r=0;r<a.length;++r){var c=a[r];"string"!=typeof c?Hf(o,c[0],c,0,t,n,i):Hf(o,c,a,r,t,n,i)}}function Vf(e){var t=e[Nf];if(t)for(var n=e[Rf],i=0;i<t.length;++i){var o=t[i];o[0]=n[o[0]]}}function qf(e,t,n){"string"==typeof e&&(e=JSON.parse(e));var i,o=!t;if(t=t||Of.pool.get(),function(e){if(Array.isArray(e)){var t=e[0];return"number"==typeof t||t instanceof Wf}return!1}(e)){t.init(e),n=n||{};var a,r=e[bf],c=!1;if("object"==typeof r&&(c=r.preprocessed,r=r.version),r<1)throw new Error(H(5304,r));n._version=r,n.result=t,e[0]=n,c||(jf(e,!1,n.classFinder,null!==(a=n.reportMissingClass)&&void 0!==a?a:qf.reportMissingClass),Vf(e)),s.game._isCloning=!0;var l=e[5],u=function(e){var t=e[5],n=e[6],i=0===n?0:n.length,o=t[t.length-1],a=t.length-i;"number"!=typeof o?o=0:(o<0&&(o=~o),--a);for(var r=0;r<a;++r)t[r]=Mf(e,t[r]);for(var c=e[Rf],s=0;s<i;++s,++r){var l=n[s],u=t[r];if(l>=0){var f=c[l];t[r]=zf(e,f,u)}else(0,Gf[l=~l])(e,t,r,u)}return o}(e);s.game._isCloning=!1,e[7]&&function(e,t,n){for(var i=e.length-1,o=0,a=3*e[i];o<a;o+=3){var r=e[o],c=t[e[o+2]],s=e[o+1];s>=0?r[n[s]]=c:r[~s]=c}for(;o<i;o+=3){var l=t[e[o]],u=t[e[o+2]],f=e[o+1];f>=0?l[n[f]]=u:l[~f]=u}}(e[7],l,e[wf]),function(e){for(var t=e[5],n=e[wf],i=e[Pf],o=e[8],a=e[9],r=e[10],c=0;c<o.length;++c){var s=o[c];"number"==typeof s&&(o[c]=t[s]);var l=a[c];"number"==typeof l&&(l=l>=0?n[l]:~l,a[c]=l);var u=r[c];"number"==typeof u&&(r[c]=i[u])}}(e),i=l[u]}else i=function(e,t,n){var i,o=(n=n||{}).classFinder||st,a=n.createAssetRefs||mf.platform===zn.EDITOR_CORE,r=n.customEnv,c=n.ignoreEditorOnly,l=null!==(i=n.reportMissingClass)&&void 0!==i?i:s.deserialize.reportMissingClass;t.init();var u=Ef.pool.get(t,o,l,r,c);s.game._isCloning=!0;var f=u.deserialize(e);return s.game._isCloning=!1,Ef.pool.put(u),a&&t.assignAssetsBy(EditorExtends.serialize.asAsset),f}(e,t,n);return o&&Of.pool.put(t),i}Gf[0]=function(e,t,n,i){t[n]=i},Gf[1]=Lf,Gf[2]=Ff(Lf),Gf[3]=Ff(Uf),Gf[4]=Bf,Gf[5]=function(e,t,n,i){If[i[0]](t[n],i)},Gf[6]=Uf,Gf[7]=function(e,t,n,i){t[n].set(i)},Gf[8]=function(e,t,n,i){var o=new Tf[i[0]];If[i[0]](o,i),t[n]=o},Gf[9]=Ff(Bf),Gf[10]=function(e,t,n,i){var o=e[Rf][i[0]];t[n]=zf(e,o,i[1])},Gf[11]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=1;a<i.length;a+=3){var r=i[a],c=i[a+1],s=i[a+2];(0,Gf[c])(e,o,r,s)}},Gf[12]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=0;a<o.length;++a){var r=o[a],c=i[a+1];0!==c&&(0,Gf[c])(e,o,a,r)}},qf.Details=Of,qf.reportMissingClass=function(e){N(5302,e)};var Wf=function(e){this.preprocessed=!0,this.version=e};s.deserialize=qf;var Yf,Xf,Kf,Qf,Jf,Zf,$f,e_,t_,n_,i_,o_=yn.Flags.Destroyed,a_=yn.Flags.PersistentMask,r_=[];function c_(e){var t;if(e instanceof yn){if(e._instantiate)return s.game._isCloning=!0,t=e._instantiate(null,!0),s.game._isCloning=!1,t;if(e instanceof s.Asset)throw new TypeError(H(6903))}return s.game._isCloning=!0,t=s_(e),s.game._isCloning=!1,t}function s_(e,t){var n;l_(e,n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),t);for(var i=0,o=r_.length;i<o;++i)r_[i]._iN$t=null;return r_.length=0,n}function l_(e,t,n){mt.value(e,"_iN$t",t,!0),r_.push(e);var i=e.constructor;if(s.Class._isCCClass(i))!function(e,t,n,i){for(var o=e.__values__,a=0;a<o.length;a++){var r=o[a],c=t[r];if("object"==typeof c&&c){var s=n[r];s instanceof Et&&s.constructor===c.constructor?s.set(c):n[r]=c._iN$t||u_(c,i)}else n[r]=c}}(i,e,t,n);else for(var o in e)if(e.hasOwnProperty(o)&&(95!==o.charCodeAt(0)||95!==o.charCodeAt(1)||"__type__"===o||"__prefab"===o)){var a=e[o];if("object"==typeof a&&a){if(a===t)continue;t[o]=a._iN$t||u_(a,n)}else t[o]=a}e instanceof yn&&(t._objFlags&=a_)}function u_(e,t){if(e instanceof Et)return e.clone();if(e instanceof s.Asset)return e;var n;if(ArrayBuffer.isView(e)){var i=e.length;n=new e.constructor(i),e._iN$t=n,r_.push(e);for(var o=0;o<i;++o)n[o]=e[o];return n}if(Array.isArray(e)){var a=e.length;n=new Array(a),e._iN$t=n,r_.push(e);for(var r=0;r<a;++r){var c=e[r];n[r]="object"==typeof c&&c?c._iN$t||u_(c,t):c}return n}if(e._objFlags&o_)return null;var l=e.constructor;if(s.Class._isCCClass(l)){if(t)if(t instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return e}else if(t instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof s.Component&&e.node&&!e.node.isChildOf(t))return e;n=new l}else if(l===Object)n={};else{if(l)return e;n=Object.create(null)}return l_(e,n,t),n}function f_(e,t){return(t<<3)+e}function __(e){return p_[e]}function m_(e){switch(e){case n_.Uint8:return Uint8Array;case n_.Uint16:return Uint16Array;case n_.Uint32:return Uint32Array;case n_.Int8:return Int8Array;case n_.Int16:return Int16Array;case n_.Int32:return Int32Array;case n_.Float32:return Float32Array;case n_.Float64:return Float64Array}}c_._clone=s_,s.instantiate=c_,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(n_||(n_={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(i_||(i_={})),e("d7",ml("cc.CompactValueTypeArray")((e_=$f=function(){function e(){ie(this,"_byteOffset",Kf,this),ie(this,"_unitCount",Qf,this),ie(this,"_unitElement",Jf,this),ie(this,"_length",Zf,this)}return e.lengthFor=function(e,t,n){return __(t).requiredUnits*e.length*m_(n).BYTES_PER_ELEMENT},e.compress=function(t,n,i,o,a,r){for(var c=__(n),s=m_(i),l=c.requiredUnits*t.length,u=new s(o,a,l),f=0;f<t.length;++f)c.compress(u,f,t[f]);var _=new e;return _._unitElement=f_(i,n),_._byteOffset=r,_._unitCount=l,_._length=t.length,_},e.prototype.decompress=function(e){for(var t,n={storageUnit:7&(t=this._unitElement),elementType:t>>3},i=n.storageUnit,o=__(n.elementType),a=new(m_(i))(e,this._byteOffset,this._unitCount),r=new Array(this._length),c=0;c<this._length;++c)r[c]=o.decompress(a,c);return r},e}(),$f.StorageUnit=n_,$f.ElementType=i_,Kf=oe((Xf=e_).prototype,"_byteOffset",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Qf=oe(Xf.prototype,"_unitCount",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Jf=oe(Xf.prototype,"_unitElement",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return f_(n_.Uint8,i_.Scalar)}}),Zf=oe(Xf.prototype,"_length",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Yf=Xf))||Yf);var p_=((t_={})[i_.Scalar]={requiredUnits:1,compress:function(e,t,n){e[t]=n},decompress:function(e,t){return e[t]}},t_[i_.Vec2]={requiredUnits:2,compress:function(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:function(e,t){return new Di(e[2*t],e[2*t+1])}},t_[i_.Vec3]={requiredUnits:3,compress:function(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:function(e,t){return new Di(e[3*t],e[3*t+1],e[3*t+2])}},t_[i_.Vec4]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new to(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},t_[i_.Quat]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new Bi(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},t_[i_.Mat4]={requiredUnits:16,compress:function(e,t,n){Yi.toArray(e,n,16*t)},decompress:function(e,t){return Yi.fromArray(new Yi,e,16*t)}},t_);function h_(){return 0}function d_(e){return e}function v_(e){return e*e}function g_(e){return e*(2-e)}function x_(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}function y_(e){return e*e*e}function C_(e){return--e*e*e+1}function S_(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}function E_(e){return e*e*e*e}function T_(e){return 1- --e*e*e*e}function A_(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}function I_(e){return e*e*e*e*e}function b_(e){return--e*e*e*e*e+1}function P_(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}function w_(e){return 1===e?1:1-Math.cos(e*Math.PI/2)}function R_(e){return Math.sin(e*Math.PI/2)}function N_(e){return.5*(1-Math.cos(Math.PI*e))}function D_(e){return 0===e?0:Math.pow(1024,e-1)}function O_(e){return 1===e?1:1-Math.pow(2,-10*e)}function M_(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}function z_(e){return 1-Math.sqrt(1-e*e)}function L_(e){return Math.sqrt(1- --e*e)}function F_(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}function U_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4))}function B_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin(2*(e-t)*Math.PI/.4)+1)}function G_(e){var t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*.5+1)}function k_(e){if(1===e)return 1;var t=1.70158;return e*e*((t+1)*e-t)}function H_(e){if(0===e)return 0;var t=1.70158;return--e*e*((t+1)*e+t)+1}function j_(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}function V_(e){return 1-q_(1-e)}function q_(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function W_(e){return e<.5?.5*V_(2*e):.5*q_(2*e-1)+.5}function Y_(e){return e<=0?0:e>=1?1:e*e*(3-2*e)}function X_(e){return e<=0?0:e>=1?1:e*e*e*(e*(6*e-15)+10)}s._decorator=au;var K_,Q_,J_=cm(v_,g_),Z_=cm(y_,C_),$_=cm(E_,T_),em=cm(I_,b_),tm=cm(w_,R_),nm=cm(D_,O_),im=cm(z_,L_),om=cm(U_,B_),am=cm(k_,H_),rm=cm(V_,q_);function cm(e,t){return function(n){return n<.5?t(2*n)/2:e(2*n-1)/2+.5}}e("dR",Object.freeze({__proto__:null,constant:h_,linear:d_,quadIn:v_,quadOut:g_,quadInOut:x_,cubicIn:y_,cubicOut:C_,cubicInOut:S_,quartIn:E_,quartOut:T_,quartInOut:A_,quintIn:I_,quintOut:b_,quintInOut:P_,sineIn:w_,sineOut:R_,sineInOut:N_,expoIn:D_,expoOut:O_,expoInOut:M_,circIn:z_,circOut:L_,circInOut:F_,elasticIn:U_,elasticOut:B_,elasticInOut:G_,backIn:k_,backOut:H_,backInOut:j_,bounceIn:V_,bounceOut:q_,bounceInOut:W_,smooth:Y_,fade:X_,quadOutIn:J_,cubicOutIn:Z_,quartOutIn:$_,quintOutIn:em,sineOutIn:tm,expoOutIn:nm,circOutIn:im,elasticOutIn:om,backOutIn:am,bounceOutIn:rm})),function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.QUAD_IN=2]="QUAD_IN",e[e.QUAD_OUT=3]="QUAD_OUT",e[e.QUAD_IN_OUT=4]="QUAD_IN_OUT",e[e.QUAD_OUT_IN=5]="QUAD_OUT_IN",e[e.CUBIC_IN=6]="CUBIC_IN",e[e.CUBIC_OUT=7]="CUBIC_OUT",e[e.CUBIC_IN_OUT=8]="CUBIC_IN_OUT",e[e.CUBIC_OUT_IN=9]="CUBIC_OUT_IN",e[e.QUART_IN=10]="QUART_IN",e[e.QUART_OUT=11]="QUART_OUT",e[e.QUART_IN_OUT=12]="QUART_IN_OUT",e[e.QUART_OUT_IN=13]="QUART_OUT_IN",e[e.QUINT_IN=14]="QUINT_IN",e[e.QUINT_OUT=15]="QUINT_OUT",e[e.QUINT_IN_OUT=16]="QUINT_IN_OUT",e[e.QUINT_OUT_IN=17]="QUINT_OUT_IN",e[e.SINE_IN=18]="SINE_IN",e[e.SINE_OUT=19]="SINE_OUT",e[e.SINE_IN_OUT=20]="SINE_IN_OUT",e[e.SINE_OUT_IN=21]="SINE_OUT_IN",e[e.EXPO_IN=22]="EXPO_IN",e[e.EXPO_OUT=23]="EXPO_OUT",e[e.EXPO_IN_OUT=24]="EXPO_IN_OUT",e[e.EXPO_OUT_IN=25]="EXPO_OUT_IN",e[e.CIRC_IN=26]="CIRC_IN",e[e.CIRC_OUT=27]="CIRC_OUT",e[e.CIRC_IN_OUT=28]="CIRC_IN_OUT",e[e.CIRC_OUT_IN=29]="CIRC_OUT_IN",e[e.ELASTIC_IN=30]="ELASTIC_IN",e[e.ELASTIC_OUT=31]="ELASTIC_OUT",e[e.ELASTIC_IN_OUT=32]="ELASTIC_IN_OUT",e[e.ELASTIC_OUT_IN=33]="ELASTIC_OUT_IN",e[e.BACK_IN=34]="BACK_IN",e[e.BACK_OUT=35]="BACK_OUT",e[e.BACK_IN_OUT=36]="BACK_IN_OUT",e[e.BACK_OUT_IN=37]="BACK_OUT_IN",e[e.BOUNCE_IN=38]="BOUNCE_IN",e[e.BOUNCE_OUT=39]="BOUNCE_OUT",e[e.BOUNCE_IN_OUT=40]="BOUNCE_IN_OUT",e[e.BOUNCE_OUT_IN=41]="BOUNCE_OUT_IN",e[e.SMOOTH=42]="SMOOTH",e[e.FADE=43]="FADE"}(Q_||(Q_=e("gb",{})));var sm,lm,um,fm,_m,mm=((K_={})[Q_.CONSTANT]=h_,K_[Q_.LINEAR]=d_,K_[Q_.QUAD_IN]=v_,K_[Q_.QUAD_OUT]=g_,K_[Q_.QUAD_IN_OUT]=x_,K_[Q_.QUAD_OUT_IN]=J_,K_[Q_.CUBIC_IN]=y_,K_[Q_.CUBIC_OUT]=C_,K_[Q_.CUBIC_IN_OUT]=S_,K_[Q_.CUBIC_OUT_IN]=Z_,K_[Q_.QUART_IN]=E_,K_[Q_.QUART_OUT]=T_,K_[Q_.QUART_IN_OUT]=A_,K_[Q_.QUART_OUT_IN]=$_,K_[Q_.QUINT_IN]=I_,K_[Q_.QUINT_OUT]=b_,K_[Q_.QUINT_IN_OUT]=P_,K_[Q_.QUINT_OUT_IN]=em,K_[Q_.SINE_IN]=w_,K_[Q_.SINE_OUT]=R_,K_[Q_.SINE_IN_OUT]=N_,K_[Q_.SINE_OUT_IN]=tm,K_[Q_.EXPO_IN]=D_,K_[Q_.EXPO_OUT]=O_,K_[Q_.EXPO_IN_OUT]=M_,K_[Q_.EXPO_OUT_IN]=nm,K_[Q_.CIRC_IN]=z_,K_[Q_.CIRC_OUT]=L_,K_[Q_.CIRC_IN_OUT]=F_,K_[Q_.CIRC_OUT_IN]=im,K_[Q_.ELASTIC_IN]=U_,K_[Q_.ELASTIC_OUT]=B_,K_[Q_.ELASTIC_IN_OUT]=G_,K_[Q_.ELASTIC_OUT_IN]=om,K_[Q_.BACK_IN]=k_,K_[Q_.BACK_OUT]=H_,K_[Q_.BACK_IN_OUT]=j_,K_[Q_.BACK_OUT_IN]=am,K_[Q_.BOUNCE_IN]=V_,K_[Q_.BOUNCE_OUT]=q_,K_[Q_.BOUNCE_IN_OUT]=W_,K_[Q_.BOUNCE_OUT_IN]=rm,K_[Q_.SMOOTH]=Y_,K_[Q_.FADE]=X_,K_);function pm(e){return mm[e]}var hm,dm,vm,gm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).interpolationMode=Zl.LINEAR,t.tangentWeightMode=eu.NONE,t.value=0,t.rightTangent=0,t.rightTangentWeight=0,t.leftTangent=0,t.leftTangentWeight=0,t.easingMethod=Q_.LINEAR,t}return X(t,e),t}(ou);function xm(e){var t=new gm;if("number"==typeof e)t.value=e;else{var n=e.interpolationMode,i=e.tangentWeightMode,o=e.value,a=e.rightTangent,r=e.rightTangentWeight,c=e.leftTangent,s=e.leftTangentWeight,l=e.easingMethod,u=e[vn];t.value=null!=o?o:t.value,t.rightTangent=null!=a?a:t.rightTangent,t.rightTangentWeight=null!=r?r:t.rightTangentWeight,t.leftTangent=null!=c?c:t.leftTangent,t.leftTangentWeight=null!=s?s:t.leftTangentWeight,t.interpolationMode=null!=n?n:t.interpolationMode,t.tangentWeightMode=null!=i?i:t.tangentWeightMode,t.easingMethod=null!=l?l:t.easingMethod,u&&(t[vn]=u)}return t}mn.fastDefine("cc.RealKeyframeValue",gm,{interpolationMode:Zl.LINEAR,tangentWeightMode:eu.NONE,value:0,rightTangent:0,rightTangentWeight:0,leftTangent:0,leftTangentWeight:0,easingMethod:Q_.LINEAR}),mn.Attr.setClassAttr(gm,vn,"editorOnly",!0),(hm=gm,null!==(vm=(dm=hm)[gl])&&void 0!==vm?vm:dm[gl]={}).uniquelyReferenced=!0;var ym,Cm=e("dU",ml("cc.RealCurve")((_m=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"preExtrapolation",um,ee(t)),ie(t,"postExtrapolation",fm,ee(t)),t}X(t,e);var n=t.prototype;return n.evaluate=function(e){var t=this._times,n=this._values,i=t.length;if(0===i)return 0;var o=t[0],a=t[i-1];if(e<o){var r=this.preExtrapolation,c=n[0];if(r===$l.CLAMP||i<2)return c.value;switch(r){case $l.LINEAR:return Fm(o,n[0].value,t[1],n[1].value,e);case $l.LOOP:e=zm(e,o,a);break;case $l.PING_PONG:e=Lm(e,o,a);break;default:return c.value}}else if(e>a){var s=this.postExtrapolation,l=n[i-1];if(s===$l.CLAMP||i<2)return l.value;switch(s){case $l.LINEAR:return Fm(a,l.value,t[i-2],n[i-2].value,e);case $l.LOOP:e=zm(e,o,a);break;case $l.PING_PONG:e=Lm(e,o,a);break;default:return l.value}}var u=ol(t,e);if(u>=0)return n[u].value;var f=~u,_=f-1,m=t[_],p=n[_],h=t[f];return function(e,t,n,i,o){var a=n-e;switch(t.interpolationMode){default:case Zl.CONSTANT:return t.value;case Zl.LINEAR:var r=t.easingMethod===Q_.LINEAR?o:pm(t.easingMethod)(o);return yi(t.value,i.value,r);case Zl.CUBIC:var c=1/3,s=t.rightTangent,l=t.rightTangentWeight,u=0!=(t.tangentWeightMode&eu.RIGHT),f=i.leftTangent,_=i.leftTangentWeight,m=0!=(i.tangentWeightMode&eu.LEFT);if(u||m){var p=0;if(u)p=l;else{var h=a,d=a*s;p=Math.sqrt(h*h+d*d)*c}var v=Math.atan(s),g=Math.cos(v)*p+e,x=Math.sin(v)*p+t.value,y=0;if(m)y=_;else{var C=a,S=a*f;y=Math.sqrt(C*C+S*S)*c}var E=Math.atan(f),T=(g-e)/a,A=(-Math.cos(E)*y+n-e)/a,I=x,b=-Math.sin(E)*y+i.value,P=[0,0,0],w=function(e,t,n,i,o){var a=n/i,r=t/i,c=a*a,s=1/3*(-1/3*c+r),l=.5*(2/27*a*c-1/3*a*r+e/i),u=s*s*s,f=l*l+u,_=0;if(iu(f)){if(iu(l))return o[0]=0,1;var m=Math.cbrt(-l);return o[0]=2*m,o[1]=-m,2}if(f<0){var p=1/3*Math.acos(-l/Math.sqrt(-u)),h=2*Math.sqrt(-s);o[0]=h*Math.cos(p),o[1]=-h*Math.cos(p+Math.PI/3),o[2]=-h*Math.cos(p-Math.PI/3),_=3}else{var d=Math.sqrt(f),v=Math.cbrt(d-l),g=-Math.cbrt(d+l);o[0]=v+g,_=1}for(var x=1/3*a,y=0;y<_;++y)o[y]-=x;return _}(0-o,3*T,3*A-6*T,3*(T-A)+1,P),R=function(e,t,n){var i=n;if(1===t)i=e[0];else{i=-1/0;for(var o=0;o<t;++o){var a=e[o];a>=0&&a<=1&&a>i&&(i=a)}i===-1/0&&(i=0)}return i}(P,w,o);return Um(t.value,I,b,i.value,R)}var N=t.value+c*s*a,D=i.value-c*f*a;return Um(t.value,N,D,i.value,o)}}(m,p,h,n[f],(e-m)/(h-m))},n.addKeyFrame=function(t,n){return e.prototype.addKeyFrame.call(this,t,xm(n))},n.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((function(e){return xm(e)})));else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return xm(e[1])})))}},n.isConstant=function(e){if(this._values.length<=1)return!0;var t=this._values[0].value;return this._values.every((function(n){return gi(n.value,t,e)}))},n[pf]=function(e,t){if(t.toCCON){var n=this._times,i=this._values,o=n.length,a=new DataView(new ArrayBuffer(0+Sm+Sm+Em+Tm*o+Dm*o)),r=0;a.setUint8(r,this.preExtrapolation),r+=Sm,a.setUint8(r,this.postExtrapolation),r+=Sm,a.setUint32(r,o,!0),r+=Em,n.forEach((function(e,t){return a.setFloat32(r+Tm*t,e,!0)})),r+=Tm*o;for(var c,s=ne(i);!(c=s()).done;){var l=c.value;r=Om(a,l,r)}var u=new Uint8Array(a.buffer,0,r);e.writeProperty("bytes",u);var f=i.map((function(e){return e[vn]}));f.some((function(e){return void 0!==e}))&&e.writeProperty("keyframeValueEditorExtras",f)}else e.writeThis()},n[hf]=function(e,t){if(t.fromCCON){var n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength),o=0;this.preExtrapolation=i.getUint8(o),o+=Sm,this.postExtrapolation=i.getUint8(o),o+=Sm;var a=i.getUint32(o,!0);o+=Em;var r=Array.from({length:a},(function(e,t){return i.getFloat32(o+Tm*t,!0)}));o+=Tm*a;for(var c=new Array(a),s=0;s<a;++s){var l=xm({});o=Mm(i,l,o),c[s]=l}n.byteLength;var u=e.readProperty("keyframeValueEditorExtras");u&&(u.length,u.forEach((function(e,t){return c[t][vn]=e}))),this._times=r,this._values=c}else e.readThis()},t}(nu),um=oe((lm=_m).prototype,"preExtrapolation",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $l.CLAMP}}),fm=oe(lm.prototype,"postExtrapolation",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $l.CLAMP}}),sm=lm))||sm);!function(e){e[e.VALUE=1]="VALUE",e[e.INTERPOLATION_MODE=2]="INTERPOLATION_MODE",e[e.TANGENT_WEIGHT_MODE=4]="TANGENT_WEIGHT_MODE",e[e.LEFT_TANGENT=8]="LEFT_TANGENT",e[e.LEFT_TANGENT_WEIGHT=16]="LEFT_TANGENT_WEIGHT",e[e.RIGHT_TANGENT=32]="RIGHT_TANGENT",e[e.RIGHT_TANGENT_WEIGHT=64]="RIGHT_TANGENT_WEIGHT"}(ym||(ym={}));var Sm=1,Em=4,Tm=4,Am=xm({}),Im=Am.interpolationMode,bm=Am.tangentWeightMode,Pm=Am.leftTangent,wm=Am.leftTangentWeight,Rm=Am.rightTangent,Nm=Am.rightTangentWeight,Dm=26;function Om(e,t,n){var i=0,o=n,a=o;o+=4;var r=t.value,c=t.interpolationMode,s=t.tangentWeightMode,l=t.rightTangent,u=t.rightTangentWeight,f=t.leftTangent,_=t.leftTangentWeight,m=t.easingMethod;return e.setFloat32(o,r,!0),o+=4,c!==Im&&(i|=ym.INTERPOLATION_MODE,e.setUint8(o,c),o+=1),s!==bm&&(i|=ym.TANGENT_WEIGHT_MODE,e.setUint8(o,s),o+=1),f!==Pm&&(i|=ym.LEFT_TANGENT,e.setFloat32(o,f,!0),o+=4),_!==wm&&(i|=ym.LEFT_TANGENT_WEIGHT,e.setFloat32(o,_,!0),o+=4),l!==Rm&&(i|=ym.RIGHT_TANGENT,e.setFloat32(o,l,!0),o+=4),u!==Nm&&(i|=ym.RIGHT_TANGENT_WEIGHT,e.setFloat32(o,u,!0),o+=4),i|=m<<8,e.setUint32(a,i,!0),o}function Mm(e,t,n){var i=n,o=e.getUint32(i,!0);i+=4,t.value=e.getFloat32(i,!0),i+=4,o&ym.INTERPOLATION_MODE&&(t.interpolationMode=e.getUint8(i),i+=1),o&ym.TANGENT_WEIGHT_MODE&&(t.tangentWeightMode=e.getUint8(i),i+=1),o&ym.LEFT_TANGENT&&(t.leftTangent=e.getFloat32(i,!0),i+=4),o&ym.LEFT_TANGENT_WEIGHT&&(t.leftTangentWeight=e.getFloat32(i,!0),i+=4),o&ym.RIGHT_TANGENT&&(t.rightTangent=e.getFloat32(i,!0),i+=4),o&ym.RIGHT_TANGENT_WEIGHT&&(t.rightTangentWeight=e.getFloat32(i,!0),i+=4);var a=(65280&o)>>8;return t.easingMethod=a,i}function zm(e,t,n){return t+Ii(e-t,n-t)}function Lm(e,t,n){return t+bi(e-t,n-t)}function Fm(e,t,n,i,o){return t+(i-t)/(n-e)*(o-e)}function Um(e,t,n,i,o){var a=1-o;return a*a*a*e+3*a*a*o*t+3*a*o*o*n+o*o*o*i}function Bm(e,t,n,i,o){var a=1-o;return a*(a*(e+(3*t-e)*o)+3*n*o*o)+i*o*o*o}s.bezier=Bm;var Gm,km,Hm,jm,Vm,qm,Wm,Ym,Xm,Km,Qm,Jm=Math.cos,Zm=Math.acos,$m=Math.max,ep=2*Math.PI,tp=Math.sqrt;function np(e){return e<0?-Math.pow(-e,1/3):Math.pow(e,1/3)}function ip(e,t){var n=function(e,t){var n,i,o,a,r=t-0,c=t-e[0],s=3*r,l=3*c,u=3*(t-e[2]),f=1/(-r+l-u+(t-1)),_=1/3,m=(s-6*c+u)*f,p=m*_,h=(-s+l)*f,d=(3*h-m*m)*_,v=d*_,g=(2*m*m*m-9*m*h+r*f*27)/27,x=g/2,y=x*x+v*v*v;if(y<0){var C=-d*_,S=tp(C*C*C),E=-g/(2*S),T=Zm(E<-1?-1:E>1?1:E),A=2*np(S);return i=A*Jm(T*_)-p,o=A*Jm((T+ep)*_)-p,a=A*Jm((T+2*ep)*_)-p,i>=0&&i<=1?o>=0&&o<=1?a>=0&&a<=1?$m(i,o,a):$m(i,o):a>=0&&a<=1?$m(i,a):i:o>=0&&o<=1?a>=0&&a<=1?$m(o,a):o:a}if(0===y)return o=-(n=x<0?np(-x):-np(x))-p,(i=2*n-p)>=0&&i<=1?o>=0&&o<=1?$m(i,o):i:o;var I=tp(y);return(n=np(-x+I))-np(x+I)-p}(e,t),i=e[1];return((1-n)*(i+(e[3]-i)*n)*3+n*n)*n}s.bezierByTime=ip,function(e){e[e.SLERP=0]="SLERP",e[e.CONSTANT=1]="CONSTANT"}(Qm||(Qm=e("dZ",{})));var op,ap=ml("cc.QuatKeyframeValue")(Gm=El((Hm=oe((km=function(e){var t=void 0===e?{}:e,n=t.value,i=t.interpolationMode,o=t.easingMethod;ie(this,"interpolationMode",Hm,this),ie(this,"value",jm,this),ie(this,"easingMethod",Vm,this),this.value=n?Bi.clone(n):this.value,this.interpolationMode=null!=i?i:this.interpolationMode,this.easingMethod=null!=o?o:this.easingMethod}).prototype,"interpolationMode",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Qm.SLERP}}),jm=oe(km.prototype,"value",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Bi.clone(Bi.IDENTITY)}}),Vm=oe(km.prototype,"easingMethod",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Q_.LINEAR}}),Gm=km))||Gm)||Gm;function rp(e){return new ap(e)}e("dY",ml("cc.QuatCurve")((Km=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"preExtrapolation",Ym,ee(t)),ie(t,"postExtrapolation",Xm,ee(t)),t}X(t,e);var n=t.prototype;return n.evaluate=function(e,t){var n;null!==(n=t)&&void 0!==n||(t=new Bi);var i=this._times,o=this._values,a=this.postExtrapolation,r=this.preExtrapolation,c=i.length;if(0===c)return t;var s=i[0],l=i[c-1];if(e<s){var u=o[0];switch(r){case $l.LOOP:e=s+Ii(e-s,l-s);break;case $l.PING_PONG:e=s+bi(e-s,l-s);break;case $l.CLAMP:default:return Bi.copy(t,u.value)}}else if(e>l){var f=o[c-1];switch(a){case $l.LOOP:e=s+Ii(e-s,l-s);break;case $l.PING_PONG:e=s+bi(e-s,l-s);break;case $l.CLAMP:default:return Bi.copy(t,f.value)}}var _=ol(i,e);if(_>=0)return Bi.copy(t,o[_].value);var m=~_,p=m-1,h=i[p],d=o[p],v=i[m],g=o[m],x=(e-h)/(v-h);switch(d.interpolationMode){default:case Qm.CONSTANT:return Bi.copy(t,d.value);case Qm.SLERP:var y=d.easingMethod,C=y===Q_.LINEAR?x:Array.isArray(y)?ip(y,x):pm(y)(x);return Bi.slerp(t,d.value,g.value,C)}},n.addKeyFrame=function(t,n){var i=new ap(n);return e.prototype.addKeyFrame.call(this,t,i)},n.assignSorted=function(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((function(e){return rp(e)})));else{var n=Array.from(e);this.setKeyframes(n.map((function(e){return e[0]})),n.map((function(e){return rp(e[1])})))}},n[pf]=function(e,t){if(t.toCCON){var n=this._times,i=this._values,o=!0;i.forEach((function(e,t,n){var i=n[0];o&&e.interpolationMode!==i.interpolationMode&&(o=!1)}));var a=n.length,r=vp*(o?1:a),c=i.reduce((function(e,t){var n=t.easingMethod;return e+(Array.isArray(n)?gp+4*yp:gp)}),0),s=0,l=new DataView(new ArrayBuffer(s+=mp+pp+hp*a+4*dp*a+c+r+0)),u=0,f=0;o&&(f|=op.INTERPOLATION_MODE),l.setUint32(u,f,!0),u+=mp,l.setUint32(u,a,!0),u+=pp,n.forEach((function(e,t){return l.setFloat32(u+hp*t,e,!0)})),u+=hp*a,i.forEach((function(e,t){var n=e.value,i=n.x,o=n.y,a=n.z,r=n.w,c=u+4*dp*t;l.setFloat32(c+0*dp,i,!0),l.setFloat32(c+1*dp,o,!0),l.setFloat32(c+2*dp,a,!0),l.setFloat32(c+3*dp,r,!0)})),u+=4*dp*a,i.forEach((function(e){var t=e.easingMethod;Array.isArray(t)?(l.setUint8(u,xp),++u,l.setFloat32(u+0*yp,t[0],!0),l.setFloat32(u+1*yp,t[1],!0),l.setFloat32(u+2*yp,t[2],!0),l.setFloat32(u+3*yp,t[3],!0),u+=4*yp):(l.setUint8(u,t),++u)}));var _=u;u+=r;var m=_;i.forEach((function(e){var t=e.interpolationMode;l.setUint8(m,t),o||(m+=vp)}));var p=new Uint8Array(l.buffer);e.writeProperty("bytes",p)}else e.writeThis()},n[hf]=function(e,t){if(t.fromCCON){var n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength),o=0,a=i.getUint32(o,!0);o+=mp;var r=a&op.INTERPOLATION_MODE,c=i.getUint32(o,!0);o+=pp;var s=Array.from({length:c},(function(e,t){return i.getFloat32(o+hp*t,!0)})),l=o+=hp*c;o+=4*dp*c;var u=Array.from({length:c},(function(e,t){var n=l+4*dp*t,a=i.getFloat32(n+0*dp,!0),r=i.getFloat32(n+1*dp,!0),c=i.getFloat32(n+2*dp,!0),s=i.getFloat32(n+3*dp,!0),u=i.getUint8(o);++o;var f=rp({value:{x:a,y:r,z:c,w:s}});return u!==xp?f.easingMethod=u:(f.easingMethod=[i.getFloat32(o+0*yp,!0),i.getFloat32(o+1*yp,!0),i.getFloat32(o+2*yp,!0),i.getFloat32(o+3*yp,!0)],o+=4*yp),f}));if(r){var f=i.getUint8(o);++o;for(var _=0;_<c;++_)u[_].interpolationMode=f}else{for(var m=0;m<c;++m){var p=i.getUint8(o+m);u[m].interpolationMode=p}o+=c}this._times=s,this._values=u}else e.readThis()},t}(nu),Ym=oe((Wm=Km).prototype,"preExtrapolation",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $l.CLAMP}}),Xm=oe(Wm.prototype,"postExtrapolation",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $l.CLAMP}}),qm=Wm))||qm),function(e){e[e.INTERPOLATION_MODE=1]="INTERPOLATION_MODE"}(op||(op={}));var cp,sp,lp,up,fp,_p,mp=1,pp=4,hp=4,dp=4,vp=1,gp=1,xp=255,yp=4,Cp=(e("d_",ml("cc.ObjectCurve")(cp=function(e){function t(){return e.apply(this,arguments)||this}return X(t,e),t.prototype.evaluate=function(e){var t=this.searchKeyframe(e);if(t>=0)return this._values[t];var n=xi(~t-1,0,this._values.length-1);return this._values[n]},t}(nu))||cp),e("e$",(function(){this.time=0,this.value=0,this.inTangent=0,this.outTangent=0})));mn.fastDefine("cc.Keyframe",Cp,{time:0,value:0,inTangent:0,outTangent:0});var Sp=function(){function e(){this.index=void 0,this.time=void 0,this.endTime=void 0,this.coefficient=void 0,this.index=-1,this.time=0,this.endTime=0,this.coefficient=new Float32Array(4)}return e.prototype.evaluate=function(e){return t=e-this.time,n=this.coefficient,t*(t*(t*n[0]+n[1])+n[2])+n[3];var t,n},e}();function Ep(e){switch(e){default:case Zs.Default:case Zs.Normal:case Zs.Clamp:return $l.CLAMP;case Zs.PingPong:return $l.PING_PONG;case Zs.Loop:return $l.LOOP}}function Tp(e){switch(e){default:case $l.LINEAR:case $l.CLAMP:return Zs.Clamp;case $l.PING_PONG:return Zs.PingPong;case $l.LOOP:return Zs.Loop}}function Ap(e,t){console.warn(e+" is deprecated, please use "+t+" instead.")}e("f0",ml("cc.AnimationCurve")((_p=fp=function(){function e(e){if(void 0===e&&(e=null),ie(this,"_curve",up,this),this.cachedKey=void 0,e instanceof Cm)this._curve=e;else{var t=new Cm;this._curve=t,t.preExtrapolation=$l.LOOP,t.postExtrapolation=$l.CLAMP,e?t.assignSorted(e.map((function(e){return[e.time,{interpolationMode:Zl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]}))):t.assignSorted([[0,{interpolationMode:Zl.CUBIC,value:1}],[1,{interpolationMode:Zl.CUBIC,value:1}]])}this.cachedKey=new Sp}var t=e.prototype;return t.addKey=function(e){e?this._curve.addKeyFrame(e.time,{interpolationMode:Zl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}):this._curve.clear()},t.evaluate_slow=function(e){return this._curve.evaluate(e)},t.evaluate=function(e){var t=this.cachedKey,n=this._curve,i=n.keyFramesCount-1,o=e,a=e<0?n.preExtrapolation:n.postExtrapolation,r=n.getKeyframeTime(0),c=n.getKeyframeTime(i);switch(a){case $l.LOOP:o=Ii(e-r,c-r)+r;break;case $l.PING_PONG:o=bi(e-r,c-r)+r;break;case $l.CLAMP:default:o=xi(e,r,c)}if(o>=t.time&&o<t.endTime)return t.evaluate(o);var s=this.findIndex(t,o),l=Math.min(s+1,i);return this.calcOptimizedKey(t,s,l),t.evaluate(o)},t.calcOptimizedKey=function(e,t,n){var i=this._curve.getKeyframeTime(t),o=this._curve.getKeyframeTime(n),a=this._curve.getKeyframeValue(t),r=a.value,c=a.leftTangent,s=this._curve.getKeyframeValue(n),l=s.value,u=s.rightTangent;e.index=t,e.time=i,e.endTime=o;var f=o-i,_=l-r,m=1/(f*f),p=c*f,h=u*f;e.coefficient[0]=(p+h-_-_)*m/f,e.coefficient[1]=(_+_+_-p-p-h)*m,e.coefficient[2]=c,e.coefficient[3]=r},t.findIndex=function(e,t){var n=this._curve,i=n.keyFramesCount,o=e.index;if(-1!==o)if(t>n.getKeyframeTime(o))for(var a=0;a<3;a++){var r=o+a;if(r+1<i&&n.getKeyframeTime(r+1)>t)return r}else for(var c=0;c<3;c++){var s=o-c;if(s>=0&&n.getKeyframeTime(s-1)<=t)return s-1}for(var l,u=0,f=i;f-u>1;)l=Math.floor((u+f)/2),n.getKeyframeTime(l)>=t?f=l:u=l;return u},W(e,[{key:"_internalCurve",get:function(){return this._curve}},{key:"keyFrames",get:function(){return Array.from(this._curve.keyframes()).map((function(e){var t=e[0],n=e[1],i=new Cp;return i.time=t,i.value=n.value,i.inTangent=n.leftTangent,i.outTangent=n.rightTangent,i}))},set:function(e){this._curve.assignSorted(e.map((function(e){return[e.time,{interpolationMode:Zl.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]})))}},{key:"preWrapMode",get:function(){return Tp(this._curve.preExtrapolation)},set:function(e){this._curve.preExtrapolation=Ep(e)}},{key:"postWrapMode",get:function(){return Tp(this._curve.postExtrapolation)},set:function(e){this._curve.postExtrapolation=Ep(e)}}]),e}(),fp.defaultKF=[{time:0,value:1,inTangent:0,outTangent:0},{time:1,value:1,inTangent:0,outTangent:0}],up=oe((lp=_p).prototype,"_curve",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),sp=lp))||sp),ri(ms,"intersect",[{name:"ray_aabb",newName:"rayAABB"},{name:"ray_plane",newName:"rayPlane"},{name:"ray_triangle",newName:"rayTriangle"},{name:"ray_sphere",newName:"raySphere"},{name:"ray_obb",newName:"rayOBB"},{name:"ray_capsule",newName:"rayCapsule"},{name:"ray_subMesh",newName:"raySubMesh"},{name:"ray_mesh",newName:"rayMesh"},{name:"ray_model",newName:"rayModel"},{name:"line_plane",newName:"linePlane"},{name:"line_triangle",newName:"lineTriangle"},{name:"line_aabb",newName:"lineAABB"},{name:"line_obb",newName:"lineOBB"},{name:"line_sphere",newName:"lineSphere"},{name:"aabb_aabb",newName:"aabbWithAABB"},{name:"aabb_obb",newName:"aabbWithOBB"},{name:"aabb_plane",newName:"aabbPlane"},{name:"aabb_frustum",newName:"aabbFrustum"},{name:"aabbFrustum_accurate",newName:"aabbFrustumAccurate"},{name:"obb_point",newName:"obbPoint"},{name:"obb_plane",newName:"obbPlane"},{name:"obb_frustum",newName:"obbFrustum"},{name:"obbFrustum_accurate",newName:"obbFrustumAccurate"},{name:"obb_obb",newName:"obbWithOBB"},{name:"obb_capsule",newName:"obbCapsule"},{name:"sphere_plane",newName:"spherePlane"},{name:"sphere_frustum",newName:"sphereFrustum"},{name:"sphereFrustum_accurate",newName:"sphereFrustumAccurate"},{name:"sphere_sphere",newName:"sphereWithSphere"},{name:"sphere_aabb",newName:"sphereAABB"},{name:"sphere_obb",newName:"sphereOBB"},{name:"sphere_capsule",newName:"sphereCapsule"},{name:"capsule_capsule",newName:"capsuleWithCapsule"}]),e("f2",function(e){function t(){var t;return t=e.call(this)||this,Ap("line","Line"),t}return X(t,e),t}(Eo)),e("f3",function(e){function t(){var t;return t=e.call(this)||this,Ap("plane","Plane"),t}return X(t,e),t}(As)),e("f4",function(e){function t(){var t;return t=e.call(this)||this,Ap("ray","Ray"),t}return X(t,e),t}(To)),e("f5",function(e){function t(){var t;return t=e.call(this)||this,Ap("triangle","Triangle"),t}return X(t,e),t}(ga)),e("f6",function(e){function t(){var t;return t=e.call(this)||this,Ap("sphere","Sphere"),t}return X(t,e),t}(va)),e("f7",function(e){function t(){var t;return t=e.call(this)||this,Ap("aabb","AABB"),t}return X(t,e),t}(qs)),e("f8",function(e){function t(){var t;return t=e.call(this)||this,Ap("obb","OBB"),t}return X(t,e),t}(Ks)),e("f9",function(e){function t(){var t;return t=e.call(this)||this,Ap("capsule","Capsule"),t}return X(t,e),t}(Qs)),e("fa",function(e){function t(){var t;return t=e.call(this)||this,Ap("frustum","Frustum"),t}return X(t,e),t}(il));var Ip={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295},bp=e("dJ",function(){function e(){}return e.makeMaskInclude=function(e){for(var t,n=0,i=ne(e);!(t=i()).done;)n|=t.value;return n},e.makeMaskExclude=function(t){return~e.makeMaskInclude(t)},e.addLayer=function(t,n){if(void 0!==n)if(n>19||n<0)console.warn("maximum layers reached.");else{var i=1<<n;e.Enum[t],H(2104,t),e.Enum[t]=i,mt.value(e.Enum,String(i),t),e.BitMask[t]=i,mt.value(e.BitMask,String(i),t)}else console.warn("bitNum can't be undefined")},e.deleteLayer=function(t){if(t>19||t<0)console.warn("do not change buildin layers.");else{var n=1<<t;delete e.Enum[e.Enum[n]],delete e.Enum[n],delete e.BitMask[e.BitMask[n]],delete e.BitMask[n]}},e.nameToLayer=function(t){return void 0===t?(console.warn("name can't be undefined"),-1):ni(e.Enum[t])},e.layerToName=function(t){return t>31||t<0?(console.warn("Unable to access unknown layer."),""):e.Enum[1<<t]},e}());bp.Enum=xt(Ip),bp.BitMask=gt(Y({},Ip)),s.Layers=bp;var Pp,wp,Rp=e("eJ","MainFlow"),Np=e("eD","ForwardFlow"),Dp=e("eE","ShadowFlow");!function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(Pp||(Pp={})),s.RenderPassStage=Pp,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(wp||(wp=e("gi",{})));var Op,Mp=e("ek",{bindings:[],layouts:{}}),zp=e("eI",{bindings:[],layouts:{}});!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.SAMPLER_DIFFUSEMAP=6]="SAMPLER_DIFFUSEMAP",e[e.COUNT=7]="COUNT"}(Op||(Op=e("ei",{})));var Lp,Fp=Op.SAMPLER_SHADOWMAP,Up=Op.COUNT-Fp;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.UBO_UI_LOCAL=5]="UBO_UI_LOCAL",e[e.SAMPLER_JOINTS=6]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=7]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=8]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=9]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=10]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=11]="SAMPLER_SPRITE",e[e.SAMPLER_REFLECTION=12]="SAMPLER_REFLECTION",e[e.STORAGE_REFLECTION=13]="STORAGE_REFLECTION",e[e.COUNT=14]="COUNT"}(Lp||(Lp=e("gZ",{})));var Bp,Gp=Lp.SAMPLER_JOINTS,kp=Lp.COUNT-Gp;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(Bp||(Bp=e("eA",{})));var Hp=e("eQ",new Oa);Hp.bufferOffsets=[0,Fp+Gp,Fp],Hp.samplerOffsets=[-Fp,Up+kp,Up-Gp],Hp.flexibleSet=1;var jp=e("el",(function(){}));jp.TIME_OFFSET=0,jp.NATIVE_SIZE_OFFSET=jp.TIME_OFFSET+4,jp.SCREEN_SIZE_OFFSET=jp.NATIVE_SIZE_OFFSET+4,jp.COUNT=jp.SCREEN_SIZE_OFFSET+4,jp.SIZE=4*jp.COUNT,jp.NAME="CCGlobal",jp.BINDING=Op.UBO_GLOBAL,jp.DESCRIPTOR=new ur(jp.BINDING,_a.UNIFORM_BUFFER,1,ea.ALL),jp.LAYOUT=new qa(Bp.GLOBAL,jp.BINDING,jp.NAME,[new Va("cc_time",Fo.FLOAT4,1),new Va("cc_screenSize",Fo.FLOAT4,1),new Va("cc_nativeSize",Fo.FLOAT4,1)],1),Mp.layouts[jp.NAME]=jp.LAYOUT,Mp.bindings[jp.BINDING]=jp.DESCRIPTOR;var Vp=e("em",(function(){}));Vp.MAT_VIEW_OFFSET=0,Vp.MAT_VIEW_INV_OFFSET=Vp.MAT_VIEW_OFFSET+16,Vp.MAT_PROJ_OFFSET=Vp.MAT_VIEW_INV_OFFSET+16,Vp.MAT_PROJ_INV_OFFSET=Vp.MAT_PROJ_OFFSET+16,Vp.MAT_VIEW_PROJ_OFFSET=Vp.MAT_PROJ_INV_OFFSET+16,Vp.MAT_VIEW_PROJ_INV_OFFSET=Vp.MAT_VIEW_PROJ_OFFSET+16,Vp.CAMERA_POS_OFFSET=Vp.MAT_VIEW_PROJ_INV_OFFSET+16,Vp.SCREEN_SCALE_OFFSET=Vp.CAMERA_POS_OFFSET+4,Vp.EXPOSURE_OFFSET=Vp.SCREEN_SCALE_OFFSET+4,Vp.MAIN_LIT_DIR_OFFSET=Vp.EXPOSURE_OFFSET+4,Vp.MAIN_LIT_COLOR_OFFSET=Vp.MAIN_LIT_DIR_OFFSET+4,Vp.AMBIENT_SKY_OFFSET=Vp.MAIN_LIT_COLOR_OFFSET+4,Vp.AMBIENT_GROUND_OFFSET=Vp.AMBIENT_SKY_OFFSET+4,Vp.GLOBAL_FOG_COLOR_OFFSET=Vp.AMBIENT_GROUND_OFFSET+4,Vp.GLOBAL_FOG_BASE_OFFSET=Vp.GLOBAL_FOG_COLOR_OFFSET+4,Vp.GLOBAL_FOG_ADD_OFFSET=Vp.GLOBAL_FOG_BASE_OFFSET+4,Vp.NEAR_FAR_OFFSET=Vp.GLOBAL_FOG_ADD_OFFSET+4,Vp.VIEW_PORT_OFFSET=Vp.NEAR_FAR_OFFSET+4,Vp.COUNT=Vp.VIEW_PORT_OFFSET+4,Vp.SIZE=4*Vp.COUNT,Vp.NAME="CCCamera",Vp.BINDING=Op.UBO_CAMERA,Vp.DESCRIPTOR=new ur(Vp.BINDING,_a.UNIFORM_BUFFER,1,ea.ALL),Vp.LAYOUT=new qa(Bp.GLOBAL,Vp.BINDING,Vp.NAME,[new Va("cc_matView",Fo.MAT4,1),new Va("cc_matViewInv",Fo.MAT4,1),new Va("cc_matProj",Fo.MAT4,1),new Va("cc_matProjInv",Fo.MAT4,1),new Va("cc_matViewProj",Fo.MAT4,1),new Va("cc_matViewProjInv",Fo.MAT4,1),new Va("cc_cameraPos",Fo.FLOAT4,1),new Va("cc_screenScale",Fo.FLOAT4,1),new Va("cc_exposure",Fo.FLOAT4,1),new Va("cc_mainLitDir",Fo.FLOAT4,1),new Va("cc_mainLitColor",Fo.FLOAT4,1),new Va("cc_ambientSky",Fo.FLOAT4,1),new Va("cc_ambientGround",Fo.FLOAT4,1),new Va("cc_fogColor",Fo.FLOAT4,1),new Va("cc_fogBase",Fo.FLOAT4,1),new Va("cc_fogAdd",Fo.FLOAT4,1),new Va("cc_nearFar",Fo.FLOAT4,1),new Va("cc_viewPort",Fo.FLOAT4,1)],1),Mp.layouts[Vp.NAME]=Vp.LAYOUT,Mp.bindings[Vp.BINDING]=Vp.DESCRIPTOR;var qp=e("eh",(function(){}));qp.MAT_LIGHT_PLANE_PROJ_OFFSET=0,qp.MAT_LIGHT_VIEW_OFFSET=qp.MAT_LIGHT_PLANE_PROJ_OFFSET+16,qp.MAT_LIGHT_VIEW_PROJ_OFFSET=qp.MAT_LIGHT_VIEW_OFFSET+16,qp.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET=qp.MAT_LIGHT_VIEW_PROJ_OFFSET+16,qp.SHADOW_PROJ_DEPTH_INFO_OFFSET=qp.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET+4,qp.SHADOW_PROJ_INFO_OFFSET=qp.SHADOW_PROJ_DEPTH_INFO_OFFSET+4,qp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET=qp.SHADOW_PROJ_INFO_OFFSET+4,qp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET=qp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+4,qp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET=qp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+4,qp.SHADOW_COLOR_OFFSET=qp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+4,qp.COUNT=qp.SHADOW_COLOR_OFFSET+4,qp.SIZE=4*qp.COUNT,qp.NAME="CCShadow",qp.BINDING=Op.UBO_SHADOW,qp.DESCRIPTOR=new ur(qp.BINDING,_a.UNIFORM_BUFFER,1,ea.ALL),qp.LAYOUT=new qa(Bp.GLOBAL,qp.BINDING,qp.NAME,[new Va("cc_matLightPlaneProj",Fo.MAT4,1),new Va("cc_matLightView",Fo.MAT4,1),new Va("cc_matLightViewProj",Fo.MAT4,1),new Va("cc_shadowInvProjDepthInfo",Fo.FLOAT4,1),new Va("cc_shadowProjDepthInfo",Fo.FLOAT4,1),new Va("cc_shadowProjInfo",Fo.FLOAT4,1),new Va("cc_shadowNFLSInfo",Fo.FLOAT4,1),new Va("cc_shadowWHPBInfo",Fo.FLOAT4,1),new Va("cc_shadowLPNNInfo",Fo.FLOAT4,1),new Va("cc_shadowColor",Fo.FLOAT4,1)],1),Mp.layouts[qp.NAME]=qp.LAYOUT,Mp.bindings[qp.BINDING]=qp.DESCRIPTOR;var Wp=e("en",Op.SAMPLER_SHADOWMAP),Yp=new ur(Wp,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),Xp=new Wa(Bp.GLOBAL,Wp,"cc_shadowMap",Fo.SAMPLER2D,1);Mp.layouts.cc_shadowMap=Xp,Mp.bindings[Wp]=Yp;var Kp=e("gp",Op.SAMPLER_ENVIRONMENT),Qp=new ur(Kp,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),Jp=new Wa(Bp.GLOBAL,Kp,"cc_environment",Fo.SAMPLER_CUBE,1);Mp.layouts.cc_environment=Jp,Mp.bindings[Kp]=Qp;var Zp=e("gq",Op.SAMPLER_DIFFUSEMAP),$p=new ur(Zp,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),eh=new Wa(Bp.GLOBAL,Zp,"cc_diffuseMap",Fo.SAMPLER_CUBE,1);Mp.layouts.cc_diffuseMap=eh,Mp.bindings[Zp]=$p;var th=e("eo",Op.SAMPLER_SPOT_LIGHTING_MAP),nh=new ur(th,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),ih=new Wa(Bp.GLOBAL,th,"cc_spotLightingMap",Fo.SAMPLER2D,1);Mp.layouts.cc_spotLightingMap=ih,Mp.bindings[th]=nh;var oh=e("gl",(function(){}));oh.MAT_WORLD_OFFSET=0,oh.MAT_WORLD_IT_OFFSET=oh.MAT_WORLD_OFFSET+16,oh.LIGHTINGMAP_UVPARAM=oh.MAT_WORLD_IT_OFFSET+16,oh.COUNT=oh.LIGHTINGMAP_UVPARAM+4,oh.SIZE=4*oh.COUNT,oh.NAME="CCLocal",oh.BINDING=Lp.UBO_LOCAL,oh.DESCRIPTOR=new ur(oh.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX|ea.COMPUTE),oh.LAYOUT=new qa(Bp.LOCAL,oh.BINDING,oh.NAME,[new Va("cc_matWorld",Fo.MAT4,1),new Va("cc_matWorldIT",Fo.MAT4,1),new Va("cc_lightingMapUVParam",Fo.FLOAT4,1)],1),zp.layouts[oh.NAME]=oh.LAYOUT,zp.bindings[oh.BINDING]=oh.DESCRIPTOR;var ah=e("go",(function(){}));ah.WORLD_BOUND_CENTER=0,ah.WORLD_BOUND_HALF_EXTENTS=ah.WORLD_BOUND_CENTER+4,ah.COUNT=ah.WORLD_BOUND_HALF_EXTENTS+4,ah.SIZE=4*ah.COUNT,ah.NAME="CCWorldBound",ah.BINDING=Lp.UBO_LOCAL,ah.DESCRIPTOR=new ur(ah.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX|ea.COMPUTE),ah.LAYOUT=new qa(Bp.LOCAL,ah.BINDING,ah.NAME,[new Va("cc_worldBoundCenter",Fo.FLOAT4,1),new Va("cc_worldBoundHalfExtents",Fo.FLOAT4,1)],1),zp.layouts[ah.NAME]=ah.LAYOUT,zp.bindings[ah.BINDING]=ah.DESCRIPTOR;var rh=e("gn","a_matWorld0"),ch=function(){};ch.BATCHING_COUNT=10,ch.MAT_WORLDS_OFFSET=0,ch.SIZE=4*(ch.COUNT=16*ch.BATCHING_COUNT),ch.NAME="CCLocalBatched",ch.BINDING=Lp.UBO_LOCAL,ch.DESCRIPTOR=new ur(ch.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX|ea.COMPUTE),ch.LAYOUT=new qa(Bp.LOCAL,ch.BINDING,ch.NAME,[new Va("cc_matWorlds",Fo.MAT4,ch.BATCHING_COUNT)],1),zp.layouts[ch.NAME]=ch.LAYOUT,zp.bindings[ch.BINDING]=ch.DESCRIPTOR;var sh=e("eB",(function(){}));sh.LIGHTS_PER_PASS=1,sh.LIGHT_POS_OFFSET=0,sh.LIGHT_COLOR_OFFSET=sh.LIGHT_POS_OFFSET+4*sh.LIGHTS_PER_PASS,sh.LIGHT_SIZE_RANGE_ANGLE_OFFSET=sh.LIGHT_COLOR_OFFSET+4*sh.LIGHTS_PER_PASS,sh.LIGHT_DIR_OFFSET=sh.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*sh.LIGHTS_PER_PASS,sh.COUNT=sh.LIGHT_DIR_OFFSET+4*sh.LIGHTS_PER_PASS,sh.SIZE=4*sh.COUNT,sh.NAME="CCForwardLight",sh.BINDING=Lp.UBO_FORWARD_LIGHTS,sh.DESCRIPTOR=new ur(sh.BINDING,_a.DYNAMIC_UNIFORM_BUFFER,1,ea.FRAGMENT),sh.LAYOUT=new qa(Bp.LOCAL,sh.BINDING,sh.NAME,[new Va("cc_lightPos",Fo.FLOAT4,sh.LIGHTS_PER_PASS),new Va("cc_lightColor",Fo.FLOAT4,sh.LIGHTS_PER_PASS),new Va("cc_lightSizeRangeAngle",Fo.FLOAT4,sh.LIGHTS_PER_PASS),new Va("cc_lightDir",Fo.FLOAT4,sh.LIGHTS_PER_PASS)],1),zp.layouts[sh.NAME]=sh.LAYOUT,zp.bindings[sh.BINDING]=sh.DESCRIPTOR;var lh=e("eH",(function(){}));lh.LIGHTS_PER_PASS=10;var uh=e("gB",(function(){}));uh.JOINTS_TEXTURE_INFO_OFFSET=0,uh.COUNT=uh.JOINTS_TEXTURE_INFO_OFFSET+4,uh.SIZE=4*uh.COUNT,uh.NAME="CCSkinningTexture",uh.BINDING=Lp.UBO_SKINNING_TEXTURE,uh.DESCRIPTOR=new ur(uh.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX),uh.LAYOUT=new qa(Bp.LOCAL,uh.BINDING,uh.NAME,[new Va("cc_jointTextureInfo",Fo.FLOAT4,1)],1),zp.layouts[uh.NAME]=uh.LAYOUT,zp.bindings[uh.BINDING]=uh.DESCRIPTOR;var fh=e("gz",(function(){}));fh.JOINTS_ANIM_INFO_OFFSET=0,fh.COUNT=fh.JOINTS_ANIM_INFO_OFFSET+4,fh.SIZE=4*fh.COUNT,fh.NAME="CCSkinningAnimation",fh.BINDING=Lp.UBO_SKINNING_ANIMATION,fh.DESCRIPTOR=new ur(fh.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX),fh.LAYOUT=new qa(Bp.LOCAL,fh.BINDING,fh.NAME,[new Va("cc_jointAnimInfo",Fo.FLOAT4,1)],1),zp.layouts[fh.NAME]=fh.LAYOUT,zp.bindings[fh.BINDING]=fh.DESCRIPTOR;var _h=e("gD","a_jointAnimInfo"),mh=e("gA",(function(){}));mh.JOINTS_OFFSET=0,mh.COUNT=mh.JOINTS_OFFSET+360,mh.SIZE=4*mh.COUNT,mh.NAME="CCSkinning",mh.BINDING=Lp.UBO_SKINNING_TEXTURE,mh.DESCRIPTOR=new ur(mh.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX),mh.LAYOUT=new qa(Bp.LOCAL,mh.BINDING,mh.NAME,[new Va("cc_joints",Fo.FLOAT4,90)],1),zp.layouts[mh.NAME]=mh.LAYOUT,zp.bindings[mh.BINDING]=mh.DESCRIPTOR;var ph=e("gH",(function(){}));ph.MAX_MORPH_TARGET_COUNT=60,ph.OFFSET_OF_WEIGHTS=0,ph.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*ph.MAX_MORPH_TARGET_COUNT,ph.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=ph.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,ph.OFFSET_OF_VERTICES_COUNT=ph.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,ph.COUNT_BASE_4_BYTES=4*Math.ceil(ph.MAX_MORPH_TARGET_COUNT/4)+4,ph.SIZE=4*ph.COUNT_BASE_4_BYTES,ph.NAME="CCMorph",ph.BINDING=Lp.UBO_MORPH,ph.DESCRIPTOR=new ur(ph.BINDING,_a.UNIFORM_BUFFER,1,ea.VERTEX),ph.LAYOUT=new qa(Bp.LOCAL,ph.BINDING,ph.NAME,[new Va("cc_displacementWeights",Fo.FLOAT4,ph.MAX_MORPH_TARGET_COUNT/4),new Va("cc_displacementTextureInfo",Fo.FLOAT4,1)],1),zp.layouts[ph.NAME]=ph.LAYOUT,zp.bindings[ph.BINDING]=ph.DESCRIPTOR;var hh=function(){};hh.NAME="CCUILocal",hh.BINDING=Lp.UBO_UI_LOCAL,hh.DESCRIPTOR=new ur(hh.BINDING,_a.DYNAMIC_UNIFORM_BUFFER,1,ea.VERTEX),hh.LAYOUT=new qa(Bp.LOCAL,hh.BINDING,hh.NAME,[new Va("cc_local_data",Fo.FLOAT4,1)],1),zp.layouts[hh.NAME]=hh.LAYOUT,zp.bindings[hh.BINDING]=hh.DESCRIPTOR;var dh=e("gC",Lp.SAMPLER_JOINTS),vh=new ur(dh,_a.SAMPLER_TEXTURE,1,ea.VERTEX),gh=new Wa(Bp.LOCAL,dh,"cc_jointTexture",Fo.SAMPLER2D,1);zp.layouts.cc_jointTexture=gh,zp.bindings[dh]=vh;var xh=e("gK",Lp.SAMPLER_MORPH_POSITION),yh=new ur(xh,_a.SAMPLER_TEXTURE,1,ea.VERTEX),Ch=new Wa(Bp.LOCAL,xh,"cc_PositionDisplacements",Fo.SAMPLER2D,1);zp.layouts.cc_PositionDisplacements=Ch,zp.bindings[xh]=yh;var Sh=e("gJ",Lp.SAMPLER_MORPH_NORMAL),Eh=new ur(Sh,_a.SAMPLER_TEXTURE,1,ea.VERTEX),Th=new Wa(Bp.LOCAL,Sh,"cc_NormalDisplacements",Fo.SAMPLER2D,1);zp.layouts.cc_NormalDisplacements=Th,zp.bindings[Sh]=Eh;var Ah=e("gI",Lp.SAMPLER_MORPH_TANGENT),Ih=new ur(Ah,_a.SAMPLER_TEXTURE,1,ea.VERTEX),bh=new Wa(Bp.LOCAL,Ah,"cc_TangentDisplacements",Fo.SAMPLER2D,1);zp.layouts.cc_TangentDisplacements=bh,zp.bindings[Ah]=Ih;var Ph=e("gm",Lp.SAMPLER_LIGHTMAP),wh=new ur(Ph,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),Rh=new Wa(Bp.LOCAL,Ph,"cc_lightingMap",Fo.SAMPLER2D,1);zp.layouts.cc_lightingMap=Rh,zp.bindings[Ph]=wh;var Nh=Lp.SAMPLER_SPRITE,Dh=new ur(Nh,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),Oh=new Wa(Bp.LOCAL,Nh,"cc_spriteTexture",Fo.SAMPLER2D,1);zp.layouts.cc_spriteTexture=Oh,zp.bindings[Nh]=Dh;var Mh=e("gj",Lp.SAMPLER_REFLECTION),zh=new ur(Mh,_a.SAMPLER_TEXTURE,1,ea.FRAGMENT),Lh=new Wa(Bp.LOCAL,Mh,"cc_reflectionTexture",Fo.SAMPLER2D,1);zp.layouts.cc_reflectionTexture=Lh,zp.bindings[Mh]=zh;var Fh=e("gk",Lp.STORAGE_REFLECTION),Uh=new ur(Fh,_a.STORAGE_IMAGE,1,ea.COMPUTE),Bh=new Ka(Bp.LOCAL,Fh,"cc_reflectionStorage",Fo.IMAGE2D,1);zp.layouts.cc_reflectionStorage=Bh,zp.bindings[Fh]=Uh;var Gh=e("fX",bp.makeMaskExclude([bp.BitMask.UI_2D,bp.BitMask.GIZMOS,bp.BitMask.EDITOR,bp.BitMask.SCENE_GIZMO,bp.BitMask.PROFILER])),kh=bp.makeMaskExclude([bp.BitMask.UI_2D,bp.BitMask.PROFILER]),Hh=bp.Enum.ALL;function jh(e){return e.hasFeature(Mo.COLOR_FLOAT)&&e.hasFeature(Mo.TEXTURE_FLOAT)&&!(e.gfxAPI===Do.WEBGL)}e("dC",Object.freeze({__proto__:null,PIPELINE_FLOW_MAIN:Rp,PIPELINE_FLOW_FORWARD:Np,PIPELINE_FLOW_SHADOW:Dp,PIPELINE_FLOW_SMAA:"SMAAFlow",PIPELINE_FLOW_TONEMAP:"ToneMapFlow",get RenderPassStage(){return Pp},get RenderPriority(){return wp},globalDescriptorSetLayout:Mp,localDescriptorSetLayout:zp,get PipelineGlobalBindings(){return Op},get ModelLocalBindings(){return Lp},get SetIndex(){return Bp},bindingMappingInfo:Hp,UBOGlobal:jp,UBOCamera:Vp,UBOShadow:qp,UNIFORM_SHADOWMAP_BINDING:Wp,UNIFORM_ENVIRONMENT_BINDING:Kp,UNIFORM_DIFFUSEMAP_BINDING:Zp,UNIFORM_SPOT_LIGHTING_MAP_TEXTURE_BINDING:th,UBOLocal:oh,UBOWorldBound:ah,INST_MAT_WORLD:rh,UBOLocalBatched:ch,UBOForwardLight:sh,UBODeferredLight:lh,JOINT_UNIFORM_CAPACITY:30,UBOSkinningTexture:uh,UBOSkinningAnimation:fh,INST_JOINT_ANIM_INFO:_h,UBOSkinning:mh,UBOMorph:ph,UBOUILocal:hh,UNIFORM_JOINT_TEXTURE_BINDING:dh,UNIFORM_POSITION_MORPH_TEXTURE_BINDING:xh,UNIFORM_NORMAL_MORPH_TEXTURE_BINDING:Sh,UNIFORM_TANGENT_MORPH_TEXTURE_BINDING:Ah,UNIFORM_LIGHTMAP_TEXTURE_BINDING:Ph,UNIFORM_SPRITE_TEXTURE_BINDING:Nh,UNIFORM_REFLECTION_TEXTURE_BINDING:Mh,UNIFORM_REFLECTION_STORAGE_BINDING:Fh,CAMERA_DEFAULT_MASK:Gh,CAMERA_EDITOR_MASK:kh,MODEL_ALWAYS_MASK:Hh,supportsHalfFloatTexture:function(e){return e.hasFeature(Mo.COLOR_HALF_FLOAT)&&e.hasFeature(Mo.TEXTURE_HALF_FLOAT)&&!(e.gfxAPI===Do.WEBGL)},supportsFloatTexture:jh}));var Vh,qh,Wh,Yh,Xh,Kh,Qh,Jh=1024;function Zh(e){return!!(s.sys.hasFeature(s.sys.Feature.IMAGE_BITMAP)&&e instanceof ImageBitmap)}!function(e){e[e.RGB565=zo.R5G6B5]="RGB565",e[e.RGB5A1=zo.RGB5A1]="RGB5A1",e[e.RGBA4444=zo.RGBA4]="RGBA4444",e[e.RGB888=zo.RGB8]="RGB888",e[e.RGB32F=zo.RGB32F]="RGB32F",e[e.RGBA8888=zo.RGBA8]="RGBA8888",e[e.RGBA32F=zo.RGBA32F]="RGBA32F",e[e.A8=zo.A8]="A8",e[e.I8=zo.L8]="I8",e[e.AI8=zo.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=zo.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=zo.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=Jh++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=zo.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=zo.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=Jh++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=zo.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=Jh++]="RGBA_ETC1",e[e.RGB_ETC2=zo.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=zo.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=zo.ASTC_RGBA_4X4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=zo.ASTC_RGBA_5X4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=zo.ASTC_RGBA_5X5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=zo.ASTC_RGBA_6X5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=zo.ASTC_RGBA_6X6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=zo.ASTC_RGBA_8X5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=zo.ASTC_RGBA_8X6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=zo.ASTC_RGBA_8X8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=zo.ASTC_RGBA_10X5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=zo.ASTC_RGBA_10X6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=zo.ASTC_RGBA_10X8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=zo.ASTC_RGBA_10X10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=zo.ASTC_RGBA_12X10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=zo.ASTC_RGBA_12X12]="RGBA_ASTC_12x12"}(Vh||(Vh=e("fH",{}))),function(e){e[e.REPEAT=Xo.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=Xo.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=Xo.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=Xo.BORDER]="CLAMP_TO_BORDER"}(qh||(qh=e("h7",{}))),function(e){e[e.NONE=Yo.NONE]="NONE",e[e.LINEAR=Yo.LINEAR]="LINEAR",e[e.NEAREST=Yo.POINT]="NEAREST"}(Wh||(Wh=e("gE",{})));var $h,ed,td,nd,id,od,ad,rd,cd,sd,ld,ud,fd=e("dk",ml("cc.ImageAsset")((Qh=Kh=function(e){function t(t){var n;return(n=e.call(this)||this)._nativeData=void 0,n._exportedExts=void 0,n._format=Vh.RGBA8888,n._width=0,n._height=0,n._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==t&&n.reset(t),n}X(t,e);var n=t.prototype;return n.reset=function(e){Zh(e)||e instanceof HTMLElement?this._nativeData=e:(this._nativeData=e,this._format=e.format)},n.destroy=function(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset("")):Zh(this.data)&&this.data.close&&this.data.close(),e.prototype.destroy.call(this)},n._serialize=function(){},n._deserialize=function(e){var n="";"string"==typeof e?n=e:(this._width=e.w,this._height=e.h,n=e.fmt);for(var i,o=s.director.root?s.director.root.device:null,a=n.split("_"),r=Number.MAX_VALUE,c=this._format,l="",u=s.macro.SUPPORT_TEXTURE_FORMATS,f=ne(a);!(i=f()).done;){var _=i.value.split("@"),m=parseInt(_[0],void 0),p=t.extnames[m]||_[0],h=u.indexOf(p);if(-1!==h&&h<r){var d=_[1]?parseInt(_[1]):this._format;if(!(".astc"!==p||o&&o.hasFeature(Mo.FORMAT_ASTC)))continue;if(!(".pvr"!==p||o&&o.hasFeature(Mo.FORMAT_PVRTC)))continue;if(!(d!==Vh.RGB_ETC1&&d!==Vh.RGBA_ETC1||o&&o.hasFeature(Mo.FORMAT_ETC1)))continue;if(!(d!==Vh.RGB_ETC2&&d!==Vh.RGBA_ETC2||o&&o.hasFeature(Mo.FORMAT_ETC2)))continue;if(".webp"===p&&!s.sys.hasFeature(s.sys.Feature.WEBP))continue;r=h,l=p,c=d}}l?(this._setRawAsset(l),this._format=c):w(3121)},n.initDefault=function(n){if(e.prototype.initDefault.call(this,n),t._sharedPlaceHolderCanvas)this.reset(t._sharedPlaceHolderCanvas);else{var i=document.createElement("canvas"),o=i.getContext("2d"),a=i.width=i.height=2;o.fillStyle="#ff00ff",o.fillRect(0,0,a,a),this.reset(i),t._sharedPlaceHolderCanvas=i}},n.validate=function(){return!!this.data},W(t,[{key:"_nativeAsset",get:function(){return this._nativeData},set:function(e){e instanceof HTMLElement||Zh(e)||(e.format=e.format||this._format),this.reset(e)}},{key:"data",get:function(){return this._nativeData&&((e=this._nativeData)instanceof HTMLImageElement||e instanceof HTMLCanvasElement||Zh(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}},{key:"width",get:function(){return this._nativeData.width||this._width}},{key:"height",get:function(){return this._nativeData.height||this._height}},{key:"format",get:function(){return this._format}},{key:"isCompressed",get:function(){return this._format>=Vh.RGB_ETC1&&this._format<=Vh.RGBA_ASTC_12x12||this._format>=Vh.RGB_A_PVRTC_2BPPV1&&this._format<=Vh.RGBA_ETC1}},{key:"url",get:function(){return this.nativeUrl}}]),t}(Fu),Kh.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],Kh._sharedPlaceHolderCanvas=null,oe((Xh=Qh).prototype,"_nativeAsset",[tu],Object.getOwnPropertyDescriptor(Xh.prototype,"_nativeAsset"),Xh.prototype),Yh=Xh))||Yh);s.ImageAsset=fd,St(zo);var _d=new Ae("Tex"),md=e("fY",ml("cc.TextureBase")((ud=ld=function(e){function t(){var t;return ie(t=e.call(this)||this,"_format",td,ee(t)),ie(t,"_minFilter",nd,ee(t)),ie(t,"_magFilter",id,ee(t)),ie(t,"_mipFilter",od,ee(t)),ie(t,"_wrapS",ad,ee(t)),ie(t,"_wrapT",rd,ee(t)),ie(t,"_wrapR",cd,ee(t)),ie(t,"_anisotropy",sd,ee(t)),t._width=1,t._height=1,t._id=void 0,t._samplerInfo=new ja,t._gfxSampler=null,t._gfxDevice=null,t._textureHash=0,t._id=_d.getNewId(),t._gfxDevice=t._getGFXDevice(),t._textureHash=Hr(t._id,666),t}X(t,e);var n=t.prototype;return n.getId=function(){return this._id},n.getPixelFormat=function(){return this._format},n.getAnisotropy=function(){return this._anisotropy},n.setWrapMode=function(e,t,n){void 0===n&&(n=e),this._wrapS=e,this._samplerInfo.addressU=e,this._wrapT=t,this._samplerInfo.addressV=t,this._wrapR=n,this._samplerInfo.addressW=n,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))},n.setFilters=function(e,t){this._minFilter=e,this._samplerInfo.minFilter=e,this._magFilter=t,this._samplerInfo.magFilter=t,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))},n.setMipFilter=function(e){this._mipFilter=e,this._samplerInfo.mipFilter=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))},n.setAnisotropy=function(e){this._anisotropy=e,this._samplerInfo.maxAnisotropy=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))},n.destroy=function(){var t,n=e.prototype.destroy.call(this);return n&&(null===(t=s.director.root)||void 0===t?void 0:t.batcher2D)&&s.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),n},n.getHash=function(){return this._textureHash},n.getGFXTexture=function(){return null},n.getSamplerInfo=function(){return this._samplerInfo},n.getGFXSampler=function(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo):N(9302)),this._gfxSampler},n._serialize=function(){return""},n._deserialize=function(e){var t=e.split(",");t.unshift(""),t.length>=5&&(this.setFilters(parseInt(t[1]),parseInt(t[2])),this.setWrapMode(parseInt(t[3]),parseInt(t[4]))),t.length>=7&&(this.setMipFilter(parseInt(t[5])),this.setAnisotropy(parseInt(t[6])))},n._getGFXDevice=function(){return s.director.root?s.director.root.device:null},n._getGFXFormat=function(){return this._getGFXPixelFormat(this._format)},n._setGFXFormat=function(e){this._format=void 0===e?Vh.RGBA8888:e},n._getGFXPixelFormat=function(e){return e===Vh.RGBA_ETC1?e=Vh.RGB_ETC1:e===Vh.RGB_A_PVRTC_4BPPV1?e=Vh.RGB_PVRTC_4BPPV1:e===Vh.RGB_A_PVRTC_2BPPV1&&(e=Vh.RGB_PVRTC_2BPPV1),e},W(t,[{key:"isCompressed",get:function(){return this._format>=Vh.RGB_ETC1&&this._format<=Vh.RGBA_ASTC_12x12||this._format>=Vh.RGB_A_PVRTC_2BPPV1&&this._format<=Vh.RGBA_ETC1}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}}]),t}(Fu),ld.PixelFormat=Vh,ld.WrapMode=qh,ld.Filter=Wh,td=oe((ed=ud).prototype,"_format",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vh.RGBA8888}}),nd=oe(ed.prototype,"_minFilter",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Wh.LINEAR}}),id=oe(ed.prototype,"_magFilter",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Wh.LINEAR}}),od=oe(ed.prototype,"_mipFilter",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Wh.NONE}}),ad=oe(ed.prototype,"_wrapS",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return qh.REPEAT}}),rd=oe(ed.prototype,"_wrapT",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return qh.REPEAT}}),cd=oe(ed.prototype,"_wrapR",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return qh.REPEAT}}),sd=oe(ed.prototype,"_anisotropy",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),$h=ed))||$h);s.TextureBase=md;var pd=e("fq",new WeakMap),hd=e("fr",new WeakSet);function dd(e,t){var n;n=cf.safeFindClass;var i,o=Of.pool.get();try{i=qf(e,o,{classFinder:n,customEnv:t})}catch(e){throw y(e),Of.pool.put(o),e}i._uuid=t.__uuid__||"";for(var a=o.uuidList,r=o.uuidObjList,c=o.uuidPropList,s=o.uuidTypeList||[],l=[],u=0;u<a.length;u++){var f=a[u];l[u]={uuid:xu(f),owner:r[u],prop:c[u],type:mt._getClassById(s[u])}}return pd.set(i,l),i._native&&hd.add(i),Of.pool.put(o),i}e("fJ",new WeakSet);var vd,gd=function(){function e(){this._depends=new ru}var t=e.prototype;return t.init=function(){this._depends.clear()},t.getNativeDep=function(e){var t=this._depends.get(e);return t&&t.nativeDep?Y({},t.nativeDep):null},t.getDeps=function(e){return this._depends.has(e)?this._depends.get(e).deps:[]},t.getDepsRecursively=function(e){var t=Object.create(null),n=[];return this._descend(e,t,n),n},t.remove=function(e){this._depends.remove(e)},t.parse=function(e,t){var n,i,o=null;if(Array.isArray(t)||t.__type__||t instanceof df){if(this._depends.has(e))return this._depends.get(e);if(!Array.isArray(t)||"number"==typeof(i=(n=t[5])[n.length-1])&&i<0)try{var a=dd(t,{__uuid__:e});(o=this._parseDepsFromAsset(a)).nativeDep&&(o.nativeDep.uuid=e),fu.add(e+"@import",a)}catch(t){uu.remove(e+"@import"),o={deps:[]}}else o={deps:this._parseDepsFromJson(t)}}else{if(this._depends.has(e)&&(o=this._depends.get(e)).parsedFromExistAsset)return o;o=this._parseDepsFromAsset(t)}return this._depends.add(e,o),o},t._parseDepsFromAsset=function(e){for(var t={deps:[],parsedFromExistAsset:!0},n=pd.get(e),i=0,o=n.length;i<o;i++)t.deps.push(n[i].uuid);return hd.has(e)&&(t.nativeDep=e._nativeDep),t},t._parseDepsFromJson=function(e){var t=function(e){return n=(t=e)[Pf],t[10].map((function(e){return n[e]}));var t,n}(e);return t.forEach((function(e,n){return t[n]=xu(e)})),t},t._descend=function(e,t,n){for(var i=this.getDeps(e),o=0;o<i.length;o++){var a=i[o];t[a]||(t[a]=!0,n.push(a),this._descend(a,t,n))}},e}(),xd=e("fm",new gd),yd=[new Ra];function Cd(e){return e&&0==(e&e-1)}var Sd,Ed,Td,Ad,Id,bd,Pd=ml("cc.SimpleTexture")(vd=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._gfxTexture=null,t._mipmapLevel=1,t._textureWidth=0,t._textureHeight=0,t}X(t,e);var n=t.prototype;return n.getGFXTexture=function(){return this._gfxTexture},n.destroy=function(){return this._tryDestroyTexture(),e.prototype.destroy.call(this)},n.updateImage=function(){this.updateMipmaps(0)},n.updateMipmaps=function(){},n.uploadData=function(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=0),this._gfxTexture&&!(this._mipmapLevel<=t)){var i=this._getGFXDevice();if(i){var o=yd[0];o.texExtent.width=this._textureWidth>>t,o.texExtent.height=this._textureHeight>>t,o.texSubres.mipLevel=t,o.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,yd):i.copyTexImagesToTexture([e],this._gfxTexture,yd)}}},n._assignImage=function(e,t,n){var i=e.data;if(i&&(this.uploadData(i,t,n),this._checkTextureLoaded(),Tt.CLEANUP_IMAGE_CACHE)){var o=xd.getDeps(this._uuid),a=o.indexOf(e._uuid);-1!==a&&(ye(o,a),e.decRef())}},n._checkTextureLoaded=function(){this._textureReady()},n._textureReady=function(){this.loaded=!0,this.emit("load")},n._setMipmapLevel=function(e){this._mipmapLevel=e<1?1:e},n._getGfxTextureCreateInfo=function(){return null},n._tryReset=function(){if(this._tryDestroyTexture(),0!==this._mipmapLevel){var e=this._getGFXDevice();e&&this._createTexture(e)}},n._createTexture=function(e){if(0!==this._width&&0!==this._height){var t=Vo.NONE;this._mipFilter!==Wh.NONE&&function(e,t,n){return!(e.gfxAPI===Do.WEBGL)||Cd(t)&&Cd(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){for(var n=Math.max(e,t),i=0;n;)n>>=1,i++;return i}(this._width,this._height),t=Vo.GEN_MIPMAP);var n=this._getGfxTextureCreateInfo({usage:jo.SAMPLED|jo.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t});if(n){var i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}}},n._tryDestroyTexture=function(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)},W(t,[{key:"mipmapLevel",get:function(){return this._mipmapLevel}}]),t}(md))||vd;s.SimpleTexture=Pd;var wd,Rd,Nd,Dd,Od,Md,zd,Ld=e("dl",(Sd=ml("cc.Texture2D"),Ed=ql([fd]),Sd((bd=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",Id,ee(t)),t}X(t,e);var n=t.prototype;return n.initialize=function(){this.mipmaps=this._mipmaps},n.onLoaded=function(){this.initialize()},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.create=function(e,t,n,i){void 0===n&&(n=Vh.RGBA8888),void 0===i&&(i=1),this.reset({width:e,height:t,format:n,mipmapLevel:i})},n.toString=function(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""},n.updateMipmaps=function(e,t){if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),i=0;i<n;++i){var o=e+i;this._assignImage(this._mipmaps[o],o)}},n.getHtmlElementObj=function(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.description=function(){return"<cc.Texture2D | Name = "+(this._mipmaps[0]?this._mipmaps[0].url:"")+" | Dimension = "+this.width+" x "+this.height+">"},n.releaseTexture=function(){this.destroy()},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o)if(this._mipmaps[o]=new fd,i.mipmaps[o]){var a=i.mipmaps[o];n.result.push(this._mipmaps,""+o,a,mt._getClassId(fd))}},n._getGfxTextureCreateInfo=function(e){var t=new ka(Ho.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e)},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new fd;n.initDefault(),this.image=n},n.validate=function(){return this.mipmaps&&0!==this.mipmaps.length},W(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0];this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){t._assignImage(e,n)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Pd),Id=oe((Ad=bd).prototype,"_mipmaps",[Ed],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Td=Ad))||Td));s.Texture2D=Ld,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}(zd||(zd={}));var Fd=e("dm",ml("cc.TextureCube")((Md=Od=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"isRGBE",Nd,ee(t)),ie(t,"_mipmaps",Dd,ee(t)),t}X(t,e),t.fromTexture2DArray=function(e,n){for(var i=[],o=e.length/6,a=0;a<o;a++){var r=6*a;i.push({front:e[r+zd.front].image,back:e[r+zd.back].image,left:e[r+zd.left].image,right:e[r+zd.right].image,top:e[r+zd.top].image,bottom:e[r+zd.bottom].image})}return(n=n||new t).mipmaps=i,n};var n=t.prototype;return n.onLoaded=function(){this.mipmaps=this._mipmaps},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.updateMipmaps=function(e,t){var n=this;if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var i=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),o=function(t){var i=e+t;Ud(n._mipmaps[i],(function(e,t){n._assignImage(e,i,t)}))},a=0;a<i;++a)o(a)},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.releaseTexture=function(){this.mipmaps=[]},n._serialize=function(){return null},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this.isRGBE=i.rgbe,this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o){this._mipmaps[o]={front:new fd,back:new fd,left:new fd,right:new fd,top:new fd,bottom:new fd};var a=i.mipmaps[o],r=mt._getClassId(fd);n.result.push(this._mipmaps[o],"front",a.front,r),n.result.push(this._mipmaps[o],"back",a.back,r),n.result.push(this._mipmaps[o],"left",a.left,r),n.result.push(this._mipmaps[o],"right",a.right,r),n.result.push(this._mipmaps[o],"top",a.top,r),n.result.push(this._mipmaps[o],"bottom",a.bottom,r)}},n._getGfxTextureCreateInfo=function(e){var t=new ka(Ho.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t},n.initDefault=function(t){e.prototype.initDefault.call(this,t);var n=new fd;n.initDefault(),this.mipmaps=[{front:n,back:n,top:n,bottom:n,left:n,right:n}]},n.validate=function(){return 0!==this._mipmaps.length&&!this._mipmaps.find((function(e){return!(e.top&&e.bottom&&e.front&&e.back&&e.left&&e.right)}))},W(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0].front;this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){Ud(e,(function(e,i){t._assignImage(e,n,i)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Pd),Od.FaceIndex=zd,Nd=oe((Rd=Md).prototype,"isRGBE",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Dd=oe(Rd.prototype,"_mipmaps",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),wd=Rd))||wd);function Ud(e,t){t(e.front,zd.front),t(e.back,zd.back),t(e.left,zd.left),t(e.right,zd.right),t(e.top,zd.top),t(e.bottom,zd.bottom)}s.TextureCube=Fd;var Bd,Gd,kd=e("dP",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:2909832090,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:53,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:3507038093,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:0,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:2610213142,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1},{name:"a_dist",defines:[],format:11,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"occlusion-query",techniques:[{passes:[{rasterizerState:{cullMode:2},blendState:{targets:[{blendColorMask:0}]},program:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",hash:1571978323,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:41,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCWorldBound",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:1813246314,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:63,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position_starttime",defines:[],format:44,location:0},{name:"a_size_uv",defines:[],format:44,location:1},{name:"a_rotation_uv",defines:[],format:44,location:2},{name:"a_color",defines:[],format:44,location:3},{name:"a_dir_life",defines:[],format:44,location:4},{name:"a_rndSeed",defines:[],format:11,location:5},{name:"a_texCoord",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:7},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_color1",defines:["CC_RENDER_MODE"],format:44,location:9}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:1437790364,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:52,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:44,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:2766437914,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:52,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:32,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4},{name:"a_color1",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:7}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:3192452405,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:[]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2},{name:"a_color2",defines:["TWO_COLORED"],format:44,location:3}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"sprite-gpu",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite-gpu|sprite-vs-gpu:vert|sprite-fs-gpu:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"sprite-gpu|sprite-vs-gpu:vert|sprite-fs-gpu:frag",hash:2450198964,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCUILocal",defines:[]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}],buffers:[],images:[]}},defines:[{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_batch_id",defines:[],format:11,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:1770338543,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},SpecularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],linear:!0,type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},normalStrenth:{value:[1],type:13,handleInfo:["emissiveScaleParam",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},emissiveScaleParam:{type:16,value:[1,1,1,1]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs|standard-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs|standard-fs",hash:2864919663,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:221,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:64},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_TWOSIDE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"CC_ENABLE_DIR_SHADOW",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:13},{name:"a_texCoord1",defines:[],format:21,location:14}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:7},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:8},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:9}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:1774012115,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:182,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:64},globals:{blocks:[{name:"CCShadow",defines:[]},{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_texCoord1",defines:[],format:21,location:13}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs|terrain-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs|terrain-fs",hash:1017881636,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:69,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:60},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_ENABLE_DIR_SHADOW",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_PBR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplerTextures:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:12},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:13},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:14}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:809389262,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:67,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{linear:!0,type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:3319190198,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:197,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:41},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:13}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"bloom",techniques:[{passes:[{phase:"bloom-prefilter",program:"bloom|bloom-vs|prefilter-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-combine",program:"bloom|bloom-vs|combine-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"bloom|bloom-vs|prefilter-fs",hash:2185821616,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|downsample-fs",hash:1780231359,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|upsample-fs",hash:3580425335,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|combine-fs",hash:3457196798,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1},{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"deferred-lighting",techniques:[{passes:[{phase:"deferred-lighting",program:"deferred-lighting|lighting-vs|lighting-fs",depthStencilState:{depthFunc:4,depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"deferred-lighting|lighting-vs|lighting-fs",hash:3340914951,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:58},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCForwardLight",defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_ENABLE_DIR_SHADOW",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3}],blocks:[],samplerTextures:[],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:4},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:5},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:6}],images:[],textures:[],samplers:[],subpassInputs:[{name:"gbuffer_albedoMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:0},{name:"gbuffer_positionMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:1},{name:"gbuffer_normalMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:2},{name:"gbuffer_emissiveMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:3}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:2954155677,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:215,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:58},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"post-process",techniques:[{passes:[{phase:"post-process",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendSrcAlpha:2,blendDstAlpha:4}]},program:"post-process|post-process-vs|post-process-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"post-process|post-process-vs|post-process-fs",hash:3237848814,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"ANTIALIAS_TYPE",type:"number",range:[0,3]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:0}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:3653711100,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_environment",defines:[]}],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",priority:255,depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:179162168,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:60,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"splash-screen",techniques:[{name:"default",passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},resolution:{value:[640,960],type:14,handleInfo:["u_buffer0",0,14]},percent:{value:[.5],type:13,handleInfo:["u_percent",0,13]},scale:{value:[200,500],type:14,handleInfo:["u_buffer1",0,14]},translate:{value:[320,480],type:14,handleInfo:["u_buffer1",2,14]},u_buffer0:{type:16,value:[640,960,0,0]},u_percent:{type:13,value:[.5]},u_buffer1:{type:16,value:[200,500,320,480]}}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:3189094080,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:6,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:21,location:0},{name:"a_texCoord",defines:[],format:21,location:1}],blocks:[{name:"Constant",defines:[],binding:0,stageFlags:1,members:[{name:"u_buffer0",type:16,count:1},{name:"u_buffer1",type:16,count:1},{name:"u_projection",type:25,count:1}]},{name:"Factor",defines:[],binding:1,stageFlags:16,members:[{name:"u_percent",type:13,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]}]),Hd=4227858432,jd=66060288,Vd=1044480,qd=e("bG",(function(e,t,n,i){return void 0===i&&(i=0),t<<26&Hd|e<<20&jd|n<<12&Vd|4095&i})),Wd=e("bH",(function(e){return(e&Hd)>>>26})),Yd=e("bI",(function(e){return(e&jd)>>>20})),Xd=e("bJ",(function(e){return(e&Vd)>>>12})),Kd=e("bK",(function(e){return 4095&e})),Qd=e("bL",(function(e,t){return 67108863&e|t<<26&Hd})),Jd=e("bM",((Bd={})[Fo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},Bd[Fo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]},Bd[Fo.INT2]=function(e,t,n){return void 0===n&&(n=0),Ji.fromArray(t,e,n)},Bd[Fo.INT3]=function(e,t,n){return void 0===n&&(n=0),Di.fromArray(t,e,n)},Bd[Fo.INT4]=function(e,t,n){return void 0===n&&(n=0),to.fromArray(t,e,n)},Bd[Fo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]},Bd[Fo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Ji.fromArray(t,e,n)},Bd[Fo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),Di.fromArray(t,e,n)},Bd[Fo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),to.fromArray(t,e,n)},Bd[Fo.MAT3]=function(e,t,n){return void 0===n&&(n=0),Li.fromArray(t,e,n)},Bd[Fo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Yi.fromArray(t,e,n)},Bd)),Zd=e("bN",((Gd={})[Fo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},Gd[Fo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Gd[Fo.INT2]=function(e,t,n){return void 0===n&&(n=0),Ji.toArray(e,t,n)},Gd[Fo.INT3]=function(e,t,n){return void 0===n&&(n=0),Di.toArray(e,t,n)},Gd[Fo.INT4]=function(e,t,n){return void 0===n&&(n=0),to.toArray(e,t,n)},Gd[Fo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},Gd[Fo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Ji.toArray(e,t,n)},Gd[Fo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),Di.toArray(e,t,n)},Gd[Fo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),to.toArray(e,t,n)},Gd[Fo.MAT3]=function(e,t,n){return void 0===n&&(n=0),Li.toArray(e,t,n)},Gd[Fo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Yi.toArray(e,t,n)},Gd)),$d=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function ev(e){switch(e){case Fo.BOOL:case Fo.INT:case Fo.UINT:case Fo.FLOAT:return $d[0];case Fo.BOOL2:case Fo.INT2:case Fo.UINT2:case Fo.FLOAT2:return $d[1];case Fo.BOOL4:case Fo.INT4:case Fo.UINT4:case Fo.FLOAT4:return $d[2];case Fo.MAT4:return $d[3];case Fo.SAMPLER2D:return"default-texture";case Fo.SAMPLER_CUBE:return"default-cube-texture"}return $d[0]}var tv=new fr;function nv(e){return Math.ceil(Math.log2(Math.max(e,2)))}function iv(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn("unknown define type '"+e.type+"'"),"-1"}}function ov(e,t,n,i,o){for(var a=e.builtins[i],r=[],c=function(e){var t=a.blocks[e],i=n.layouts[t.name],c=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&c&&c.descriptorType&Tr))return console.warn("builtin UBO '"+t.name+"' not available!"),"continue";r.push(i),o&&!o.includes(c)&&o.push(c)},s=0;s<a.blocks.length;s++)c(s);Array.prototype.unshift.apply(t.shaderInfo.blocks,r);for(var l=[],u=function(e){var t=a.samplerTextures[e],i=n.layouts[t.name],r=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&r&&r.descriptorType&Ar))return console.warn("builtin samplerTexture '"+t.name+"' not available!"),"continue";l.push(i),o&&!o.includes(r)&&o.push(r)},f=0;f<a.samplerTextures.length;f++)u(f);Array.prototype.unshift.apply(t.shaderInfo.samplerTextures,l),o&&o.sort((function(e,t){return e.binding-t.binding}))}function av(e){return e.members.reduce((function(e,t){return e+Dr(t.type)*t.count}),0)}function rv(e,t){for(var n=0;n<e.length;n++){var i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}var cv=function(){function e(){this._templates={},this._cache={},this._templateInfos={}}var t=e.prototype;return t.register=function(e){for(var t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name;for(var n=0;n<e.techniques.length;n++)for(var i=e.techniques[n],o=0;o<i.passes.length;o++){var a=i.passes[o];void 0!==a.propertyIndex&&void 0===a.properties&&(a.properties=i.passes[a.propertyIndex].properties)}},t.define=function(e){var t=this._templates[e.name];if(t&&t.hash===e.hash)return t;for(var n=Y({},e),i=0,o=function(e){var t=n.defines[e],o=1;if("number"===t.type){var a=t.range;o=nv(a[1]-a[0]+1),t._map=function(e){return e-a[0]}}else"string"===t.type?(o=nv(t.options.length),t._map=function(e){return Math.max(0,t.options.findIndex((function(t){return t===e})))}):"boolean"===t.type&&(t._map=function(e){return e?1:0});t._offset=i,i+=o},a=0;a<n.defines.length;a++)o(a);for(var r in i>31&&(n.uber=!0),n.constantMacros="",n.builtins.statistics)n.constantMacros+="#define "+r+" "+n.builtins.statistics[r]+"\n";if(this._templates[e.name]=n,!this._templateInfos[n.hash]){var c={};c.samplerStartBinding=n.blocks.length,c.shaderInfo=new er,c.blockSizes=[],c.bindings=[];for(var s=0;s<n.blocks.length;s++){var l=n.blocks[s];c.blockSizes.push(av(l)),c.bindings.push(new ur(l.binding,_a.UNIFORM_BUFFER,1,l.stageFlags)),c.shaderInfo.blocks.push(new qa(Bp.MATERIAL,l.binding,l.name,l.members.map((function(e){return new Va(e.name,e.type,e.count)})),1))}for(var u=0;u<n.samplerTextures.length;u++){var f=n.samplerTextures[u];c.bindings.push(new ur(f.binding,_a.SAMPLER_TEXTURE,f.count,f.stageFlags)),c.shaderInfo.samplerTextures.push(new Wa(Bp.MATERIAL,f.binding,f.name,f.type,f.count))}for(var _=0;_<n.samplers.length;_++){var m=n.samplers[_];c.bindings.push(new ur(m.binding,_a.SAMPLER,m.count,m.stageFlags)),c.shaderInfo.samplers.push(new Ya(Bp.MATERIAL,m.binding,m.name,m.count))}for(var p=0;p<n.textures.length;p++){var h=n.textures[p];c.bindings.push(new ur(h.binding,_a.TEXTURE,h.count,h.stageFlags)),c.shaderInfo.textures.push(new Xa(Bp.MATERIAL,h.binding,h.name,h.type,h.count))}for(var d=0;d<n.buffers.length;d++){var v=n.buffers[d];c.bindings.push(new ur(v.binding,_a.STORAGE_BUFFER,1,v.stageFlags)),c.shaderInfo.buffers.push(new Qa(Bp.MATERIAL,v.binding,v.name,1,v.memoryAccess))}for(var g=0;g<n.images.length;g++){var x=n.images[g];c.bindings.push(new ur(x.binding,_a.STORAGE_IMAGE,x.count,x.stageFlags)),c.shaderInfo.images.push(new Ka(Bp.MATERIAL,x.binding,x.name,x.type,x.count,x.memoryAccess))}for(var y=0;y<n.subpassInputs.length;y++){var C=n.subpassInputs[y];c.bindings.push(new ur(C.binding,_a.INPUT_ATTACHMENT,C.count,C.stageFlags)),c.shaderInfo.subpassInputs.push(new Ja(Bp.MATERIAL,C.binding,C.name,C.count))}c.gfxAttributes=[];for(var S=0;S<n.attributes.length;S++){var E=n.attributes[S];c.gfxAttributes.push(new $a(E.name,E.format,E.isNormalized,0,E.isInstanced,E.location))}ov(n,c,zp,"locals"),c.shaderInfo.stages.push(new Za(ea.VERTEX,"")),c.shaderInfo.stages.push(new Za(ea.FRAGMENT,"")),c.handleMap=function(e){for(var t={},n=0;n<e.blocks.length;n++)for(var i=e.blocks[n],o=i.members,a=0,r=0;r<o.length;r++){var c=o[r];t[c.name]=qd(i.binding,c.type,c.count,a),a+=(Dr(c.type)>>2)*c.count}for(var s=0;s<e.samplerTextures.length;s++){var l=e.samplerTextures[s];t[l.name]=qd(l.binding,l.type,l.count)}return t}(n),c.setLayouts=[],this._templateInfos[n.hash]=c}return n},t.getTemplate=function(e){return this._templates[e]},t.getTemplateInfo=function(e){var t=this._templates[e].hash;return this._templateInfos[t]},t.getDescriptorSetLayout=function(e,t,n){void 0===n&&(n=!1);var i=this._templates[t],o=this._templateInfos[i.hash];return o.setLayouts.length||(tv.bindings=o.bindings,o.setLayouts[Bp.MATERIAL]=e.createDescriptorSetLayout(tv),tv.bindings=zp.bindings,o.setLayouts[Bp.LOCAL]=e.createDescriptorSetLayout(tv)),o.setLayouts[n?Bp.LOCAL:Bp.MATERIAL]},t.hasProgram=function(e){return void 0!==this._templates[e]},t.getKey=function(e,t){var n=this._templates[e],i=n.defines;if(n.uber){for(var o="",a=0;a<i.length;a++){var r=i[a],c=t[r.name];if(c&&r._map){var s=r._map(c);o+=""+r._offset+s+"|"}}return""+o+n.hash}for(var l=0,u=0;u<i.length;u++){var f=i[u],_=t[f.name];_&&f._map&&(l|=f._map(_)<<f._offset)}return l.toString(16)+"|"+n.hash},t.destroyShaderByDefines=function(e){var t=this,n=Object.keys(e);if(n.length)for(var i=n.map((function(t){var n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(""+t+n)})),o=Object.keys(this._cache).filter((function(e){return i.every((function(n){return n.test(t._cache[e].name)}))})),a=0;a<o.length;a++){var r=o[a],c=this._cache[r];S("destroyed shader "+c.name),c.destroy(),delete this._cache[r]}},t.getGFXShader=function(e,t,n,i,o){Object.assign(n,i.macros),o||(o=this.getKey(t,n));var a=this._cache[o];if(a)return a;var r=this._templates[t],c=this._templateInfos[r.hash];c.pipelineLayout||(this.getDescriptorSetLayout(e,t),ov(r,c,Mp,"globals"),c.setLayouts[Bp.GLOBAL]=i.descriptorSetLayout,c.pipelineLayout=e.createPipelineLayout(new mr(c.setLayouts)));var s=function(e,t){for(var n=[],i=0;i<t.length;i++){var o=t[i],a=o.name,r=e[a],c=iv(o,r),s=!r||"0"===r;n.push({name:a,value:c,isDefault:s})}return n}(n,r.defines),l=i.constantMacros+r.constantMacros+s.reduce((function(e,t){return e+"#define "+t.name+" "+t.value+"\n"}),""),u=r.glsl3,f=sv(e);return f?u=r[f]:console.error("Invalid GFX API!"),c.shaderInfo.stages[0].source=l+u.vert,c.shaderInfo.stages[1].source=l+u.frag,c.shaderInfo.attributes=function(e,t,n){for(var i=[],o=e.attributes,a=t.gfxAttributes,r=0;r<o.length;r++)rv(o[r].defines,n)&&i.push(a[r]);return i}(r,c,n),c.shaderInfo.name=function(e,t){return e+t.reduce((function(e,t){return t.isDefault?e:e+"|"+t.name+t.value}),"")}(t,s),this._cache[o]=e.createShader(c.shaderInfo)},e}();function sv(e){switch(e.gfxAPI){case Do.GLES2:case Do.WEBGL:return"glsl1";case Do.GLES3:case Do.WEBGL2:return"glsl3";default:return"glsl4"}}var lv=e("bT",new cv);s.programLib=lv;var uv,fv,_v,mv={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\nvec4 o = v_color;\n#ifdef GL_OES_standard_derivatives\nfloat aa = fwidth(v_dist);\n#else\nfloat aa = 0.05;\n#endif\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_worldBoundCenter;\nuniform highp vec4 cc_worldBoundHalfExtents;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nuniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nuniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nuniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nuniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nuniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nuniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture2D(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\nattribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\nattribute vec4 a_color2;\nvarying vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\nvarying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture2D(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture2D(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute float a_batch_id;\nvarying vec2 v_uv0;\nvarying float v_uvMode;\nvarying vec4 v_uvSizeOffset;\nvarying vec4 v_uvParams0;\nvarying vec4 v_uvParams1;\nstruct SpriteVertexInternalData {\nvec4 rotation;\nvec3 translation;\nvec3 scale;\nvec4 uvSizeOffset;\nfloat uvMode;\nvec4 uvParams;\nfloat filltype;\n};\nuniform vec4 cc_local_data[(CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS - CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS) / 5 * 5];\nvec3 VectorTransformQuat (vec3 v, vec4 q) {\nreturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nvoid CCSpriteInput(out SpriteVertexData i0) {\nvec4 data0 = cc_local_data[int(a_batch_id) * 5];\nvec4 data1 = cc_local_data[int(a_batch_id) * 5 + 1];\nvec4 data2 = cc_local_data[int(a_batch_id) * 5 + 2];\nvec4 data3 = cc_local_data[int(a_batch_id) * 5 + 3];\nvec4 data4 = cc_local_data[int(a_batch_id) * 5 + 4];\nfloat rg = data0.w;\nfloat r = floor(rg);\nfloat ba = data2.z;\nfloat b = floor(ba);\nSpriteVertexInternalData i1;\ni1.rotation = data1;\ni1.translation = data0.xyz;\ni1.scale = vec3(data2.xy, 1.0);\ni1.uvSizeOffset = data3;\ni1.filltype = fract(data2.w) * 10.0;\ni1.uvMode = data2.w;\ni1.uvParams = data4;\ni0.position = vec4(VectorTransformQuat(a_position * i1.scale, i1.rotation) + i1.translation, 1.0);\ni0.color = vec4(r * (1.0 / 255.0), rg - r, b * (1.0 / 255.0), ba - b);\nvec2 uvWithRotation;\nif (i1.uvSizeOffset.x < 0.0) {\ni1.uvSizeOffset.x = abs(i1.uvSizeOffset.x);\nuvWithRotation = vec2(1.0 - a_texCoord.y, a_texCoord.x);\n} else {\nuvWithRotation = a_texCoord;\n}\nif (i1.uvMode >= 3.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nv_uvParams0 = vec4(i1.uvParams.xy, i1.filltype, 0);\nif (i1.filltype >= 2.0) {\nv_uvParams1 = i1.uvParams;\n} else if (i1.filltype >= 1.0) {\nv_uvParams0 = vec4(1.0 - v_uvParams0.y, 1.0 - v_uvParams0.x, v_uvParams0.zw);\n}\n} else if (i1.uvMode >= 2.0) {\nv_uv0 = uvWithRotation * i1.uvParams.xy;\nv_uv0.y -= fract(i1.uvParams.y);\nv_uvSizeOffset = i1.uvSizeOffset;\n} else if (i1.uvMode >= 1.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nvec4 params0 = fract(i1.uvParams);\nvec4 params1 = floor(i1.uvParams) / 2048.0;\nv_uvParams0 = vec4(params0.xy, params1.xy);\nv_uvParams1 = vec4(params0.zw, params1.zw);\n} else {\nv_uv0 = uvWithRotation * i1.uvSizeOffset.xy + i1.uvSizeOffset.zw;\n}\nv_uvMode = i1.uvMode;\n#if SAMPLE_FROM_RT\nv_uv0 = cc_cameraPos.w > 1.0 ? vec2(v_uv0.x, 1.0 - v_uv0.y) : v_uv0;\n#endif\n}\nvarying vec4 v_color;\nvec4 vert () {\nSpriteVertexData i;\nCCSpriteInput(i);\nv_color = i.color;\nvec4 pos = i.position;\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\nvarying vec2 v_uv0;\nvarying float v_uvMode;\nvarying vec4 v_uvSizeOffset;\nvarying vec4 v_uvParams0;\nvarying vec4 v_uvParams1;\nvec2 evalSlicedUV(vec2 uv) {\nvec4 p0 = mix(vec4(0.0), v_uvParams0, step(v_uvParams0.xyxy, uv.xyxy));\np0 = mix(       p0, v_uvParams1, step(v_uvParams1.xyxy, uv.xyxy));\nvec4 p1 = mix(vec4(1.0), v_uvParams1, step(uv.xyxy, v_uvParams1.xyxy));\np1 = mix(       p1, v_uvParams0, step(uv.xyxy, v_uvParams0.xyxy));\nvec2 k = (p1.zw - p0.zw) / (p1.xy - p0.xy);\nvec2 b = (p1.xy * p0.zw - p0.xy * p1.zw) / (p1.xy - p0.xy);\nreturn k * uv + b;\n}\nfloat evalFilledUV(vec2 uv, float mode) {\nfloat alpha = 1.0;\nif (mode >= 2.0) {\nfloat start = v_uvParams1.x;\nfloat range = v_uvParams1.y;\nvec2 dir = uv - v_uvParams1.zw;\nfloat angle = -atan(dir.y, dir.x) * 0.3183098861838;\nif (range < 0.0) {\nangle += mix(0.0, -2.0, step(start, angle));\nalpha = step(start + range, angle);\n} else {\nangle += mix(0.0, 2.0, step(angle, start));\nalpha = step(angle, start + range);\n}\n} else if (mode >= 1.0) {\nif (uv.y >= v_uvParams0.x && uv.y <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n} else {\nif (uv.x >= v_uvParams0.x && uv.x <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n}\nreturn alpha;\n}\nvoid CCSpriteInput(out SpriteFragmentData i) {\n#if USE_TEXTURE\nif(v_uvMode >= 3.0) {\ni.uv = v_uv0 * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 2.0) {\ni.uv = fract(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 1.0) {\ni.uv = evalSlicedUV(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else {\ni.uv = v_uv0;\n}\n#endif\n}\nvec4 CCSpriteSample(sampler2D tex, vec2 uv) {\nvec4 o = CCSampleWithAlphaSeparated(tex, uv);\nif (v_uvMode >= 3.0) {\no.a *= evalFilledUV(v_uv0, v_uvParams0.z);\n}\nreturn o;\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nSpriteFragmentData i;\nCCSpriteInput(i);\n#if USE_TEXTURE\nvec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);\n#else\nvec4 color = v_color;\n#endif\n#if IS_GRAY\ncolor.rgb = SRGBToLinear(color.rgb);\ncolor.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));\ncolor.rgb = sqrt(color.rgb);\n#endif\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\n#endif\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nattribute vec4 a_color;\nvarying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\nvarying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture2D(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n(nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture2D(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture2D(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nuniform highp mat4 cc_matLightView;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture2D(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 luv;\nvarying mediump vec3 diffuse;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec3 luv;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture2D(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture2D(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\nbaseColor += texture2D(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture2D(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture2D(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\nbaseNormal += texture2D(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture2D(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(s.position, s.roughness);\ngl_FragData[2] = vec4(s.normal, s.metallic);\ngl_FragData[3] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform vec4 tilingOffset;\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture2D(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture2D(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\ngl_FragColor = vec4(color, 1.0);\n} else {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nvoid main() {\nvec4 hdrColor = texture2D(outputResultMap, v_uv);\nvec3 bloomColor = texture2D(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\ngl_FragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp mat4 cc_matLightViewProj;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform lowp vec4 cc_shadowNFLSInfo;\nuniform lowp vec4 cc_shadowWHPBInfo;\nuniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvarying vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_positionMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\n#endif\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gl_LastFragData[0];\nvec4 positionMap = gl_LastFragData[1];\nvec4 normalMap = gl_LastFragData[2];\nvec4 emissiveMap = gl_LastFragData[3];\n#else\nvec4 albedoMap = texture2D(gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture2D(gbuffer_positionMap,v_uv);\nvec4 normalMap = texture2D(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture2D(gbuffer_emissiveMap,v_uv);\n#endif\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(s.position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngl_FragData[3] = color;\n#else\ngl_FragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nuniform highp mat4 cc_matLightPlaneProj;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\nvec4 texColor = texture2D(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nvarying vec2 v_uv;\nuniform sampler2D outputResultMap;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\ngl_FragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\ngl_FragColor = texture2D(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nvarying mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nuniform vec4 u_buffer0;\nuniform vec4 u_buffer1;\nuniform mat4 u_projection;\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nuniform float u_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture2D(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCWorldBound {\nhighp vec4 cc_worldBoundCenter;\nhighp vec4 cc_worldBoundHalfExtents;\n};\nin vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord;\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nlayout(std140) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nlayout(std140) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nlayout(std140) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nlayout(std140) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nlayout(std140) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nlayout(std140) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nout vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\n#if CC_DRAW_WIRE_FRAME\nin vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\nin vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\nin vec4 a_color2;\nout vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 v_light;\n#if TWO_COLORED\nin vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin float a_batch_id;\nout vec2 v_uv0;\nout float v_uvMode;\nout vec4 v_uvSizeOffset;\nout vec4 v_uvParams0;\nout vec4 v_uvParams1;\nstruct SpriteVertexInternalData {\nvec4 rotation;\nvec3 translation;\nvec3 scale;\nvec4 uvSizeOffset;\nfloat uvMode;\nvec4 uvParams;\nfloat filltype;\n};\nlayout(std140) uniform CCUILocal {\nvec4 cc_local_data[(CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS - CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS) / 5 * 5];\n};\nvec3 VectorTransformQuat (vec3 v, vec4 q) {\nreturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nvoid CCSpriteInput(out SpriteVertexData i0) {\nvec4 data0 = cc_local_data[int(a_batch_id) * 5];\nvec4 data1 = cc_local_data[int(a_batch_id) * 5 + 1];\nvec4 data2 = cc_local_data[int(a_batch_id) * 5 + 2];\nvec4 data3 = cc_local_data[int(a_batch_id) * 5 + 3];\nvec4 data4 = cc_local_data[int(a_batch_id) * 5 + 4];\nfloat rg = data0.w;\nfloat r = floor(rg);\nfloat ba = data2.z;\nfloat b = floor(ba);\nSpriteVertexInternalData i1;\ni1.rotation = data1;\ni1.translation = data0.xyz;\ni1.scale = vec3(data2.xy, 1.0);\ni1.uvSizeOffset = data3;\ni1.filltype = fract(data2.w) * 10.0;\ni1.uvMode = data2.w;\ni1.uvParams = data4;\ni0.position = vec4(VectorTransformQuat(a_position * i1.scale, i1.rotation) + i1.translation, 1.0);\ni0.color = vec4(r * (1.0 / 255.0), rg - r, b * (1.0 / 255.0), ba - b);\nvec2 uvWithRotation;\nif (i1.uvSizeOffset.x < 0.0) {\ni1.uvSizeOffset.x = abs(i1.uvSizeOffset.x);\nuvWithRotation = vec2(1.0 - a_texCoord.y, a_texCoord.x);\n} else {\nuvWithRotation = a_texCoord;\n}\nif (i1.uvMode >= 3.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nv_uvParams0 = vec4(i1.uvParams.xy, i1.filltype, 0);\nif (i1.filltype >= 2.0) {\nv_uvParams1 = i1.uvParams;\n} else if (i1.filltype >= 1.0) {\nv_uvParams0 = vec4(1.0 - v_uvParams0.y, 1.0 - v_uvParams0.x, v_uvParams0.zw);\n}\n} else if (i1.uvMode >= 2.0) {\nv_uv0 = uvWithRotation * i1.uvParams.xy;\nv_uv0.y -= fract(i1.uvParams.y);\nv_uvSizeOffset = i1.uvSizeOffset;\n} else if (i1.uvMode >= 1.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nvec4 params0 = fract(i1.uvParams);\nvec4 params1 = floor(i1.uvParams) / 2048.0;\nv_uvParams0 = vec4(params0.xy, params1.xy);\nv_uvParams1 = vec4(params0.zw, params1.zw);\n} else {\nv_uv0 = uvWithRotation * i1.uvSizeOffset.xy + i1.uvSizeOffset.zw;\n}\nv_uvMode = i1.uvMode;\n#if SAMPLE_FROM_RT\nv_uv0 = cc_cameraPos.w > 1.0 ? vec2(v_uv0.x, 1.0 - v_uv0.y) : v_uv0;\n#endif\n}\nout vec4 v_color;\nvec4 vert () {\nSpriteVertexData i;\nCCSpriteInput(i);\nv_color = i.color;\nvec4 pos = i.position;\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\nin vec2 v_uv0;\nin float v_uvMode;\nin vec4 v_uvSizeOffset;\nin vec4 v_uvParams0;\nin vec4 v_uvParams1;\nvec2 evalSlicedUV(vec2 uv) {\nvec4 p0 = mix(vec4(0.0), v_uvParams0, step(v_uvParams0.xyxy, uv.xyxy));\np0 = mix(       p0, v_uvParams1, step(v_uvParams1.xyxy, uv.xyxy));\nvec4 p1 = mix(vec4(1.0), v_uvParams1, step(uv.xyxy, v_uvParams1.xyxy));\np1 = mix(       p1, v_uvParams0, step(uv.xyxy, v_uvParams0.xyxy));\nvec2 k = (p1.zw - p0.zw) / (p1.xy - p0.xy);\nvec2 b = (p1.xy * p0.zw - p0.xy * p1.zw) / (p1.xy - p0.xy);\nreturn k * uv + b;\n}\nfloat evalFilledUV(vec2 uv, float mode) {\nfloat alpha = 1.0;\nif (mode >= 2.0) {\nfloat start = v_uvParams1.x;\nfloat range = v_uvParams1.y;\nvec2 dir = uv - v_uvParams1.zw;\nfloat angle = -atan(dir.y, dir.x) * 0.3183098861838;\nif (range < 0.0) {\nangle += mix(0.0, -2.0, step(start, angle));\nalpha = step(start + range, angle);\n} else {\nangle += mix(0.0, 2.0, step(angle, start));\nalpha = step(angle, start + range);\n}\n} else if (mode >= 1.0) {\nif (uv.y >= v_uvParams0.x && uv.y <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n} else {\nif (uv.x >= v_uvParams0.x && uv.x <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n}\nreturn alpha;\n}\nvoid CCSpriteInput(out SpriteFragmentData i) {\n#if USE_TEXTURE\nif(v_uvMode >= 3.0) {\ni.uv = v_uv0 * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 2.0) {\ni.uv = fract(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 1.0) {\ni.uv = evalSlicedUV(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else {\ni.uv = v_uv0;\n}\n#endif\n}\nvec4 CCSpriteSample(sampler2D tex, vec2 uv) {\nvec4 o = CCSampleWithAlphaSeparated(tex, uv);\nif (v_uvMode >= 3.0) {\no.a *= evalFilledUV(v_uv0, v_uvParams0.z);\n}\nreturn o;\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nin vec4 v_color;\n#if USE_TEXTURE\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nSpriteFragmentData i;\nCCSpriteInput(i);\n#if USE_TEXTURE\nvec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);\n#else\nvec4 color = v_color;\n#endif\n#if IS_GRAY\ncolor.rgb = SRGBToLinear(color.rgb);\ncolor.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));\ncolor.rgb = sqrt(color.rgb);\n#endif\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\n#if SAMPLE_FROM_RT\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 color;\n#if USE_TEXTURE\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nin vec4 a_color;\nout vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\nout vec3 v_tangent;\nout vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nout vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\nin vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nin vec3 v_tangent;\nin vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n(nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\ns.position = v_position;\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout highp vec3 v_position;\nout mediump vec3 v_normal;\n#if USE_NORMALMAP\nout mediump vec3 v_tangent;\nout mediump vec3 v_binormal;\n#endif\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec3 luv;\nout mediump vec3 diffuse;\nlayout(std140) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if USE_NORMALMAP\nin mediump vec3 v_tangent;\nin mediump vec3 v_binormal;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec3 luv;\nlayout(std140) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\ns.position = v_position;\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nlayout(location = 3) out vec4 fragColor3;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(s.position, s.roughness);\nfragColor2 = vec4(s.normal, s.metallic);\nfragColor3 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nin lowp vec4 a_color;\nout lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nout vec2 v_uv;\nlayout(std140) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nin vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\nfragColor = vec4(color, 1.0);\n} else {\nfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main() {\nvec4 hdrColor = texture(outputResultMap, v_uv);\nvec3 bloomColor = texture(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\nfragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\nvec3 position;\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW && CC_ENABLE_DIR_SHADOW\nif (NL > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_screenSize.x / float(16));\nfloat clusterSizeY = ceil(cc_screenSize.y / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - s.position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(s.position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - s.position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nin vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nlayout(location = 0) inout vec4 gbuffer_albedoMap;\nlayout(location = 1) inout vec4 gbuffer_positionMap;\nlayout(location = 2) inout vec4 gbuffer_normalMap;\nlayout(location = 3) inout vec4 gbuffer_emissiveMap;\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_positionMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\n#endif\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\nlayout(location = 0) out vec4 fragColor;\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gbuffer_albedoMap;\nvec4 positionMap = gbuffer_positionMap;\nvec4 normalMap = gbuffer_normalMap;\nvec4 emissiveMap = gbuffer_emissiveMap;\n#else\nvec4 albedoMap = texture(gbuffer_albedoMap,v_uv);\nvec4 positionMap = texture(gbuffer_positionMap,v_uv);\nvec4 normalMap = texture(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(gbuffer_emissiveMap,v_uv);\n#endif\ns.albedo = albedoMap;\ns.position = positionMap.xyz;\ns.roughness = positionMap.w;\ns.normal = normalMap.xyz;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(s.position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(s.position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngbuffer_emissiveMap = color;\n#else\nfragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nposition = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\nposition.z -= 0.0001;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nlowp  vec4 cc_shadowNFLSInfo;\nlowp  vec4 cc_shadowWHPBInfo;\nlowp  vec4 cc_shadowLPNNInfo;\nlowp  vec4 cc_shadowColor;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvec4 frag () {\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nin vec2 v_uv;\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\nfragColor = texture(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nout mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\nvec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nlayout(std140) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nlayout(std140) uniform Factor {\nfloat u_percent;\n};\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},pv=function(){function e(){this._device=null,this._resources={}}var t=e.prototype;return t.initBuiltinRes=function(e){var t=this;this._device=e;var n=this._resources,i=document.createElement("canvas"),o=i.getContext("2d"),a=new fd(i),r=i.width=i.height=2;o.fillStyle="#000",o.fillRect(0,0,r,r);var c=new Ld;c._uuid="black-texture",c.image=a,n[c._uuid]=c,o.fillStyle="rgba(0,0,0,0)",o.fillRect(0,0,r,r);var l=new Ld;l._uuid="empty-texture",l.image=a,n[l._uuid]=l;var u=new Fd;u._uuid="black-cube-texture",u.setMipFilter(Fd.Filter.NEAREST),u.image={front:new fd(i),back:new fd(i),left:new fd(i),right:new fd(i),top:new fd(i),bottom:new fd(i)},n[u._uuid]=u,o.fillStyle="#777",o.fillRect(0,0,r,r);var f=new Ld;f._uuid="grey-texture",f.image=a,n[f._uuid]=f,o.fillStyle="#fff",o.fillRect(0,0,r,r);var _=new Ld;_._uuid="white-texture",_.image=a,n[_._uuid]=_;var m=new Fd;m._uuid="white-cube-texture",m.setMipFilter(Fd.Filter.NEAREST),m.image={front:new fd(i),back:new fd(i),left:new fd(i),right:new fd(i),top:new fd(i),bottom:new fd(i)},n[m._uuid]=m,o.fillStyle="#7f7fff",o.fillRect(0,0,r,r);var p=new Ld;p._uuid="normal-texture",p.image=a,n[p._uuid]=p,i.width=i.height=16,o.fillStyle="#ddd",o.fillRect(0,0,16,16),o.fillStyle="#555",o.fillRect(0,0,8,8),o.fillStyle="#555",o.fillRect(8,8,8,8);var h=new Ld;h._uuid="default-texture",h.image=a,n[h._uuid]=h;var d=new Fd;if(d.setMipFilter(Fd.Filter.NEAREST),d._uuid="default-cube-texture",d.image={front:new fd(i),back:new fd(i),left:new fd(i),right:new fd(i),top:new fd(i),bottom:new fd(i)},n[d._uuid]=d,s.SpriteFrame){var v=new s.SpriteFrame,g=a,x=new Ld;x.image=g,v.texture=x,v._uuid="default-spriteframe",n[v._uuid]=v}var y=sv(e);if(!y)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));var C=mv[y];return C?Promise.resolve().then((function(){kd.forEach((function(e,t){var n=Object.assign(new s.EffectAsset,e);n.shaders.forEach((function(e,n){var i=C[t][n];i&&(e[y]=i)})),n.hideInEditor=!0,n.onLoaded()})),t._initMaterials()})):Promise.reject(Error("Current device is requiring builtin shaders of version "+y+" but shaders of that version are not assembled in this build."))},t.get=function(e){return this._resources[e]},t._initMaterials=function(){var e=this._resources,t=[],n=new s.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);var i=new s.Material;i._uuid="missing-effect-material",i.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),i.setProperty("mainColor",s.color("#ffff00")),e[i._uuid]=i,t.push(i);var o=new s.Material;o._uuid="missing-material",o.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),o.setProperty("mainColor",s.color("#ff00ff")),e[o._uuid]=o,t.push(o);var a=new s.Material;a._uuid="default-clear-stencil",a.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[a._uuid]=a,t.push(a);var r=new s.Material;r._uuid="ui-base-material",r.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[r._uuid]=r,t.push(r);var c=new s.Material;c._uuid="ui-sprite-material",c.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);var l=new s.Material;l._uuid="ui-alpha-test-material",l.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[l._uuid]=l,t.push(l);var u=new s.Material;u._uuid="ui-sprite-gray-material",u.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[u._uuid]=u,t.push(u);var f=new s.Material;f._uuid="ui-sprite-alpha-sep-material",f.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[f._uuid]=f,t.push(f);var _=new s.Material;_._uuid="ui-sprite-gray-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[_._uuid]=_,t.push(_);var m=new s.Material;m._uuid="ui-graphics-material",m.initialize({effectName:"graphics"}),e[m._uuid]=m,t.push(m);var p=new s.Material;p._uuid="default-particle-material",p.initialize({effectName:"particle"}),e[p._uuid]=p,t.push(p);var h=new s.Material;h._uuid="default-particle-gpu-material",h.initialize({effectName:"particle-gpu"}),e[h._uuid]=h,t.push(h);var d=new s.Material;d._uuid="default-trail-material",d.initialize({effectName:"particle-trail"}),e[d._uuid]=d,t.push(d);var v=new s.Material;v._uuid="default-billboard-material",v.initialize({effectName:"billboard"}),e[v._uuid]=v,t.push(v);var g=new s.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g),s.game.on(s.Game.EVENT_GAME_INITED,(function(){for(var e=0;e<t.length;++e)for(var n=t[e],i=0;i<n.passes.length;++i)n.passes[i].tryCompile()}))},e}(),hv=e("dQ",s.builtinResMgr=new pv),dv=e("dF",(uv=new Map,fv=0,function(e){return"number"==typeof e?e:(uv.has(e)||(uv.set(e,1<<fv),fv++),uv.get(e))})),vv=e("dD",function(){function e(e){this.instances=[],this.pass=void 0,this.hasPendingModels=!1,this.dynamicOffsets=[],this._device=void 0,this._device=e.device,this.pass=e}var t=e.prototype;return t.destroy=function(){for(var e=0;e<this.instances.length;++e){var t=this.instances[e];t.vb.destroy(),t.ia.destroy()}this.instances.length=0},t.merge=function(e,t,n,i){void 0===i&&(i=null);var o=t.buffer.length;if(o){var a=e.inputAssembler,r=e.descriptorSet.getTexture(Ph),c=i;c||(c=e.shaders[n]);for(var s=e.descriptorSet,l=0;l<this.instances.length;++l){var u=this.instances[l];if(!(u.ia.indexBuffer!==a.indexBuffer||u.count>=1024)&&u.lightingMap===r&&u.stride===o){if(u.count>=u.capacity){u.capacity<<=1;var f=u.stride*u.capacity,_=u.data;u.data=new Uint8Array(f),u.data.set(_),u.vb.resize(f)}return u.shader!==c&&(u.shader=c),u.descriptorSet!==s&&(u.descriptorSet=s),u.data.set(t.buffer,u.stride*u.count++),void(this.hasPendingModels=!0)}}for(var m=this._device.createBuffer(new La(Uo.VERTEX|Uo.TRANSFER_DST,ko.HOST|ko.DEVICE,32*o,o)),p=new Uint8Array(32*o),h=a.vertexBuffers.slice(),d=a.attributes.slice(),v=a.indexBuffer,g=0;g<t.attributes.length;g++){var x=t.attributes[g],y=new $a(x.name,x.format,x.isNormalized,h.length,!0);d.push(y)}p.set(t.buffer),h.push(m);var C=new tr(d,h,v),S=this._device.createInputAssembler(C);this.instances.push({count:1,capacity:32,vb:m,data:p,ia:S,stride:o,shader:c,descriptorSet:s,lightingMap:r}),this.hasPendingModels=!0}},t.uploadBuffers=function(e){for(var t=0;t<this.instances.length;++t){var n=this.instances[t];n.count&&(n.ia.instanceCount=n.count,e.updateBuffer(n.vb,n.data))}},t.clear=function(){for(var e=0;e<this.instances.length;++e)this.instances[e].count=0;this.hasPendingModels=!1},e}()),gv=function(){function e(e){this.batches=[],this.dynamicOffsets=[],this._device=void 0,this._device=e.device}var t=e.prototype;return t.destroy=function(){for(var e=0;e<this.batches.length;++e){for(var t=this.batches[e],n=0;n<t.vbs.length;++n)t.vbs[n].destroy();t.vbIdx.destroy(),t.ia.destroy(),t.ubo.destroy()}this.batches.length=0},t.merge=function(e,t,n){var i=e.subMesh.flatBuffers;if(0!==i.length){for(var o=0,a=0,r=i[0].count,c=e.passes[t],s=e.shaders[t],l=e.descriptorSet,u=!1,f=0;f<this.batches.length;++f){var _=this.batches[f];if(_.vbs.length===i.length&&_.mergeCount<ch.BATCHING_COUNT){u=!0;for(var m=0;m<_.vbs.length;++m)if(_.vbs[m].stride!==i[m].stride){u=!1;break}if(u){for(var p=0;p<_.vbs.length;++p){var h=i[p],d=_.vbs[p],v=_.vbDatas[p];(o=(r+_.vbCount)*h.stride)>d.size&&(d.resize(o),_.vbDatas[p]=new Uint8Array(o),_.vbDatas[p].set(v)),_.vbDatas[p].set(h.buffer,_.vbCount*h.stride)}var g=_.vbIdxData;(a=4*(r+_.vbCount))>_.vbIdx.size&&(_.vbIdx.resize(a),_.vbIdxData=new Float32Array(a/Float32Array.BYTES_PER_ELEMENT),_.vbIdxData.set(g),g=_.vbIdxData);var x=_.vbCount,y=x+r,C=_.mergeCount;if(g[x]!==C||g[y-1]!==C)for(var S=x;S<y;S++)g[S]=C+.1;return Yi.toArray(_.uboData,n.transform.worldMatrix,ch.MAT_WORLDS_OFFSET+16*_.mergeCount),_.mergeCount||(l.bindBuffer(ch.BINDING,_.ubo),l.update(),_.pass=c,_.shader=s,_.descriptorSet=l),++_.mergeCount,_.vbCount+=r,void(_.ia.vertexCount+=r)}}}for(var E=[],T=[],A=[],I=0;I<i.length;++I){var b=i[I],P=this._device.createBuffer(new La(Uo.VERTEX|Uo.TRANSFER_DST,ko.HOST|ko.DEVICE,b.count*b.stride,b.stride));P.update(b.buffer.buffer),E.push(P),T.push(new Uint8Array(P.size)),A.push(P)}var w=this._device.createBuffer(new La(Uo.VERTEX|Uo.TRANSFER_DST,ko.HOST|ko.DEVICE,4*r,4)),R=new Float32Array(r);R.fill(0),w.update(R),A.push(w);for(var N=e.inputAssembler.attributes,D=new Array(N.length+1),O=0;O<N.length;++O)D[O]=N[O];D[N.length]=new $a("a_dyn_batch_id",zo.R32F,!1,i.length);var M=new tr(D,A),z=this._device.createInputAssembler(M),L=this._device.createBuffer(new La(Uo.UNIFORM|Uo.TRANSFER_DST,ko.HOST|ko.DEVICE,ch.SIZE,ch.SIZE));l.bindBuffer(ch.BINDING,L),l.update();var F=new Float32Array(ch.COUNT);Yi.toArray(F,n.transform.worldMatrix,ch.MAT_WORLDS_OFFSET),this.batches.push({mergeCount:1,vbs:E,vbDatas:T,vbIdx:w,vbIdxData:R,vbCount:r,ia:z,ubo:L,uboData:F,pass:c,shader:s,descriptorSet:l})}},t.clear=function(){for(var e=0;e<this.batches.length;++e){var t=this.batches[e];t.vbCount=0,t.mergeCount=0,t.ia.vertexCount=0}},e}(),xv=new La(Uo.UNIFORM|Uo.TRANSFER_DST,ko.DEVICE),yv=new Fa(null),Cv=new _r(null);!function(e){e[e.NONE=0]="NONE",e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(_v||(_v=e("bQ",{})));var Sv,Ev,Tv,Av,Iv,bv,Pv,wv,Rv,Nv,Dv=e("bR",function(){function e(e){this._rootBuffer=null,this._buffers=[],this._descriptorSet=null,this._pipelineLayout=null,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocksInt=[],this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._shader=null,this._bs=new Qr,this._dss=new Xr,this._rs=new Yr,this._priority=wp.DEFAULT,this._stage=Pp.DEFAULT,this._phase=dv("default"),this._primitive=ra.TRIANGLE_LIST,this._batchingScheme=_v.NONE,this._dynamicStates=ua.NONE,this._instancedBuffers={},this._batchedBuffers={},this._hash=0,this._root=void 0,this._device=void 0,this._passHandle=Rs,this._rootBufferDirty=!1,this._root=e,this._device=e.device}e.fillPipelineInfo=function(e,t){void 0!==t.priority&&e._setPriority(t.priority),void 0!==t.primitive&&e._setPrimitive(t.primitive),void 0!==t.stage&&e._setStage(t.stage),void 0!==t.dynamicStates&&e._setDynamicState(t.dynamicStates),void 0!==t.phase&&e._setPhase(dv(t.phase));var n=e._bs;if(t.blendState){var i=t.blendState,o=i.targets;o&&o.forEach((function(e,t){n.setTarget(t,e)})),void 0!==i.isA2C&&(n.isA2C=i.isA2C),void 0!==i.isIndepend&&(n.isIndepend=i.isIndepend),void 0!==i.blendColor&&(n.blendColor=i.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)},e.getPassHash=function(e){var t,n=lv.getKey(e.program,e.defines)+","+e._primitive+","+e._dynamicStates;return n+=function(e){for(var t,n=",bs,"+e.isA2C,i=ne(e.targets);!(t=i()).done;){var o=t.value;n+=",bt,"+o.blend+","+o.blendEq+","+o.blendAlphaEq+","+o.blendColorMask,n+=","+o.blendSrc+","+o.blendDst+","+o.blendSrcAlpha+","+o.blendDstAlpha}return n}(e._bs),n+=function(e){var t=",dss,"+e.depthTest+","+e.depthWrite+","+e.depthFunc;return t+=","+e.stencilTestFront+","+e.stencilFuncFront+","+e.stencilRefFront+","+e.stencilReadMaskFront,t+=","+e.stencilFailOpFront+","+e.stencilZFailOpFront+","+e.stencilPassOpFront+","+e.stencilWriteMaskFront,(t+=","+e.stencilTestBack+","+e.stencilFuncBack+","+e.stencilRefBack+","+e.stencilReadMaskBack)+","+e.stencilFailOpBack+","+e.stencilZFailOpBack+","+e.stencilPassOpBack+","+e.stencilWriteMaskBack}(e._dss),Hr(n+=",rs,"+(t=e._rs).cullMode+","+t.depthBias+","+t.isFrontFaceCCW,666)};var t=e.prototype;return t.initialize=function(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()},t.getHandle=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=Fo.UNKNOWN);var i=this._propertyHandleMap[e];return i?(n?i=Qd(i,n):t&&(i=Qd(i,Wd(i)-t)),i+t):0},t.getBinding=function(t){var n=this.getHandle(t);return n?e.getBindingFromHandle(n):-1},t.setUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._getBlockView(o,i);Zd[o](r,n,a),this._setRootBufferDirty(!0)},t.getUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._getBlockView(o,i);return Jd[o](r,n,a)},t.setUniformArray=function(t,n){for(var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=Dr(o)>>2,r=this._getBlockView(o,i),c=e.getOffsetFromHandle(t),s=0;s<n.length;s++,c+=a)null!==n[s]&&Zd[o](r,n[s],c);this._setRootBufferDirty(!0)},t.bindTexture=function(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)},t.bindSampler=function(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)},t.setDynamicState=function(e,t){var n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)},t.overridePipelineStates=function(){console.warn("base pass cannot override states, please use pass instance instead.")},t._setRootBufferDirty=function(e){this._rootBufferDirty=e},t.update=function(){this._descriptorSet?(this._rootBuffer&&this._rootBufferDirty&&(this._rootBuffer.update(this._rootBlock),this._setRootBufferDirty(!1)),this._descriptorSet.update()):N(12006)},t.getInstancedBuffer=function(e){return void 0===e&&(e=0),this._instancedBuffers[e]||(this._instancedBuffers[e]=new vv(this))},t.getBatchedBuffer=function(e){return void 0===e&&(e=0),this._batchedBuffers[e]||(this._batchedBuffers[e]=new gv(this))},t._initNative=function(){},t._destroy=function(){},t.destroy=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++){var t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}for(var n in this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBuffer=null),this._instancedBuffers)this._instancedBuffers[n].destroy();for(var i in this._batchedBuffers)this._batchedBuffers[i].destroy();this._descriptorSet.destroy(),this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._destroy()},t.resetUniform=function(t){var n=this.getHandle(t);if(n){for(var i=e.getTypeFromHandle(n),o=e.getBindingFromHandle(n),a=e.getOffsetFromHandle(n),r=e.getCountFromHandle(n),c=this._getBlockView(i,o),s=this._properties[t],l=s&&s.value||ev(i),u=(Dr(i)>>2)*r,f=0;f+l.length<=u;f+=l.length)c.set(l,a+f);this._setRootBufferDirty(!0)}},t.resetTexture=function(t,n){var i=this.getHandle(t);if(i){var o=e.getTypeFromHandle(i),a=e.getBindingFromHandle(i),r=this._properties[t],c=r&&r.value,s=c?c+"-texture":ev(o),l=hv.get(s),u=l&&l.getGFXTexture(),f=r&&void 0!==r.samplerHash?tc.unpackFromHash(r.samplerHash):l&&l.getSamplerInfo(),_=this._device.getSampler(f);this._descriptorSet.bindSampler(a,_,n),this._descriptorSet.bindTexture(a,u,n)}},t.resetUBOs=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++)for(var t=this._shaderInfo.blocks[e],n=0,i=0;i<t.members.length;i++){for(var o=t.members[i],a=this._getBlockView(o.type,t.binding),r=this._properties[o.name],c=r&&r.value||ev(o.type),s=(Dr(o.type)>>2)*o.count,l=0;l+c.length<=s;l+=c.length)a.set(c,n+l);n+=s}this._setRootBufferDirty(!0)},t.resetTextures=function(){for(var e=0;e<this._shaderInfo.samplerTextures.length;e++)for(var t=this._shaderInfo.samplerTextures[e],n=0;n<t.count;n++)this.resetTexture(t.name,n)},t.tryCompile=function(){var t=this._root.pipeline;if(!t)return!1;this._syncBatchingScheme();var n=lv.getGFXShader(this._device,this._programName,this._defines,t);return n?(this._shader=n,this._setPipelineLayout(lv.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e.getPassHash(this)),!0):(console.warn("create shader "+this._programName+" failed"),!1)},t.getShaderVariant=function(e){if(void 0===e&&(e=null),!this._shader&&!this.tryCompile())return console.warn("pass resources incomplete"),null;if(!e)return this._shader;for(var t=this._root.pipeline,n=0;n<e.length;n++){var i=e[n];this._defines[i.name]=i.value}for(var o=lv.getGFXShader(this._device,this._programName,this._defines,t),a=0;a<e.length;a++){var r=e[a];delete this._defines[r.name]}return o},t.beginChangeStatesSilently=function(){},t.endChangeStatesSilently=function(){},t._setPriority=function(e){this._priority=e},t._setStage=function(e){this._stage=e},t._setPhase=function(e){this._phase=e},t._setPrimitive=function(e){this._primitive=e},t._setState=function(e,t,n,i){this._bs=e,this._dss=t,this._rs=n,this._descriptorSet=i},t._doInit=function(t,n){void 0===n&&(n=!1),this._initNative(),this._setPriority(wp.DEFAULT),this._setStage(Pp.DEFAULT),this._setPhase(dv("default")),this._setPrimitive(ra.TRIANGLE_LIST),this._passIndex=t.passIndex,this._propertyIndex=void 0!==t.propertyIndex?t.propertyIndex:t.passIndex,this._programName=t.program,this._defines=n?Y({},t.defines):t.defines,this._shaderInfo=lv.getTemplate(t.program),this._properties=t.properties||this._properties;var i=this._device;e.fillPipelineInfo(this,t),t.stateOverrides&&e.fillPipelineInfo(this,t.stateOverrides),Cv.layout=lv.getDescriptorSetLayout(this._device,t.program),this._descriptorSet=this._device.createDescriptorSet(Cv),this._setState(this._bs,this._dss,this._rs,this._descriptorSet);for(var o=this._shaderInfo.blocks,a=lv.getTemplateInfo(t.program),r=a.blockSizes,c=a.handleMap,s=i.capabilities.uboOffsetAlignment,l=[],u=0,f=0,_=0;_<o.length;_++){var m=r[_];l.push(f),f+=Math.ceil(m/s)*s,u=m}var p=l[l.length-1]+u;p&&(xv.size=16*Math.ceil(p/16),this._rootBuffer=i.createBuffer(xv),this._rootBlock=new ArrayBuffer(p));for(var h=0,d=0;h<o.length;h++){var v=o[h].binding,g=r[h];yv.buffer=this._rootBuffer,yv.offset=l[d++],yv.range=16*Math.ceil(g/16);var x=this._buffers[v]=i.createBuffer(yv);this._blocks[v]=new Float32Array(this._rootBlock,yv.offset,g/Float32Array.BYTES_PER_ELEMENT),this._blocksInt[v]=new Int32Array(this._blocks[v].buffer,this._blocks[v].byteOffset,this._blocks[v].length),this._descriptorSet.bindBuffer(v,x)}var y=this._propertyHandleMap=c,C={};for(var S in this._properties){var E=this._properties[S];E.handleInfo&&(C[S]=this.getHandle.apply(this,E.handleInfo))}Object.assign(y,C)},t._syncBatchingScheme=function(){this._defines.USE_INSTANCING?this._device.hasFeature(Mo.INSTANCED_ARRAYS)?this._setBatchingScheme(_v.INSTANCING):(this._defines.USE_INSTANCING=!1,this._setBatchingScheme(_v.NONE)):this._defines.USE_BATCHING?this._setBatchingScheme(_v.VB_MERGING):this._setBatchingScheme(_v.NONE)},t._setBatchingScheme=function(e){this._batchingScheme=e},t._setDynamicState=function(e){this._dynamicStates=e},t._setHash=function(e){this._hash=e},t._getBlockView=function(e,t){return e<Fo.FLOAT?this._blocksInt[t]:this._blocks[t]},t._setPipelineLayout=function(e){this._pipelineLayout=e},t._initPassFromTarget=function(e,t,n,i){this._initNative(),this._setPriority(e.priority),this._setStage(e.stage),this._setPhase(e.phase),this._setBatchingScheme(e.batchingScheme),this._setPrimitive(e.primitive),this._setDynamicState(e.dynamicStates),this._setState(n,t,e.rasterizerState,e.descriptorSet),this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._blocks=e._blocks,this._blocksInt=e._blocksInt,this._dynamics=e._dynamics,this._shader=e._shader,this._setPipelineLayout(lv.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e._hash^i)},W(e,[{key:"native",get:function(){return this._nativeObj}},{key:"root",get:function(){return this._root}},{key:"device",get:function(){return this._device}},{key:"shaderInfo",get:function(){return this._shaderInfo}},{key:"localSetLayout",get:function(){return lv.getDescriptorSetLayout(this._device,this._programName,!0)}},{key:"program",get:function(){return this._programName}},{key:"properties",get:function(){return this._properties}},{key:"defines",get:function(){return this._defines}},{key:"passIndex",get:function(){return this._passIndex}},{key:"propertyIndex",get:function(){return this._propertyIndex}},{key:"dynamics",get:function(){return this._dynamics}},{key:"blocks",get:function(){return this._blocks}},{key:"blocksInt",get:function(){return this._blocksInt}},{key:"rootBufferDirty",get:function(){return this._rootBufferDirty}},{key:"priority",get:function(){return this._priority}},{key:"primitive",get:function(){return this._primitive}},{key:"stage",get:function(){return this._stage}},{key:"phase",get:function(){return this._phase}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"batchingScheme",get:function(){return this._batchingScheme}},{key:"descriptorSet",get:function(){return this._descriptorSet}},{key:"hash",get:function(){return this._hash}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}}]),e}());Dv.getTypeFromHandle=Wd,Dv.getBindingFromHandle=Yd,Dv.getCountFromHandle=Xd,Dv.getOffsetFromHandle=Kd,function(e){e[e.LOCAL=0]="LOCAL",e[e.WORLD=1]="WORLD"}(Sv||(Sv={})),function(e){e[e.NONE=0]="NONE",e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.RS=e.ROTATION|e.SCALE]="RS",e[e.TRS=e.POSITION|e.ROTATION|e.SCALE]="TRS",e[e.TRS_MASK=~e.TRS]="TRS_MASK"}(Ev||(Ev=e("fU",{}))),s.internal.TransformBit=Ev;var Ov=e("dn",ml("cc.EffectAsset")((Nv=Rv=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"techniques",Iv,ee(t)),ie(t,"shaders",bv,ee(t)),ie(t,"combinations",Pv,ee(t)),ie(t,"hideInEditor",wv,ee(t)),t}X(t,e),t.register=function(e){t._effects[e.name]=e},t.remove=function(e){if("string"!=typeof e)t._effects[e.name]&&t._effects[e.name].equals(e)&&delete t._effects[e.name];else{if(t._effects[e])return void delete t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return void delete t._effects[n]}},t.get=function(e){if(t._effects[e])return t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return t._effects[n];return null},t.getAll=function(){return t._effects};var n=t.prototype;return n.onLoaded=function(){lv.register(this),t.register(this),s.game.once(s.Game.EVENT_ENGINE_INITED,this._precompile,this)},n._precompile=function(){for(var e=this,t=s.director.root,n=function(n){var i=e.shaders[n],o=e.combinations[n];if(!o)return"continue";Object.keys(o).reduce((function(e,t){return e.reduce((function(e,n){for(var i=o[t],a=0;a<i.length;++a){var r=Y({},n);r[t]=i[a],e.push(r)}return e}),[])}),[{}]).forEach((function(e){return lv.getGFXShader(t.device,i.name,e,t.pipeline)}))},i=0;i<this.shaders.length;i++)n(i)},n.destroy=function(){return t.remove(this),e.prototype.destroy.call(this)},n.initDefault=function(n){e.prototype.initDefault.call(this,n);var i=t.get("unlit");this.name="unlit",this.shaders=i.shaders,this.combinations=i.combinations,this.techniques=i.techniques},n.validate=function(){return this.techniques.length>0&&this.shaders.length>0},t}(Fu),Rv._effects={},Iv=oe((Av=Nv).prototype,"techniques",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),bv=oe(Av.prototype,"shaders",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Pv=oe(Av.prototype,"combinations",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),wv=oe(Av.prototype,"hideInEditor",[xl,Cl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Tv=Av))||Tv);s.EffectAsset=Ov;var Mv=e("dE",function(){function e(){}return e.getOrCreatePipelineState=function(e,t,n,i,o){var a=t.hash^i.hash^o.attributesHash^n.typedID,r=this._PSOHashMap.get(a);if(!r){var c=t.pipelineLayout,s=new pr(o.attributes),l=new Jr(n,c,i,s,t.rasterizerState,t.depthStencilState,t.blendState,t.primitive,t.dynamicStates);r=e.createPipelineState(l),this._PSOHashMap.set(a,r)}return r},e}());Mv._PSOHashMap=new Map;var zv=new Na,Lv=new Ta;function Fv(e,t){e.x=t.x*t.x,e.y=t.y*t.y,e.z=t.z*t.z}var Uv,Bv,Gv,kv,Hv,jv,Vv,qv,Wv,Yv,Xv=null,Kv=new to,Qv=e("dp",(Uv=ml("cc.Material"),Bv=ql(Ov),Uv((Yv=function(e){function t(){var t;return ie(t=e.call(this)||this,"_effectAsset",Hv,ee(t)),ie(t,"_techIdx",jv,ee(t)),ie(t,"_defines",Vv,ee(t)),ie(t,"_states",qv,ee(t)),ie(t,"_props",Wv,ee(t)),t._passes=[],t._hash=0,t}X(t,e),t.getHash=function(e){for(var t,n=0,i=ne(e.passes);!(t=i()).done;)n^=t.value.hash;return n};var n=t.prototype;return n.initialize=function(e){this._passes.length?w(12005):(this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=Ov.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states),this._update())},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._doDestroy(),e.prototype.destroy.call(this)},n.recompileShaders=function(){console.warn("Shaders in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.overridePipelineStates=function(){console.warn("Pipeline states in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.onLoaded=function(){this._update()},n.resetUniforms=function(e){void 0===e&&(e=!0),this._props.length=this._passes.length;for(var t=0;t<this._props.length;t++)this._props[t]={};if(e)for(var n,i=ne(this._passes);!(n=i()).done;){var o=n.value;o.resetUBOs(),o.resetTextures()}},n.setProperty=function(e,t,n){var i=!1;if(void 0===n)for(var o=this._passes,a=o.length,r=0;r<a;r++){var c=o[r];this._uploadProperty(c,e,t)&&(this._props[c.propertyIndex][e]=t,i=!0)}else{if(n>=this._passes.length)return void console.warn("illegal pass index: "+n+".");var s=this._passes[n];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}i||console.warn("illegal property name: "+e+".")},n.getProperty=function(e,t){if(void 0===t)for(var n=this._props,i=n.length,o=0;o<i;o++){var a=n[o];if(e in a)return a[e]}else{if(t>=this._props.length)return console.warn("illegal pass index: "+t+"."),null;var r=this._props[this._passes[t].propertyIndex];if(e in r)return r[e]}return null},n.copy=function(e){this._techIdx=e._techIdx,this._props.length=e._props.length;for(var t=0;t<e._props.length;t++)this._props[t]=Y({},e._props[t]);this._defines.length=e._defines.length;for(var n=0;n<e._defines.length;n++)this._defines[n]=Y({},e._defines[n]);this._states.length=e._states.length;for(var i=0;i<e._states.length;i++)this._states[i]=Y({},e._states[i]);this._effectAsset=e._effectAsset,this._update()},n._prepareInfo=function(e,t){var n=e;if(!Array.isArray(n)){var i=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(i).fill(n)}for(var o=0;o<n.length;++o)Object.assign(t[o]||(t[o]={}),n[o])},n._createPasses=function(){var e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];for(var t=e.passes.length,n=[],i=0;i<t;++i){var o=e.passes[i],a=o.passIndex=i,r=o.defines=this._defines[a]||(this._defines[a]={});if(o.stateOverrides=this._states[a]||(this._states[a]={}),void 0!==o.propertyIndex&&Object.assign(r,this._defines[o.propertyIndex]),void 0!==o.embeddedMacros&&Object.assign(r,o.embeddedMacros),!o.switch||r[o.switch]){var c=new Dv(s.director.root);c.initialize(o),n.push(c)}}return n},n._update=function(e){var n=this;if(void 0===e&&(e=!0),this._effectAsset){this._passes=this._createPasses();var i=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=i,e)this._passes.forEach((function(e,t){var i=n._props[t];for(var o in i||(i=n._props[t]={}),void 0!==e.propertyIndex&&Object.assign(i,n._props[e.propertyIndex]),i)n._uploadProperty(e,o,i[o])}));else for(var o=0;o<this._props.length;o++)this._props[o]={}}this._hash=t.getHash(this)},n._uploadProperty=function(e,t,n){var i=e.getHandle(t);if(!i)return!1;if(Dv.getTypeFromHandle(i)<Fo.SAMPLER1D)if(Array.isArray(n))e.setUniformArray(i,n);else if(null!==n){var o;if(null===(o=e.properties[t])||void 0===o?void 0:o.linear){var a=n;Fv(Kv,a),Kv.w=a.w,n=Kv}e.setUniform(i,n)}else e.resetUniform(t);else if(Array.isArray(n))for(var r=0;r<n.length;r++)this._bindTexture(e,i,n[r],r);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0},n._bindTexture=function(e,t,n,i){var o=Dv.getBindingFromHandle(t);if(n instanceof ic)e.bindTexture(o,n,i);else if(n instanceof md){var a=n.getGFXTexture();if(!a||!a.width||!a.height)return;e.bindTexture(o,a,i),e.bindSampler(o,n.getGFXSampler(),i)}},n._doDestroy=function(){if(this._passes&&this._passes.length)for(var e,t=ne(this._passes);!(e=t()).done;)e.value.destroy();this._passes.length=0},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),this.setProperty("mainColor",new Ri("#ff00ff"))},n.validate=function(){return!!this._effectAsset&&!this._effectAsset.isDefault&&this.passes.length>0},W(t,[{key:"effectAsset",get:function(){return this._effectAsset}},{key:"effectName",get:function(){return this._effectAsset?this._effectAsset.name:""}},{key:"technique",get:function(){return this._techIdx}},{key:"passes",get:function(){return this._passes}},{key:"hash",get:function(){return this._hash}},{key:"parent",get:function(){return null}},{key:"owner",get:function(){return null}}]),t}(Fu),Hv=oe((kv=Yv).prototype,"_effectAsset",[Bv],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jv=oe(kv.prototype,"_techIdx",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Vv=oe(kv.prototype,"_defines",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),qv=oe(kv.prototype,"_states",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Wv=oe(kv.prototype,"_props",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Gv=kv))||Gv));s.Material=Qv;var Jv,Zv=e("bC",xt({Low_256x256:256,Medium_512x512:512,High_1024x1024:1024,Ultra_2048x2048:2048})),$v=e("bD",xt({Planar:0,ShadowMap:1})),eg=e("bE",xt({HARD:0,SOFT:1,SOFT_2X:2})),tg=$v.ShadowMap+1,ng=e("bF",function(){function e(){this.fixedSphere=new va(0,0,0,.01),this.maxReceived=4,this.firstSetCSM=!1,this.shadowCameraFar=0,this.matShadowView=new Yi,this.matShadowProj=new Yi,this.matShadowViewProj=new Yi,this._normal=new Di(0,1,0),this._shadowColor=new Ri(0,0,0,76),this._matLight=new Yi,this._material=null,this._instancingMaterial=null,this._size=new Ji(512,512),this._enabled=!1,this._distance=0,this._type=tg,this._near=.1,this._far=10,this._invisibleOcclusionRange=200,this._shadowDistance=100,this._orthoSize=1,this._pcf=0,this._shadowMapDirty=!1,this._bias=0,this._normalBias=0,this._fixedArea=!1,this._saturation=.75}var t=e.prototype;return t.getPlanarShader=function(e){return this._material||(this._material=new Qv,this._material.initialize({effectName:"planar-shadow"})),this._material.passes[0].getShaderVariant(e)},t.getPlanarInstanceShader=function(e){return this._instancingMaterial||(this._instancingMaterial=new Qv,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}})),this._instancingMaterial.passes[0].getShaderVariant(e)},t._setEnable=function(e){this._enabled=e},t._setType=function(e){this._type=this.enabled?e:tg},t.initialize=function(e){this.near=e.near,this.far=e.far,this.invisibleOcclusionRange=e.invisibleOcclusionRange,this.shadowDistance=e.shadowDistance,this.orthoSize=e.orthoSize,this.size=e.size,this.pcf=e.pcf,this.normal=e.normal,this.distance=e.distance,this.shadowColor=e.shadowColor,this.bias=e.bias,this.normalBias=e.normalBias,this.maxReceived=e.maxReceived,this.fixedArea=e.fixedArea,this._setEnable(e.enabled),this._setType(e.type),this.saturation=e.saturation},t.activate=function(){if(this.enabled)this.type===$v.ShadowMap?this._updatePipeline():this._updatePlanarInfo();else{var e=s.director.root;e.pipeline.macros.CC_ENABLE_DIR_SHADOW=0,e.onGlobalPipelineStateChanged()}},t._updatePlanarInfo=function(){this._material||(this._material=new Qv,this._material.initialize({effectName:"planar-shadow"})),this._instancingMaterial||(this._instancingMaterial=new Qv,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}));var e=s.director.root;e.pipeline.macros.CC_ENABLE_DIR_SHADOW=0,e.onGlobalPipelineStateChanged()},t._updatePipeline=function(){var e=s.director.root;e.pipeline.macros.CC_ENABLE_DIR_SHADOW=1,e.onGlobalPipelineStateChanged()},t._destroy=function(){},t.destroy=function(){this._destroy(),this._material&&this._material.destroy(),this._instancingMaterial&&this._instancingMaterial.destroy(),this.fixedSphere.destroy()},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._setEnable(e),this.activate()}},{key:"normal",get:function(){return this._normal},set:function(e){Di.copy(this._normal,e)}},{key:"distance",get:function(){return this._distance},set:function(e){this._distance=e}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){this._shadowColor=e}},{key:"invisibleOcclusionRange",get:function(){return this._invisibleOcclusionRange},set:function(e){this._invisibleOcclusionRange=e}},{key:"shadowDistance",get:function(){return this._shadowDistance},set:function(e){this._shadowDistance=e}},{key:"type",get:function(){return this._type},set:function(e){this._setType(e),this.activate()}},{key:"near",get:function(){return this._near},set:function(e){this._near=e}},{key:"far",get:function(){return this._far},set:function(e){this._far=e}},{key:"orthoSize",get:function(){return this._orthoSize},set:function(e){this._orthoSize=e}},{key:"size",get:function(){return this._size},set:function(e){this._size.set(e)}},{key:"pcf",get:function(){return this._pcf},set:function(e){this._pcf=e}},{key:"shadowMapDirty",get:function(){return this._shadowMapDirty},set:function(e){this._shadowMapDirty=e}},{key:"bias",get:function(){return this._bias},set:function(e){this._bias=e}},{key:"normalBias",get:function(){return this._normalBias},set:function(e){this._normalBias=e}},{key:"saturation",get:function(){return this._saturation},set:function(e){this._saturation=e}},{key:"fixedArea",get:function(){return this._fixedArea},set:function(e){this._fixedArea=e}},{key:"matLight",get:function(){return this._matLight}},{key:"material",get:function(){return this._material}},{key:"instancingMaterial",get:function(){return this._instancingMaterial}},{key:"native",get:function(){return this._nativeObj}}]),e}());ng.MAX_FAR=2e3,ng.COEFFICIENT_OF_EXPANSION=2*Math.sqrt(3),s.Shadows=ng;var ig=new nr;ig.format=zo.RGBA8,ig.beginAccesses=[ia.FRAGMENT_SHADER_READ_TEXTURE],ig.endAccesses=[ia.FRAGMENT_SHADER_READ_TEXTURE];var og=new ir;og.format=zo.DEPTH_STENCIL;var ag=new rr([ig],og),rg={width:1,height:1,renderPassInfo:ag},cg=e("dq",ml("cc.RenderTexture")(Jv=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._window=null,t}X(t,e);var n=t.prototype;return n.initialize=function(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)},n.reset=function(e){this.initialize(e)},n.destroy=function(){if(this._window){var t=s.director.root;null==t||t.destroyWindow(this._window),this._window=null}return e.prototype.destroy.call(this)},n.resize=function(e,t){this._width=Math.floor(xi(e,1,2048)),this._height=Math.floor(xi(t,1,2048)),this._window&&this._window.resize(this._width,this._height),this.emit("resize",this._window)},n._serialize=function(){return{}},n._deserialize=function(t,n){var i=t;this._width=i.w,this._height=i.h,this._name=i.n,e.prototype._deserialize.call(this,i.base,n)},n.getGFXTexture=function(){return this._window&&this._window.framebuffer.colorTextures[0]},n.onLoaded=function(){this._initWindow()},n._initWindow=function(e){var t=s.director.root;rg.title=this._name,rg.width=this._width,rg.height=this._height,rg.renderPassInfo=e&&e.passInfo?e.passInfo:ag,this._window?(this._window.destroy(),this._window.initialize(t.device,rg)):this._window=t.createWindow(rg)},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this._width=this._height=1,this._initWindow()},n.validate=function(){return this.width>=1&&this.width<=2048&&this.height>=1&&this.height<=2048},n.readPixels=function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),i=(n=n||this.width)||this.height;var o=this.getGFXTexture();if(!o)return null;var a=this._getGFXDevice(),r=[],c=[],s=new Ra;s.texOffset.x=e,s.texOffset.y=t,s.texExtent.width=n,s.texExtent.height=i,c.push(s);var l=new Uint8Array(n*i*4);return r.push(l),null==a||a.copyTextureToBuffers(o,r,c),l},W(t,[{key:"window",get:function(){return this._window}}]),t}(md))||Jv);s.RenderTexture=cg;var sg=new to,lg=xt({LINEAR:0,EXP:1,EXP_SQUARED:2,LAYERED:3}),ug=lg.LAYERED+1,fg=e("eF",function(){function e(){this._fogColor=new Ri("#C8C8C8"),this._colorArray=new to(.2,.2,.2,1),this._enabled=!1,this._accurate=!1,this._type=0,this._fogDensity=.3,this._fogStart=.5,this._fogEnd=300,this._fogAtten=5,this._fogTop=1.5,this._fogRange=1.2}var t=e.prototype;return t._setType=function(e){this._type=this.enabled?e:ug},t._setEnable=function(e){this._enabled=e},t._setAccurate=function(e){this._accurate=e},t.initialize=function(e){this.fogColor=e.fogColor,this._setEnable(e.enabled),this._setAccurate(e.accurate),this._setType(e.type),this.fogDensity=e.fogDensity,this.fogStart=e.fogStart,this.fogEnd=e.fogEnd,this.fogAtten=e.fogAtten,this.fogTop=e.fogTop,this.fogRange=e.fogRange},t.activate=function(){this._updatePipeline()},t._updatePipeline=function(){var e=s.director.root,t=this.enabled?this.type:ug,n=this.accurate?1:0,i=e.pipeline;i.macros.CC_USE_FOG===t&&i.macros.CC_USE_ACCURATE_FOG===n||(i.macros.CC_USE_FOG=t,i.macros.CC_USE_ACCURATE_FOG=n,e.onGlobalPipelineStateChanged())},t._destroy=function(){},t.destroy=function(){this._destroy()},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._setEnable(e),e?this.activate():(this._type=ug,this._updatePipeline())}},{key:"accurate",get:function(){return this._accurate},set:function(e){this._setAccurate(e),this._updatePipeline()}},{key:"fogColor",get:function(){return this._fogColor},set:function(e){this._fogColor.set(e),sg.set(e.x,e.y,e.z,e.w),Fv(this._colorArray,sg)}},{key:"type",get:function(){return this._type},set:function(e){this._setType(e),this.enabled&&this._updatePipeline()}},{key:"fogDensity",get:function(){return this._fogDensity},set:function(e){this._fogDensity=e}},{key:"fogStart",get:function(){return this._fogStart},set:function(e){this._fogStart=e}},{key:"fogEnd",get:function(){return this._fogEnd},set:function(e){this._fogEnd=e}},{key:"fogAtten",get:function(){return this._fogAtten},set:function(e){this._fogAtten=e}},{key:"fogTop",get:function(){return this._fogTop},set:function(e){this._fogTop=e}},{key:"fogRange",get:function(){return this._fogRange},set:function(e){this._fogRange=e}},{key:"colorArray",get:function(){return this._colorArray}},{key:"native",get:function(){return this._nativeObj}}]),e}());function _g(e,t){for(var n,i=ne(t);!(n=i()).done;){var o=n.value;Array.isArray(o)?_g(e,o):e.push(o)}}function mg(e){var t=[];return _g(t,e),t.join("")}s.Fog=fg;var pg=yn.Flags.Destroyed,hg=yn.Flags.PersistentMask,dg=mn.IDENTIFIER_RE,vg="var ",gg="o",xg={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},yg=mn.escapeForJS,Cg=function(){function e(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}return e.prototype.toString=function(){return vg+this.varName+"="+this.expression+";"},e}();function Sg(e,t){return t instanceof Cg?new Cg(t.varName,e+t.expression):e+t}function Eg(e,t,n){Array.isArray(n)?(n[0]=Sg(t,n[0]),e.push(n)):e.push(Sg(t,n)+";")}var Tg=function(){function e(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}var t=e.prototype;return t.append=function(e,t){this._exps.push([e,t])},t.writeCode=function(e){var t;if(this._exps.length>1)e.push("t="+this._targetExp+";"),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(var n=0;n<this._exps.length;n++){var i=this._exps[n];Eg(e,t+Ag(i[0])+"=",i[1])}},e}();function Ag(e){return dg.test(e)?"."+e:"["+yg(e)+"]"}Tg.pool=void 0,Tg.pool=new ft((function(e){e._exps.length=0,e._targetExp=null}),1),Tg.pool.get=function(e){var t=this._get()||new Tg;return t._targetExp=e,t};var Ig=function(){function e(e,t){var n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=Fe(),Xe(this.funcModuleCache,xg),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{","o=R=new "+this.getFuncModule(e.constructor,!0)+"();","}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n=vg+this.globalVariables.join(",")+";");var i=mg(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(var o=0,a=this.objsToClear_iN$t.length;o<a;++o)this.objsToClear_iN$t[o]._iN$t=null;this.objsToClear_iN$t.length=0}var t=e.prototype;return t.getFuncModule=function(e,t){var n=Ue(e);if(n){var i=this.funcModuleCache[n];if(i)return i;if(void 0===i){var o=-1!==n.indexOf(".");if(o)try{if(o=e===Function("return "+n)())return this.funcModuleCache[n]=n,n}catch(e){}}}var a=this.funcs.indexOf(e);a<0&&(a=this.funcs.length,this.funcs.push(e));var r="F["+a+"]";return t&&(r="("+r+")"),this.funcModuleCache[n]=r,r},t.getObjRef=function(e){var t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),"O["+t+"]"},t.setValueType=function(e,t,n,i){var o=Tg.pool.get(i),a=t.constructor.__props__;a||(a=Object.keys(t));for(var r=0;r<a.length;r++){var c=a[r],s=n[c];if(t[c]!==s){var l=this.enumerateField(n,c,s);o.append(c,l)}}o.writeCode(e),Tg.pool.put(o)},t.enumerateCCClass=function(e,t,n){for(var i=n.__values__,o=jt(n),a=0;a<i.length;a++){var r=i[a],c=t[r],l=o[r+"$_$default"];if(!bg(l,c))if("object"==typeof c&&c instanceof s.ValueType&&(l=mn.getDefault(l))&&l.constructor===c.constructor){var u=gg+Ag(r);this.setValueType(e,l,c,u)}else this.setObjProp(e,t,r,c)}},t.instantiateArray=function(e){if(0===e.length)return"[]";var t="a"+ ++this.localVariableId,n=[new Cg(t,"new Array("+e.length+")")];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(var i=0;i<e.length;++i)Eg(n,t+"["+i+"]=",this.enumerateField(e,i,e[i]));return n},t.instantiateTypedArray=function(e){var t=e.constructor.name;if(0===e.length)return"new "+t;var n="a"+ ++this.localVariableId,i=[new Cg(n,"new "+t+"("+e.length+")")];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(var o=0;o<e.length;++o)0!==e[o]&&Eg(i,n+"["+o+"]=",e[o]);return i},t.enumerateField=function(e,t,n){if("object"==typeof n&&n){var i=n._iN$t;if(i){var o=i.globalVar;if(!o){o=i.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(o);var a=i.source[0];i.source[0]=Sg(o+"=",a)}return o}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?yg(n):("_objFlags"===t&&e instanceof yn&&(n&=hg),n)},t.setObjProp=function(e,t,n,i){Eg(e,gg+Ag(n)+"=",this.enumerateField(t,n,i))},t.enumerateObject=function(e,t){var n=t.constructor;if(s.Class._isCCClass(n))this.enumerateCCClass(e,t,n);else for(var i in t)if(t.hasOwnProperty(i)&&(95!==i.charCodeAt(0)||95!==i.charCodeAt(1)||"__type__"===i)){var o=t[i];"object"==typeof o&&o&&o===t._iN$t||this.setObjProp(e,t,i,o)}},t.instantiateObj=function(e){if(e instanceof s.ValueType)return mn.getNewValueTypeCode(e);if(e instanceof s.Asset)return this.getObjRef(e);if(e._objFlags&pg)return null;var t,n=e.constructor;if(s.Class._isCCClass(n)){if(this.parent)if(this.parent instanceof s.Component){if(e instanceof s._BaseNode||e instanceof s.Component)return this.getObjRef(e)}else if(this.parent instanceof s._BaseNode)if(e instanceof s._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof s.Component&&!e.node.isChildOf(this.parent))return this.getObjRef(e);t=new Cg(gg,"new "+this.getFuncModule(n,!0)+"()")}else if(n===Object)t=new Cg(gg,"{}");else{if(n)return this.getObjRef(e);t=new Cg(gg,"Object.create(null)")}var i=[t];return e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e),this.enumerateObject(i,e),["(function(){",i,"return o;})();"]},e}();function bg(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof s.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return Ne(e)&&Ne(t)}return!1}var Pg,wg,Rg,Ng,Dg,Og,Mg,zg,Lg,Fg,Ug=e("gT",function(){function e(e){this._uiComp=null,this._opacity=1,this._localOpacity=1,this.opacityDirty=!0,this._uiTransformComp=null,this._node=void 0,this._node=e}return e.prototype.applyOpacity=function(e){this._opacity=this._localOpacity*e},e.markOpacityTree=function(t,n){void 0===n&&(n=!0),t._uiProps.opacityDirty=n;for(var i=0,o=t.children.length;i<o;i++){var a=t.children[i];e.markOpacityTree(a,n)}},W(e,[{key:"uiTransformComp",get:function(){return this._uiTransformComp||(this._uiTransformComp=this._node.getComponent("cc.UITransform")),this._uiTransformComp},set:function(e){this._uiTransformComp=e}},{key:"uiComp",get:function(){return this._uiComp},set:function(e){this._uiComp&&e?w(12002):this._uiComp=e}},{key:"opacity",get:function(){return this._opacity}},{key:"localOpacity",get:function(){return this._localOpacity},set:function(t){this._localOpacity=t,e.markOpacityTree(this._node)}}]),e}());yn.Flags.Destroying,function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed",e.ACTIVE_IN_HIERARCHY_CHANGED="active-in-hierarchy-changed"}(Pg||(Pg=e("gS",{})));var Bg=yn.Flags.Destroying,Gg=yn.Flags.DontDestroy,kg=yn.Flags.Deactivating,Hg=new Ae("Node");function jg(e){return e?"string"==typeof e?lt(e):e:(N(3804),null)}var Vg,qg,Wg,Yg,Xg,Kg,Qg,Jg,Zg,$g,ex,tx=e("dG",ml("cc.BaseNode")((Fg=Lg=function(e){X(i,e),i._setScene=function(e){e._updateScene()},i._findComponent=function(e,t){var n=t,i=e._components;if(n._sealed)for(var o=0;o<i.length;++o){var a=i[o];if(a.constructor===t)return a}else for(var r=0;r<i.length;++r){var c=i[r];if(c instanceof t)return c}return null},i._findComponents=function(e,t,n){var i=t,o=e._components;if(i._sealed)for(var a=0;a<o.length;++a){var r=o[a];r.constructor===t&&n.push(r)}else for(var c=0;c<o.length;++c){var s=o[c];s instanceof t&&n.push(s)}},i._findChildComponent=function(e,t){for(var n=0;n<e.length;++n){var o=e[n],a=i._findComponent(o,t);if(a)return a;if(o._children.length>0&&(a=i._findChildComponent(o._children,t)))return a}return null},i._findChildComponents=function(e,t,n){for(var o=0;o<e.length;++o){var a=e[o];i._findComponents(a,t,n),a._children.length>0&&i._findChildComponents(a._children,t,n)}};var t=i.prototype;function i(t){var n;return ie(n=e.call(this,t)||this,"_parent",Ng,ee(n)),ie(n,"_children",Dg,ee(n)),ie(n,"_active",Og,ee(n)),ie(n,"_components",Mg,ee(n)),ie(n,"_prefab",zg,ee(n)),n._scene=null,n._activeInHierarchy=!1,n._id=Hg.getNewId(),n._name=void 0,n._eventProcessor=new s.NodeEventProcessor(ee(n)),n._eventMask=0,n._siblingIndex=0,n._originalSceneId="",n._registerIfAttached=void 0,n._name=void 0!==t?t:"New Node",n}return t._updateScene=function(){null==this._parent?y("Node %s(%s) has not attached to a scene.",this.name,this.uuid):this._scene=this._parent._scene},t.attr=function(e){Xe(this,e)},t.getParent=function(){return this._parent},t.setParent=function(e,t){if(void 0===t&&(t=!1),this._parent!==e){var n=this._parent,i=e;if(this._parent=i,this._siblingIndex=0,this._onSetParent(n,t),this.emit&&this.emit(Pg.PARENT_CHANGED,n),n&&!(n._objFlags&Bg)){var o=n._children.indexOf(this);n._children.splice(o,1),n._updateSiblingIndex(),n.emit&&n.emit(Pg.CHILD_REMOVED,this)}i&&(i._children.push(this),this._siblingIndex=i._children.length-1,i.emit&&i.emit(Pg.CHILD_ADDED,this)),this._onHierarchyChanged(n)}},t.getChildByUuid=function(e){if(!e)return g("Invalid uuid"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._id===e)return t[n];return null},t.getChildByName=function(e){if(!e)return g("Invalid name"),null;for(var t=this._children,n=0,i=t.length;n<i;n++)if(t[n]._name===e)return t[n];return null},t.getChildByPath=function(e){for(var t=e.split("/"),n=this,i=function(e){var i=t[e];if(0===i.length)return"continue";var o=n.children.find((function(e){return e.name===i}));if(!o)return{v:null};n=o},o=0;o<t.length;++o){var a=i(o);if("continue"!==a&&"object"==typeof a)return a.v}return n},t.addChild=function(e){e.setParent(this)},t.insertChild=function(e,t){e.parent=this,e.setSiblingIndex(t)},t.getSiblingIndex=function(){return this._siblingIndex},t.setSiblingIndex=function(e){if(this._parent)if(this._parent._objFlags&kg)N(3821);else{var t=this._parent._children;e=-1!==e?e:t.length-1;var n=t.indexOf(this);e!==n&&(t.splice(n,1),e<t.length?t.splice(e,0,this):t.push(this),this._parent._updateSiblingIndex(),this._onSiblingIndexChanged&&this._onSiblingIndexChanged(e))}},t.walk=function(e,t){var n=1,o=null,a=null,r=0,c=i._stacks[i._stackId];c||(c=[],i._stacks.push(c)),i._stackId++,c.length=0,c[0]=this;for(var s=null,l=!1;n;)if(a=c[--n])if(!l&&e?e(a):l&&t&&t(a),c[n]=null,l){if(s===this._parent)break;if(l=!1,o)if(o[++r])c[n]=o[r],n++;else if(s&&(c[n]=s,n++,l=!0,s._parent?(r=(o=s._parent._children).indexOf(s),s=s._parent):(s=null,o=null),r<0))break}else a._children.length>0?(s=a,o=a._children,r=0,c[n]=o[r],n++):(c[n]=a,n++,l=!0);c.length=0,i._stackId--},t.removeFromParent=function(){this._parent&&this._parent.removeChild(this)},t.removeChild=function(e){this._children.indexOf(e)>-1&&(e.parent=null)},t.removeAllChildren=function(){for(var e=this._children,t=e.length-1;t>=0;t--){var n=e[t];n&&(n.parent=null)}this._children.length=0},t.isChildOf=function(e){var t=this;do{if(t===e)return!0;t=t._parent}while(t);return!1},t.getComponent=function(e){var t=jg(e);return t?i._findComponent(this,t):null},t.getComponents=function(e){var t=jg(e),n=[];return t&&i._findComponents(this,t,n),n},t.getComponentInChildren=function(e){var t=jg(e);return t?i._findChildComponent(this._children,t):null},t.getComponentsInChildren=function(e){var t=jg(e),n=[];return t&&(i._findComponents(this,t,n),i._findChildComponents(this._children,t,n)),n},t.addComponent=function(e){var t;if("string"==typeof e){if(!(t=lt(e)))throw s._RF.peek()&&N(3808,e),TypeError(H(3807,e))}else{if(!e)throw TypeError(H(3804));t=e}if("function"!=typeof t)throw TypeError(H(3809));if(!Je(t,s.Component))throw TypeError(H(3810));var n=t._requireComponent;if(n)if(Array.isArray(n))for(var i=0;i<n.length;i++){var o=n[i];this.getComponent(o)||this.addComponent(o)}else{var a=n;this.getComponent(a)||this.addComponent(a)}var r=new t;return r.node=this,this._components.push(r),this._activeInHierarchy&&s.director._nodeActivator.activateComp(r),r},t.removeComponent=function(e){if(e){var t=null;(t=e instanceof af?e:this.getComponent(e))&&t.destroy()}else N(3813)},t.on=function(e,t,n,i){switch(void 0===i&&(i=!1),e){case Pg.TRANSFORM_CHANGED:this._eventMask|=1}this._eventProcessor.on(e,t,n,i)},t.off=function(e,t,n,i){if(void 0===i&&(i=!1),this._eventProcessor.off(e,t,n,i),!this._eventProcessor.hasEventListener(e))switch(e){case Pg.TRANSFORM_CHANGED:this._eventMask&=-2}},t.once=function(e,t,n,i){this._eventProcessor.once(e,t,n,i)},t.emit=function(e,t,n,i,o,a){this._eventProcessor.emit(e,t,n,i,o,a)},t.dispatchEvent=function(e){this._eventProcessor.dispatchEvent(e)},t.hasEventListener=function(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)},t.targetOff=function(e){this._eventProcessor.targetOff(e),1&this._eventMask&&!this._eventProcessor.hasEventListener(Pg.TRANSFORM_CHANGED)&&(this._eventMask&=-2)},t.destroy=function(){return!!e.prototype.destroy.call(this)&&(this.active=!1,!0)},t.destroyAllChildren=function(){for(var e=this._children,t=0;t<e.length;++t)e[t].destroy()},t._removeComponent=function(e){if(e){if(!(this._objFlags&Bg)){var t=this._components.indexOf(e);-1!==t?this._components.splice(t,1):e.node!==this&&N(3815)}}else N(3814)},t._updateSiblingIndex=function(){for(var e=0;e<this._children.length;++e)this._children[e]._siblingIndex=e;this.emit(Pg.SIBLING_ORDER_CHANGED)},t._onSetParent=function(e){this._parent&&(null!=e&&e._scene===this._parent._scene||null==this._parent._scene||this.walk(i._setScene))},t._onPostActivated=function(){},t._onBatchCreated=function(){this._parent&&(this._siblingIndex=this._parent.children.indexOf(this))},t._onPreDestroy=function(){this._onPreDestroyBase()},t._onHierarchyChanged=function(e){return this._onHierarchyChangedBase(e)},t._instantiate=function(e,t){return e||(e=s.instantiate._clone(this,this)),e._prefab,e._parent=null,e._onBatchCreated(t),e},t._onHierarchyChangedBase=function(){var e=this._parent;!this._persistNode||e instanceof s.Scene||s.game.removePersistRootNode(this);var t=this._active&&!(!e||!e._activeInHierarchy);this._activeInHierarchy!==t&&s.director._nodeActivator.activateNode(this,t)},t._onPreDestroyBase=function(){this._objFlags|=Bg;var e=this._parent,t=!!e&&0!=(e._objFlags&Bg);if(!t&&n&&this._registerIfAttached(!1),this._persistNode&&s.game.removePersistRootNode(this),!t&&e){this.emit(Pg.PARENT_CHANGED,this);var i=e._children.indexOf(this);e._children.splice(i,1),this._siblingIndex=0,e._updateSiblingIndex(),e.emit&&e.emit(Pg.CHILD_REMOVED,this)}this.emit(Pg.NODE_DESTROYED,this),this._eventProcessor.destroy();for(var o=this._children,a=0;a<o.length;++a)o[a]._destroyImmediate();for(var r=this._components,c=0;c<r.length;++c)r[c]._destroyImmediate();return t},W(i,[{key:"components",get:function(){return this._components}},{key:"_persistNode",get:function(){return(this._objFlags&Gg)>0},set:function(e){e?this._objFlags|=Gg:this._objFlags&=~Gg}},{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"children",get:function(){return this._children}},{key:"active",get:function(){return this._active},set:function(e){if(this._active!==e){this._active=e;var t=this._parent;t&&t._activeInHierarchy&&s.director._nodeActivator.activateNode(this,e)}}},{key:"activeInHierarchy",get:function(){return this._activeInHierarchy}},{key:"parent",get:function(){return this._parent},set:function(e){this.setParent(e)}},{key:"scene",get:function(){return this._scene}},{key:"eventProcessor",get:function(){return this._eventProcessor}}]),i}(yn),Lg.idGenerator=Hg,Lg._stacks=[[]],Lg._stackId=0,oe((Rg=Fg).prototype,"_persistNode",[vl],Object.getOwnPropertyDescriptor(Rg.prototype,"_persistNode"),Rg.prototype),oe(Rg.prototype,"name",[Rl],Object.getOwnPropertyDescriptor(Rg.prototype,"name"),Rg.prototype),oe(Rg.prototype,"children",[Rl],Object.getOwnPropertyDescriptor(Rg.prototype,"children"),Rg.prototype),oe(Rg.prototype,"active",[Rl],Object.getOwnPropertyDescriptor(Rg.prototype,"active"),Rg.prototype),oe(Rg.prototype,"activeInHierarchy",[Rl],Object.getOwnPropertyDescriptor(Rg.prototype,"activeInHierarchy"),Rg.prototype),oe(Rg.prototype,"parent",[Rl],Object.getOwnPropertyDescriptor(Rg.prototype,"parent"),Rg.prototype),Ng=oe(Rg.prototype,"_parent",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Dg=oe(Rg.prototype,"_children",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Og=oe(Rg.prototype,"_active",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Mg=oe(Rg.prototype,"_components",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zg=oe(Rg.prototype,"_prefab",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),wg=Rg))||wg);s._BaseNode=tx;var nx=new Di,ix=new Bi,ox=new Bi,ax=new Bi,rx=new Li,cx=new Li,sx=new Yi,lx=[],ux=[],fx=[],_x=function(){function e(){this._chunks=[],this._freelists=[],this._createChunk()}var t=e.prototype;return t.alloc=function(){for(var e=this._freelists.length,t=0;t<e;++t)if(this._freelists[t].length)return this._createView(t);return this._createChunk(),this._createView(e)},t.free=function(e,t){for(var n=this._freelists.length,i=0;i<n;++i)if(this._chunks[i]===e)return void this._freelists[i].push(t)},t.clear=function(){for(var e=this._chunks.length,t=0;t<e;++t)this._chunks[t].fill(0)},t._createChunk=function(){this._chunks.push(new Uint32Array(e.CAPACITY_PER_CHUNK));for(var t=[],n=e.CAPACITY_PER_CHUNK-1;n>=0;n--)t.push(n);this._freelists.push(t)},t._createView=function(e){return fx[0]=this._chunks[e],fx[1]=this._freelists[e].pop(),fx},e}();_x.CAPACITY_PER_CHUNK=256;var mx,px,hx,dx,vx,gx,xx,yx,Cx,Sx,Ex,Tx,Ax,Ix,bx,Px,Rx,Nx,Dx,Ox,Mx,zx,Lx,Fx,Ux,Bx,Gx,kx,Hx,jx,Vx,qx,Wx,Yx,Xx,Kx,Qx,Jx,Zx,$x,ey,ty,ny,iy,oy,ay,ry,cy,sy,ly,uy,fy,_y,my,py,hy,dy,vy,gy,xy,yy,Cy,Sy,Ey,Ty,Ay,Iy,by,Py,wy=new _x,Ry=Symbol("ReserveContentsForAllSyncablePrefab"),Ny=e("dH",(Vg=ml("cc.Node"),qg=ql(Di),Vg((ex=$g=function(e){X(i,e);var t=i.prototype;function i(t){var n;return(n=e.call(this,t)||this)._uiProps=new Ug(ee(n)),n._static=!1,ie(n,"_lpos",Xg,ee(n)),ie(n,"_lrot",Kg,ee(n)),ie(n,"_lscale",Qg,ee(n)),ie(n,"_layer",Jg,ee(n)),ie(n,"_euler",Zg,ee(n)),n._dirtyFlagsPri=Ev.NONE,n._eulerDirty=!1,n._nodeHandle=Rs,n._init(),n}return t._init=function(){var e=wy.alloc(),t=e[0],n=e[1];this._hasChangedFlagsChunk=t,this._hasChangedFlagsOffset=n;var i=new Uint32Array(t.buffer,t.byteOffset+4*n,1);this._hasChangedFlags=i,this._pos=new Di,this._rot=new Bi,this._scale=new Di(1,1,1),this._mat=new Yi},i.isNode=function(e){return e instanceof i&&(e.constructor===i||!(e instanceof s.Scene))},t._onPreDestroy=function(){var e=this._onPreDestroyBase();return wy.free(this._hasChangedFlagsChunk,this._hasChangedFlagsOffset),e},t[pf]=function(e){e.writeThis()},t.setParent=function(t,n){void 0===n&&(n=!1),n&&this.updateWorldTransform(),e.prototype.setParent.call(this,t,n)},t._onSetParent=function(t,n){if(e.prototype._onSetParent.call(this,t,n),n){var i=this._parent;i?(i.updateWorldTransform(),Yi.multiply(sx,Yi.invert(sx,i._mat),this._mat),Yi.toRTS(sx,this._lrot,this._lpos,this._lscale)):(Di.copy(this._lpos,this._pos),Bi.copy(this._lrot,this._rot),Di.copy(this._lscale,this._scale)),this._eulerDirty=!0}this.invalidateChildren(Ev.TRS)},t._onHierarchyChanged=function(t){this.eventProcessor.reattach(),e.prototype._onHierarchyChangedBase.call(this,t)},t._onBatchCreated=function(e){this.hasChangedFlags=Ev.TRS,this._dirtyFlags|=Ev.TRS;for(var t=this._children.length,n=0;n<t;++n)this._children[n]._siblingIndex=n,this._children[n]._onBatchCreated(e)},t._onBeforeSerialize=function(){this.eulerAngles},t._onPostActivated=function(e){e?(this._eventProcessor.setEnabled(!0),this.invalidateChildren(Ev.TRS),this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.setTextureDirty(),this._uiProps.uiComp.markForUpdateRenderData())):this._eventProcessor.setEnabled(!1)},t.translate=function(e,t){var n=t||Sv.LOCAL;if(n===Sv.LOCAL)Di.transformQuat(nx,e,this._lrot),this._lpos.x+=nx.x,this._lpos.y+=nx.y,this._lpos.z+=nx.z;else if(n===Sv.WORLD)if(this._parent){Bi.invert(ix,this._parent.worldRotation),Di.transformQuat(nx,e,ix);var i=this.worldScale;this._lpos.x+=nx.x/i.x,this._lpos.y+=nx.y/i.y,this._lpos.z+=nx.z/i.z}else this._lpos.x+=e.x,this._lpos.y+=e.y,this._lpos.z+=e.z;this.invalidateChildren(Ev.POSITION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.POSITION)},t.rotate=function(e,t){var n=t||Sv.LOCAL;if(Bi.normalize(ix,e),n===Sv.LOCAL)Bi.multiply(this._lrot,this._lrot,ix);else if(n===Sv.WORLD){var i=this.worldRotation;Bi.multiply(ox,ix,i),Bi.invert(ix,i),Bi.multiply(ox,ix,ox),Bi.multiply(this._lrot,this._lrot,ox)}this._eulerDirty=!0,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)},t.lookAt=function(e,t){this.getWorldPosition(nx),Di.subtract(nx,nx,e),Di.normalize(nx,nx),Bi.fromViewUp(ix,nx,t),this.setWorldRotation(ix)},t._setDirtyNode=function(e,t){lx[e]=t},t.invalidateChildren=function(e){var t,n,i,o=0,a=0,r=0,c=0,s=0,l=e|Ev.POSITION;for(lx[0]=this;o>=0;){if(s=(t=lx[o--])._hasChangedFlags[0],c=t._dirtyFlagsPri,t.isValid&&(c&s&e)!==e)for(c|=e,t._dirtyFlagsPri=c,t._hasChangedFlags[0]=s|e,r=(i=t._children).length,a=0;a<r;a++)n=i[a],lx[++o]=n;e=l}},t.updateWorldTransform=function(){if(this._dirtyFlags){for(var e,t=this,n=0;t&&t._dirtyFlags;)this._setDirtyNode(n++,t),t=t._parent;for(var i=0;n;)i|=(e=lx[--n])._dirtyFlags,t?(i&Ev.POSITION&&(Di.transformMat4(e._pos,e._lpos,t._mat),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Ev.RS&&(Yi.fromRTS(e._mat,e._lrot,e._lpos,e._lscale),Yi.multiply(e._mat,t._mat,e._mat),i&Ev.ROTATION&&Bi.multiply(e._rot,t._rot,e._lrot),Li.fromQuat(rx,Bi.conjugate(ax,e._rot)),Li.multiplyMat4(rx,rx,e._mat),e._scale.x=rx.m00,e._scale.y=rx.m04,e._scale.z=rx.m08)):(i&Ev.POSITION&&(Di.copy(e._pos,e._lpos),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Ev.RS&&(i&Ev.ROTATION&&Bi.copy(e._rot,e._lrot),i&Ev.SCALE&&(Di.copy(e._scale,e._lscale),Yi.fromRTS(e._mat,e._rot,e._pos,e._scale)))),e._dirtyFlags=Ev.NONE,t=e}},t.setPosition=function(e,t,n){void 0===t&&void 0===n?Di.copy(this._lpos,e):void 0===n?Di.set(this._lpos,e,t,this._lpos.z):Di.set(this._lpos,e,t,n),this.invalidateChildren(Ev.POSITION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.POSITION)},t.getPosition=function(e){return e?Di.set(e,this._lpos.x,this._lpos.y,this._lpos.z):Di.copy(new Di,this._lpos)},t.setRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?Bi.copy(this._lrot,e):Bi.set(this._lrot,e,t,n,i),this._eulerDirty=!0,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)},t.setRotationFromEuler=function(e,t,n){var i=void 0===n?this._euler.z:n;void 0===t?(Di.copy(this._euler,e),Bi.fromEuler(this._lrot,e.x,e.y,e.z)):(Di.set(this._euler,e,t,i),Bi.fromEuler(this._lrot,e,t,i)),this._eulerDirty=!1,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)},t.getRotation=function(e){return e?Bi.set(e,this._lrot.x,this._lrot.y,this._lrot.z,this._lrot.w):Bi.copy(new Bi,this._lrot)},t.setScale=function(e,t,n){void 0===t&&void 0===n?Di.copy(this._lscale,e):void 0===n?Di.set(this._lscale,e,t,this._lscale.z):Di.set(this._lscale,e,t,n),this.invalidateChildren(Ev.SCALE),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.SCALE)},t.getScale=function(e){return e?Di.set(e,this._lscale.x,this._lscale.y,this._lscale.z):Di.copy(new Di,this._lscale)},t.inverseTransformPoint=function(e,t){Di.copy(e,t);for(var n=this,i=0;n._parent;)this._setDirtyNode(i++,n),n=n._parent;for(;i>=0;)Di.transformInverseRTS(e,e,n._lrot,n._lpos,n._lscale),n=lx[--i];return e},t.setWorldPosition=function(e,t,n){void 0===t||void 0===n?Di.copy(this._pos,e):Di.set(this._pos,e,t,n);var i=this._parent,o=this._lpos;i?(i.updateWorldTransform(),Di.transformMat4(o,this._pos,Yi.invert(sx,i._mat))):Di.copy(o,this._pos),this.invalidateChildren(Ev.POSITION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.POSITION)},t.getWorldPosition=function(e){return this.updateWorldTransform(),e?Di.copy(e,this._pos):Di.copy(new Di,this._pos)},t.setWorldRotation=function(e,t,n,i){void 0===t||void 0===n||void 0===i?Bi.copy(this._rot,e):Bi.set(this._rot,e,t,n,i),this._parent?(this._parent.updateWorldTransform(),Bi.multiply(this._lrot,Bi.conjugate(this._lrot,this._parent._rot),this._rot)):Bi.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)},t.setWorldRotationFromEuler=function(e,t,n){Bi.fromEuler(this._rot,e,t,n),this._parent?(this._parent.updateWorldTransform(),Bi.multiply(this._lrot,Bi.conjugate(this._lrot,this._parent._rot),this._rot)):Bi.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)},t.getWorldRotation=function(e){return this.updateWorldTransform(),e?Bi.copy(e,this._rot):Bi.copy(new Bi,this._rot)},t.setWorldScale=function(e,t,n){void 0===t||void 0===n?Di.copy(this._scale,e):Di.set(this._scale,e,t,n);var i=this._parent;i?(i.updateWorldTransform(),Li.fromQuat(rx,Bi.conjugate(ax,i._rot)),Li.multiplyMat4(rx,rx,i._mat),cx.m00=this._scale.x,cx.m04=this._scale.y,cx.m08=this._scale.z,Li.multiply(rx,cx,Li.invert(rx,rx)),this._lscale.x=Di.set(nx,rx.m00,rx.m01,rx.m02).length(),this._lscale.y=Di.set(nx,rx.m03,rx.m04,rx.m05).length(),this._lscale.z=Di.set(nx,rx.m06,rx.m07,rx.m08).length()):Di.copy(this._lscale,this._scale),this.invalidateChildren(Ev.SCALE),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.SCALE)},t.getWorldScale=function(e){return this.updateWorldTransform(),e?Di.copy(e,this._scale):Di.copy(new Di,this._scale)},t.getWorldMatrix=function(e){this.updateWorldTransform();var t=e||new Yi;return Yi.copy(t,this._mat)},t.getWorldRS=function(e){this.updateWorldTransform();var t=e||new Yi;return Yi.copy(t,this._mat),t.m12=0,t.m13=0,t.m14=0,t},t.getWorldRT=function(e){this.updateWorldTransform();var t=e||new Yi;return Yi.fromRT(t,this._rot,this._pos)},t.setRTS=function(e,t,n){var i=0;e&&(i|=Ev.ROTATION,void 0!==e.w?(Bi.copy(this._lrot,e),this._eulerDirty=!0):(Di.copy(this._euler,e),Bi.fromEuler(this._lrot,e.x,e.y,e.z),this._eulerDirty=!1)),t&&(Di.copy(this._lpos,t),i|=Ev.POSITION),n&&(Di.copy(this._lscale,n),i|=Ev.SCALE),i&&(this.invalidateChildren(i),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,i))},t.pauseSystemEvents=function(e){this._eventProcessor.setEnabled(!1,e)},t.resumeSystemEvents=function(e){this._eventProcessor.setEnabled(!0,e)},i.resetHasChangedFlags=function(){wy.clear()},i.clearNodeArray=function(){i.ClearFrame<i.ClearRound&&!n?i.ClearFrame++:(i.ClearFrame=0,lx.length=0,ux.length=0)},W(i,[{key:"_dirtyFlags",get:function(){return this._dirtyFlagsPri},set:function(e){this._dirtyFlagsPri=e}},{key:"native",get:function(){return this._nativeObj}},{key:"position",get:function(){return this._lpos},set:function(e){this.setPosition(e)}},{key:"worldPosition",get:function(){return this.updateWorldTransform(),this._pos},set:function(e){this.setWorldPosition(e)}},{key:"rotation",get:function(){return this._lrot},set:function(e){this.setRotation(e)}},{key:"eulerAngles",get:function(){return this._eulerDirty&&(Bi.toEuler(this._euler,this._lrot),this._eulerDirty=!1),this._euler},set:function(e){this.setRotationFromEuler(e.x,e.y,e.z)}},{key:"angle",get:function(){return this._euler.z},set:function(e){Di.set(this._euler,0,0,e),Bi.fromAngleZ(this._lrot,e),this._eulerDirty=!1,this.invalidateChildren(Ev.ROTATION),1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.ROTATION)}},{key:"worldRotation",get:function(){return this.updateWorldTransform(),this._rot},set:function(e){this.setWorldRotation(e)}},{key:"scale",get:function(){return this._lscale},set:function(e){this.setScale(e)}},{key:"worldScale",get:function(){return this.updateWorldTransform(),this._scale},set:function(e){this.setWorldScale(e)}},{key:"matrix",set:function(e){Yi.toRTS(e,this._lrot,this._lpos,this._lscale),this.invalidateChildren(Ev.TRS),this._eulerDirty=!0,1&this._eventMask&&this.emit(Pg.TRANSFORM_CHANGED,Ev.TRS)}},{key:"worldMatrix",get:function(){return this.updateWorldTransform(),this._mat}},{key:"forward",get:function(){return Di.transformQuat(new Di,Di.FORWARD,this.worldRotation)},set:function(e){var t=e.length();Di.multiplyScalar(nx,e,-1/t),Bi.fromViewUp(ix,nx),this.setWorldRotation(ix)}},{key:"up",get:function(){return Di.transformQuat(new Di,Di.UP,this.worldRotation)}},{key:"right",get:function(){return Di.transformQuat(new Di,Di.RIGHT,this.worldRotation)}},{key:"layer",get:function(){return this._layer},set:function(e){this._layer=e,this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.markForUpdateRenderData()),this.emit(Pg.LAYER_CHANGED,this._layer)}},{key:"hasChangedFlags",get:function(){return this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]},set:function(e){this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]=e}}]),i}(tx),$g.EventType=Pg,$g.NodeSpace=Sv,$g.TransformDirtyBit=Ev,$g.TransformBit=Ev,$g.reserveContentsForAllSyncablePrefabTag=Ry,$g.ClearFrame=0,$g.ClearRound=1e3,Xg=oe((Yg=ex).prototype,"_lpos",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di}}),Kg=oe(Yg.prototype,"_lrot",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bi}}),Qg=oe(Yg.prototype,"_lscale",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(1,1,1)}}),Jg=oe(Yg.prototype,"_layer",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return bp.Enum.DEFAULT}}),Zg=oe(Yg.prototype,"_euler",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di}}),oe(Yg.prototype,"eulerAngles",[qg],Object.getOwnPropertyDescriptor(Yg.prototype,"eulerAngles"),Yg.prototype),oe(Yg.prototype,"angle",[Rl],Object.getOwnPropertyDescriptor(Yg.prototype,"angle"),Yg.prototype),oe(Yg.prototype,"layer",[Rl],Object.getOwnPropertyDescriptor(Yg.prototype,"layer"),Yg.prototype),Wg=Yg))||Wg));s.Node=Ny;var Dy=ml("cc.TargetInfo")((hx=oe((px=function(){ie(this,"localID",hx,this)}).prototype,"localID",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),mx=px))||mx,Oy=(dx=ml("cc.TargetOverrideInfo"),vx=ql(yn),gx=ql(Dy),xx=ql(Ny),yx=ql(Dy),dx((Ex=oe((Sx=function(){ie(this,"source",Ex,this),ie(this,"sourceInfo",Tx,this),ie(this,"propertyPath",Ax,this),ie(this,"target",Ix,this),ie(this,"targetInfo",bx,this)}).prototype,"source",[xl,vx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Tx=oe(Sx.prototype,"sourceInfo",[xl,gx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Ax=oe(Sx.prototype,"propertyPath",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ix=oe(Sx.prototype,"target",[xl,xx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),bx=oe(Sx.prototype,"targetInfo",[xl,yx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Cx=Sx))||Cx),My=ml("cc.CompPrefabInfo")((Nx=oe((Rx=function(){ie(this,"fileId",Nx,this)}).prototype,"fileId",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Px=Rx))||Px,zy=(Dx=ml("CCPropertyOverrideInfo"),Ox=ql(Dy),Dx((Bx=function(){function e(){ie(this,"targetInfo",Lx,this),ie(this,"propertyPath",Fx,this),ie(this,"value",Ux,this)}return e.prototype.isTarget=function(){},e}(),Lx=oe((zx=Bx).prototype,"targetInfo",[xl,Ox],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Fx=oe(zx.prototype,"propertyPath",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ux=oe(zx.prototype,"value",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Mx=zx))||Mx),Ly=(Gx=ml("cc.MountedChildrenInfo"),kx=ql(Dy),Hx=ql([Ny]),Gx((Yx=function(){function e(){ie(this,"targetInfo",qx,this),ie(this,"nodes",Wx,this)}return e.prototype.isTarget=function(){},e}(),qx=oe((Vx=Yx).prototype,"targetInfo",[xl,kx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Wx=oe(Vx.prototype,"nodes",[xl,Hx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),jx=Vx))||jx),Fy=(Xx=ml("cc.MountedComponentsInfo"),Kx=ql(Dy),Qx=ql([af]),Xx((ty=function(){function e(){ie(this,"targetInfo",$x,this),ie(this,"components",ey,this)}return e.prototype.isTarget=function(){},e}(),$x=oe((Zx=ty).prototype,"targetInfo",[xl,Kx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ey=oe(Zx.prototype,"components",[xl,Qx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Jx=Zx))||Jx),Uy=(ny=ml("cc.PrefabInstance"),iy=ql(Ny),oy=ql([Ly]),ay=ql([Fy]),ry=ql([zy]),cy=ql([Dy]),ny((dy=function(){function e(){ie(this,"fileId",uy,this),ie(this,"prefabRootNode",fy,this),ie(this,"mountedChildren",_y,this),ie(this,"mountedComponents",my,this),ie(this,"propertyOverrides",py,this),ie(this,"removedComponents",hy,this),this.targetMap={}}var t=e.prototype;return t.findPropertyOverride=function(){},t.removePropertyOverride=function(){},e}(),uy=oe((ly=dy).prototype,"fileId",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),fy=oe(ly.prototype,"prefabRootNode",[xl,iy],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_y=oe(ly.prototype,"mountedChildren",[xl,oy],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),my=oe(ly.prototype,"mountedComponents",[xl,ay],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),py=oe(ly.prototype,"propertyOverrides",[xl,ry],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),hy=oe(ly.prototype,"removedComponents",[xl,cy],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),sy=ly))||sy),By=(vy=ml("cc.PrefabInfo"),gy=ql(Ny),xy=ql(Uy),yy=ql([Oy]),vy((Ey=oe((Sy=function(){ie(this,"root",Ey,this),ie(this,"asset",Ty,this),ie(this,"fileId",Ay,this),ie(this,"instance",Iy,this),ie(this,"targetOverrides",by,this),ie(this,"nestedPrefabInstanceRoots",Py,this)}).prototype,"root",[xl,gy],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ty=oe(Sy.prototype,"asset",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ay=oe(Sy.prototype,"fileId",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Iy=oe(Sy.prototype,"instance",[xl,xy],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),by=oe(Sy.prototype,"targetOverrides",[xl,yy],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Py=oe(Sy.prototype,"nestedPrefabInstanceRoots",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Cy=Sy))||Cy);function Gy(e){var t=e._prefab;if(t&&t.instance){if(!t.asset)return N(3701,e.name),void(t.instance=void 0);var n=e._objFlags,i=e._parent,o=e._id,a=e._prefab;e[vn],s.game._isCloning=!0;var r=t.asset.data;r._iN$t=e,s.instantiate._clone(r,r),s.game._isCloning=!1,e._objFlags=n,e._parent=i,e._id=o,e._prefab&&(e._prefab.instance=null==a?void 0:a.instance)}}function ky(e,t,n){var i;if(t&&e){var o=t,a=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&a&&(t[a.fileId]={},o=t[a.fileId]);var r=e._prefab;r&&(o[r.fileId]=e);for(var c=e.components,s=0;s<c.length;s++){var l=c[s];l.__prefab&&(o[l.__prefab.fileId]=l)}for(var u=0;u<e.children.length;u++)ky(e.children[u],o,!1)}}function Hy(e,t){if(!e)return null;for(var n=t,i=0;i<e.length;i++){if(!n)return null;n=n[e[i]]}return n}function jy(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var a=Hy(o.targetInfo.localID,n);if(!a)continue;var r=n,c=o.targetInfo.localID;if(c.length>0)for(var s=0;s<c.length-1;s++)r=r[c[s]];if(o.nodes)for(var l=0;l<o.nodes.length;l++){var u=o.nodes[l];u&&(a._children.push(u),u._parent=a,ky(u,r,!1),u._siblingIndex=a._children.length-1,Xy(u,!0))}}}}function Vy(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var a=Hy(o.targetInfo.localID,n);if(!a)continue;if(o.components)for(var r=0;r<o.components.length;r++){var c=o.components[r];c&&(c.node=a,a._components.push(c))}}}}function qy(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o){var a=Hy(o.localID,n);if(!a||!a.node)continue;var r=a.node.components.indexOf(a);r>=0&&a.node._components.splice(r,1)}}}function Wy(e,t,n){if(!(t.length<=0))for(var i=null,o=0;o<t.length;o++){var a=t[o];if(a&&a.targetInfo){if(!(i=Hy(a.targetInfo.localID,n)))continue;var r=i,c=a.propertyPath.slice();if(c.length>0){var s=c.pop();if(!s)continue;for(var l=0;l<c.length&&(r=r[c[l]]);l++);if(!r)continue;if(Array.isArray(r))if("length"===s)r[s]=a.value;else{var u=Number.parseInt(s);Number.isInteger(u)&&u<r.length&&(r[s]=a.value)}else r[s]instanceof Et?r[s].set(a.value):r[s]=a.value}}}}function Yy(e){var t,n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(var i=0;i<n.length;i++){var o,a,r=n[i],c=r.source,s=r.sourceInfo;if(s){var l,u,f=null===(l=r.source)||void 0===l||null===(u=l._prefab)||void 0===u?void 0:u.instance;f&&f.targetMap&&(c=Hy(s.localID,f.targetMap))}if(c){var _,m=r.targetInfo;if(m){var p=null===(o=r.target)||void 0===o||null===(a=o._prefab)||void 0===a?void 0:a.instance;if(p&&p.targetMap&&(_=Hy(m.localID,p.targetMap))){var h=r.propertyPath.slice(),d=c;if(h.length>0){var v=h.pop();if(!v)return;for(var g=0;g<h.length&&(d=d[h[g]]);g++);if(!d)continue;d[v]=_}}}}}}function Xy(e,t){void 0===t&&(t=!1);var n=e._prefab,i=null==n?void 0:n.instance;if(i){Gy(e);var o={};i.targetMap=o,ky(e,o,!0),jy(0,i.mountedChildren,o),qy(0,i.removedComponents,o),Vy(0,i.mountedComponents,o),Wy(0,i.propertyOverrides,o)}t&&e&&e.children&&e.children.forEach((function(e){Xy(e,!0)}))}function Ky(e){var t=e._prefab;t&&t.nestedPrefabInstanceRoots&&t.nestedPrefabInstanceRoots.forEach((function(e){Xy(e)}))}s._PrefabInfo=By;var Qy,Jy,Zy,$y,eC,tC,nC,iC,oC,aC,rC,cC,sC,lC=Object.freeze({__proto__:null,TargetInfo:Dy,TargetOverrideInfo:Oy,CompPrefabInfo:My,PropertyOverrideInfo:zy,MountedChildrenInfo:Ly,MountedComponentsInfo:Fy,PrefabInstance:Uy,PrefabInfo:By,createNodeWithPrefab:Gy,generateTargetMap:ky,getTarget:Hy,applyMountedChildren:jy,applyMountedComponents:Vy,applyRemovedComponents:qy,applyPropertyOverrides:Wy,applyTargetOverrides:Yy,expandPrefabInstanceNode:Xy,expandNestedPrefabInstanceNode:Ky}),uC=xt({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2}),fC=e("df",ml("cc.Prefab")((tC=eC=function(e){function t(){var t;return ie(t=e.call(this)||this,"data",Zy,ee(t)),ie(t,"optimizationPolicy",$y,ee(t)),t._createFunction=void 0,t._instantiatedTimes=void 0,t._createFunction=null,t._instantiatedTimes=0,t}X(t,e);var n=t.prototype;return n.createNode=function(e){var t=s.instantiate(this);t.name=this.name,e(null,t)},n.compileCreateFunction=function(){var e,t;this._createFunction=(t=(e=this.data)instanceof s._BaseNode&&e,new Ig(e,t).result)},n._doInstantiate=function(e){return this.data._prefab||w(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)},n._instantiate=function(){var e;return e=this.data._instantiate(),++this._instantiatedTimes,e},n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.data=new Ny,this.data.name="(Missing Node)";var n=new s._PrefabInfo;n.asset=this,n.root=this.data,this.data._prefab=n},n.validate=function(){return!!this.data},n.onLoaded=function(){var e=this.data;Ky(e),Yy(e)},t}(Fu),eC.OptimizationPolicy=uC,eC.OptimizationPolicyThreshold=3,Zy=oe((Jy=tC).prototype,"data",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),$y=oe(Jy.prototype,"optimizationPolicy",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return uC.AUTO}}),Qy=Jy))||Qy);mt.value(fC,"_utils",lC),s.Prefab=fC,Be(s,"cc._Prefab","Prefab"),e("cO",(nC=ml("cc.PrefabLink"),iC=ql(fC),oC=Nl(),nC((sC=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"prefab",cC,ee(t)),t}return X(t,e),t}(af),cC=oe((rC=sC).prototype,"prefab",[iC,xl,oC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aC=rC))||aC));var _C=new Di;function mC(e,t,n,i){i||(i=new Di),e.convertToUINode(t,n,i);var o=n.position;return i.add(o),i}function pC(e,t,n){return n||(n=new Di),e.worldToScreen(t,n),n.x/=s.view.getScaleX(),n.y/=s.view.getScaleY(),n}var hC,dC,vC=e("cW",{WorldNode3DToLocalNodeUI:mC,WorldNode3DToWorldNodeUI:pC});s.pipelineUtils=vC,ri(s.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[0],o=t[3]||_C;return i.convertToUINode(t[1],t[2],o),o.add(t[2].position),t[3]||o.clone()}}]),ci(md.prototype,"TextureBase.prototype",[{name:"hasPremultipliedAlpha"},{name:"setPremultiplyAlpha"},{name:"setFlipY"}]),ri(cg.prototype,"RenderTexture.prototype",[{name:"getGFXWindow",customFunction:function(){return this._window}}]);var gC,xC=e("de",ml("cc.BufferAsset")((oe((dC=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._buffer=null,t}X(t,e);var n=t.prototype;return n.buffer=function(){return this._buffer},n.validate=function(){return!!this.buffer},W(t,[{key:"_nativeAsset",get:function(){return this._buffer},set:function(e){e instanceof ArrayBuffer?this._buffer=e:this._buffer=e.buffer}}]),t}(Fu)).prototype,"_nativeAsset",[tu],Object.getOwnPropertyDescriptor(dC.prototype,"_nativeAsset"),dC.prototype),hC=dC))||hC);s.BufferAsset=xC;var yC,CC,SC=((gC={})[Lo.UNORM]="Uint",gC[Lo.SNORM]="Int",gC[Lo.UINT]="Uint",gC[Lo.INT]="Int",gC[Lo.UFLOAT]="Float",gC[Lo.FLOAT]="Float",gC.default="Uint",gC);function EC(e){return""+(SC[e.type]||SC.default)+e.size/e.count*8}function TC(e,t,n,i,o,a,r){void 0===n&&(n=zo.R32F),void 0===i&&(i=0),void 0===o&&(o=e.byteLength-i),void 0===a&&(a=0),r||(r=new DataView(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)));var c=Er[n];a||(a=c.size);for(var s="set"+EC(c),l="get"+EC(c),u=c.size/c.count,f=Math.floor(o/a),_=mf.isLittleEndian,m=0;m<f;++m)for(var p=i+a*m,h=0;h<c.count;++h){var d=p+u*h,v=e[l](d,_);r[s](d,t(v,h,e),_)}return r}e("dg",function(){var e=t.prototype;function t(e,t,n,i,o){void 0===i&&(i=null),void 0===o&&(o=null),this.mesh=void 0,this.subMeshIdx=void 0,this._flatBuffers=[],this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0,this._vertexIdChannel=void 0,this._geometricInfo=void 0,this._vertexBuffers=void 0,this._attributes=void 0,this._indexBuffer=null,this._indirectBuffer=null,this._primitiveMode=void 0,this._iaInfo=void 0,this._attributes=t,this._vertexBuffers=e,this._indexBuffer=i,this._indirectBuffer=o,this._primitiveMode=n,this._iaInfo=new tr(t,e,i,o),this._init()}return e._init=function(){},e.genFlatBuffers=function(){if(!this._flatBuffers.length&&this.mesh&&void 0!==this.subMeshIdx){var e=this.mesh,t=0,n=e.struct.primitives[this.subMeshIdx];n.indexView&&(t=n.indexView.count);for(var i=0;i<n.vertexBundelIndices.length;i++){var o=n.vertexBundelIndices[i],a=e.struct.vertexBundles[o],r=n.indexView?n.indexView.count:a.view.count,c=a.view.stride,s=c*r,l=new Uint8Array(e.data.buffer,a.view.offset,a.view.length),u=new Uint8Array(n.indexView?s:a.view.length);if(n.indexView){for(var f=e.readIndices(this.subMeshIdx),_=0;_<t;++_)for(var m=_*c,p=f[_]*c,h=0;h<c;++h)u[m+h]=l[p+h];this._flatBuffers.push({stride:c,count:r,buffer:u})}else u.set(e.data.subarray(a.view.offset,a.view.offset+a.view.length)),this._flatBuffers.push({stride:c,count:r,buffer:u})}}},e.destroy=function(){for(var e=0;e<this.vertexBuffers.length;e++)this.vertexBuffers[e].destroy();if(this.vertexBuffers.length=0,this._indexBuffer&&(this._indexBuffer.destroy(),this._indexBuffer=null),this._jointMappedBuffers&&this._jointMappedBufferIndices){for(var t=0;t<this._jointMappedBufferIndices.length;t++)this._jointMappedBuffers[this._jointMappedBufferIndices[t]].destroy();this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0}this._indirectBuffer&&(this._indirectBuffer.destroy(),this._indirectBuffer=null)},e.enableVertexIdChannel=function(e){if(!this._vertexIdChannel){var t=this.vertexBuffers.length,n=this.attributes.length,i=this._allocVertexIdBuffer(e);this._vertexBuffers.push(i),this._attributes.push(new $a("a_vertexId",zo.R32F,!1,t)),this._iaInfo.attributes=this._attributes,this._iaInfo.vertexBuffers=this._vertexBuffers,this._vertexIdChannel={stream:t,index:n}}},e._allocVertexIdBuffer=function(e){for(var t=0===this.vertexBuffers.length||0===this.vertexBuffers[0].stride?0:this.vertexBuffers[0].size/this.vertexBuffers[0].stride,n=new Float32Array(t),i=0;i<t;++i)n[i]=i+.5;var o=e.createBuffer(new La(Uo.VERTEX|Uo.TRANSFER_DST,ko.DEVICE,n.byteLength,n.BYTES_PER_ELEMENT));return o.update(n),o},W(t,[{key:"attributes",get:function(){return this._attributes}},{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}},{key:"primitiveMode",get:function(){return this._primitiveMode}},{key:"geometricInfo",get:function(){if(this._geometricInfo)return this._geometricInfo;if(void 0===this.mesh)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:Di.ZERO,max:Di.ZERO}};if(void 0===this.subMeshIdx)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:Di.ZERO,max:Di.ZERO}};var e=this.mesh,t=this.subMeshIdx,n=e.readAttribute(t,ya.ATTR_POSITION),i=e.readIndices(t),o=new Di,a=new Di,r=this.attributes.find((function(e){return e.name===ya.ATTR_POSITION}));if(r){var c=Er[r.format].count;2===c?(o.set(n[0],n[1],0),a.set(n[0],n[1],0)):(o.set(n[0],n[1],n[2]),a.set(n[0],n[1],n[2]));for(var s=0;s<n.length;s+=c)2===c?(o.x=n[s]>o.x?n[s]:o.x,o.y=n[s+1]>o.y?n[s+1]:o.y,a.x=n[s]<a.x?n[s]:a.x,a.y=n[s+1]<a.y?n[s+1]:a.y):(o.x=n[s]>o.x?n[s]:o.x,o.y=n[s+1]>o.y?n[s+1]:o.y,o.z=n[s+2]>o.z?n[s+2]:o.z,a.x=n[s]<a.x?n[s]:a.x,a.y=n[s+1]<a.y?n[s+1]:a.y,a.z=n[s+2]<a.z?n[s+2]:a.z)}return this._geometricInfo={positions:n,indices:i,boundingBox:{max:o,min:a}},this._geometricInfo}},{key:"flatBuffers",get:function(){return this._flatBuffers}},{key:"jointMappedBuffers",get:function(){var e=this;if(this._jointMappedBuffers)return this._jointMappedBuffers;var t=this._jointMappedBuffers=[],n=this._jointMappedBufferIndices=[];if(!this.mesh||void 0===this.subMeshIdx)return this._jointMappedBuffers=this.vertexBuffers;var i,o,a=this.mesh.struct,r=a.primitives[this.subMeshIdx];if(!a.jointMaps||void 0===r.jointMapIndex||!a.jointMaps[r.jointMapIndex])return this._jointMappedBuffers=this.vertexBuffers;for(var c=s.director.root.device,l=0;l<r.vertexBundelIndices.length;l++){var u=a.vertexBundles[r.vertexBundelIndices[l]];o=0,i=zo.UNKNOWN;for(var f=0;f<u.attributes.length;f++){var _=u.attributes[f];if(_.name===ya.ATTR_JOINTS){i=_.format;break}o+=Er[_.format].size}i?function(){var s=new Uint8Array(e.mesh.data.buffer,u.view.offset,u.view.length),f=new DataView(s.slice().buffer),_=a.jointMaps[r.jointMapIndex];TC(f,(function(e){return _.indexOf(e)}),i,o,u.view.length,u.view.stride,f);var m=c.createBuffer(new La(Uo.VERTEX|Uo.TRANSFER_DST,ko.DEVICE,u.view.length,u.view.stride));m.update(f.buffer),t.push(m),n.push(l)}():t.push(this.vertexBuffers[r.vertexBundelIndices[l]])}return this._vertexIdChannel&&t.push(this._allocVertexIdBuffer(c)),t}},{key:"iaInfo",get:function(){return this._iaInfo}}]),t}()),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(yC||(yC=e("d$",{}))),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.KEY_DOWN="keydown",e.KEY_PRESSING="key-pressing",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion"}(CC||(CC=e("gY",{}))),s.SystemEventType=yC;var AC,IC=new Array(16),bC=null,PC=new Ji,wC=[Pg.TOUCH_START,Pg.TOUCH_MOVE,Pg.TOUCH_END,Pg.TOUCH_CANCEL],RC=[Pg.MOUSE_DOWN,Pg.MOUSE_ENTER,Pg.MOUSE_MOVE,Pg.MOUSE_LEAVE,Pg.MOUSE_UP,Pg.MOUSE_WHEEL];!function(e){e[e.ADD_POINTER_EVENT_PROCESSOR=0]="ADD_POINTER_EVENT_PROCESSOR",e[e.REMOVE_POINTER_EVENT_PROCESSOR=1]="REMOVE_POINTER_EVENT_PROCESSOR"}(AC||(AC=e("gX",{})));var NC,DC,OC,MC,zC,LC,FC,UC,BC,GC,kC,HC,jC,VC,qC,WC,YC,XC,KC,QC,JC,ZC,$C,eS,tS,nS,iS,oS,aS,rS,cS,sS,lS,uS,fS,_S,mS,pS,hS,dS,vS,gS,xS,yS,CS,SS,ES,TS,AS,IS,bS,PS,wS,RS,NS,DS,OS,MS,zS,LS,FS,US,BS,GS,kS,HS,jS,VS,qS,WS,YS,XS,KS,QS,JS,ZS,$S,eE,tE,nE,iE,oE,aE,rE,cE,sE,lE,uE,fE,_E,mE,pE,hE,dE,vE,gE,xE,yE,CE,SE,EE,TE,AE,IE,bE,PE,wE,RE,NE,DE,OE,ME,zE,LE,FE,UE,BE,GE,kE,HE,jE,VE,qE,WE,YE,XE,KE,QE,JE,ZE,$E,eT,tT,nT,iT,oT,aT,rT,cT,sT,lT,uT,fT,_T,mT,pT,hT,dT,vT,gT,xT,yT,CT,ST,ET,TT,AT,IT,bT,PT,wT,RT,NT,DT,OT,MT,zT,LT,FT,UT,BT,GT,kT,HT,jT,VT,qT,WT,YT,XT,KT,QT,JT,ZT,$T,eA,tA,nA,iA,oA,aA,rA,cA,sA,lA,uA,fA=e("gU",function(){var e=t.prototype;function t(e){this._isEnabled=!1,this.claimedTouchIdList=[],this.maskList=null,this.cachedCameraPriority=0,this.previousMouseIn=!1,this.bubblingTarget=null,this.capturingTarget=null,this.shouldHandleEventMouse=!1,this.shouldHandleEventTouch=!1,this._node=void 0,this._node=e}return e.setEnabled=function(e,t){void 0===t&&(t=!1),this._isEnabled=e;var n=this.node.children;if(e&&this._attachMask(),t&&n.length>0)for(var i=0;i<n.length;++i)n[i]._eventProcessor.setEnabled(e,!0)},e._searchComponentsInParent=function(e){var t=this.node;if(e){for(var n=0,i=[],o=t;o&&Ny.isNode(o);o=o.parent,++n){var a=o.getComponent(e);if(a){var r={index:n,comp:a};i?i.push(r):i=[r]}}return i.length>0?i:null}return null},e._attachMask=function(){this.maskList=this._searchComponentsInParent(t._maskComp)},e.reattach=function(){var e,n=this;this.node.walk((function(i){e||(e=n._searchComponentsInParent(t._maskComp)),i.eventProcessor.maskList=e}))},e.destroy=function(){bC===this._node&&(bC=null),this.capturingTarget&&this.capturingTarget.clear(),this.bubblingTarget&&this.bubblingTarget.clear(),t.callbacksInvoker.emit(AC.REMOVE_POINTER_EVENT_PROCESSOR,this)},e._isTouchEvent=function(e){return-1!==wC.indexOf(e)},e._isMouseEvent=function(e){return-1!==RC.indexOf(e)},e._hasTouchListeners=function(){for(var e=0;e<wC.length;++e){var t=wC[e];if(this.hasEventListener(t))return!0}return!1},e._hasMouseListeners=function(){for(var e=0;e<RC.length;++e){var t=RC[e];if(this.hasEventListener(t))return!0}return!1},e._hasPointerListeners=function(){return!!this._hasTouchListeners()||this._hasMouseListeners()},e._tryEmittingAddEvent=function(e){var n=this._isTouchEvent(e),i=this._isMouseEvent(e);n?this.shouldHandleEventTouch=!0:i&&(this.shouldHandleEventMouse=!0),!n&&!i||this._hasPointerListeners()||t.callbacksInvoker.emit(AC.ADD_POINTER_EVENT_PROCESSOR,this)},e._newCallbacksInvoker=function(){var e=this,n=new wn;return n._registerOffCallback((function(){e.shouldHandleEventTouch&&!e._hasTouchListeners()&&(e.shouldHandleEventTouch=!1),e.shouldHandleEventMouse&&!e._hasMouseListeners()&&(e.shouldHandleEventMouse=!1),e._hasPointerListeners()||t.callbacksInvoker.emit(AC.REMOVE_POINTER_EVENT_PROCESSOR,e)})),n},e.on=function(e,t,n,i){var o,a;return this._tryEmittingAddEvent(e),((i=!!i)?null!==(o=this.capturingTarget)&&void 0!==o?o:this.capturingTarget=this._newCallbacksInvoker():null!==(a=this.bubblingTarget)&&void 0!==a?a:this.bubblingTarget=this._newCallbacksInvoker()).on(e,t,n),t},e.once=function(e,t,n,i){var o,a;return this._tryEmittingAddEvent(e),((i=!!i)?null!==(o=this.capturingTarget)&&void 0!==o?o:this.capturingTarget=this._newCallbacksInvoker():null!==(a=this.bubblingTarget)&&void 0!==a?a:this.bubblingTarget=this._newCallbacksInvoker()).on(e,t,n,!0),t},e.off=function(e,t,n,i){var o;null===(o=(i=!!i)?this.capturingTarget:this.bubblingTarget)||void 0===o||o.off(e,t,n)},e.targetOff=function(e){var n,i;null===(n=this.capturingTarget)||void 0===n||n.removeAll(e),null===(i=this.bubblingTarget)||void 0===i||i.removeAll(e),this.shouldHandleEventTouch&&!this._hasTouchListeners()&&(this.shouldHandleEventTouch=!1),this.shouldHandleEventMouse&&!this._hasMouseListeners()&&(this.shouldHandleEventMouse=!1),this._hasPointerListeners()||t.callbacksInvoker.emit(AC.REMOVE_POINTER_EVENT_PROCESSOR,this)},e.emit=function(e,t,n,i,o,a){var r;null===(r=this.bubblingTarget)||void 0===r||r.emit(e,t,n,i,o,a)},e.dispatchEvent=function(e){var t,n=this.node,i=0;for(e.target=n,IC.length=0,this.getCapturingTargets(e.type,IC),e.eventPhase=1,i=IC.length-1;i>=0;--i)if((t=IC[i]).eventProcessor.capturingTarget&&(e.currentTarget=t,t.eventProcessor.capturingTarget.emit(e.type,e,IC),e.propagationStopped))return void(IC.length=0);if(IC.length=0,e.eventPhase=2,e.currentTarget=n,this.capturingTarget&&this.capturingTarget.emit(e.type,e),!e.propagationImmediateStopped&&this.bubblingTarget&&this.bubblingTarget.emit(e.type,e),!e.propagationStopped&&e.bubbles)for(this.getBubblingTargets(e.type,IC),e.eventPhase=3,i=0;i<IC.length;++i)if((t=IC[i]).eventProcessor.bubblingTarget&&(e.currentTarget=t,t.eventProcessor.bubblingTarget.emit(e.type,e),e.propagationStopped))return void(IC.length=0);IC.length=0},e.hasEventListener=function(e,t,n){var i=!1;return this.bubblingTarget&&(i=this.bubblingTarget.hasEventListener(e,t,n)),!i&&this.capturingTarget&&(i=this.capturingTarget.hasEventListener(e,t,n)),i},e.getCapturingTargets=function(e,t){for(var n=this._node.parent;n;){var i;(null===(i=n.eventProcessor.capturingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}},e.getBubblingTargets=function(e,t){for(var n=this._node.parent;n;){var i;(null===(i=n.eventProcessor.bubblingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}},e._handleEventMouse=function(e){switch(e.type){case CC.MOUSE_DOWN:return this._handleMouseDown(e);case CC.MOUSE_MOVE:return this._handleMouseMove(e);case CC.MOUSE_UP:return this._handleMouseUp(e);case CC.MOUSE_WHEEL:return this._handleMouseWheel(e);default:return!1}},e._handleMouseDown=function(e){var t=this._node;return!(!t||!t._uiProps.uiTransformComp||(PC=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(PC)||(e.type=Pg.MOUSE_DOWN,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))},e._handleMouseMove=function(e){var t=this._node;return!(!t||!t._uiProps.uiTransformComp||(PC=e.getUILocation(),t._uiProps.uiTransformComp.isHit(PC)?(this.previousMouseIn||(bC&&bC!==t&&(e.type=Pg.MOUSE_LEAVE,bC.dispatchEvent(e),bC.eventProcessor.previousMouseIn=!1),bC=t,e.type=Pg.MOUSE_ENTER,t.dispatchEvent(e),this.previousMouseIn=!0),e.type=Pg.MOUSE_MOVE,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0):(this.previousMouseIn&&(e.type=Pg.MOUSE_LEAVE,t.dispatchEvent(e),this.previousMouseIn=!1,bC=null),1)))},e._handleMouseUp=function(e){var t=this._node;return!(!t||!t._uiProps.uiTransformComp||(PC=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(PC)||(e.type=Pg.MOUSE_UP,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))},e._handleMouseWheel=function(e){var t=this._node;return!(!t||!t._uiProps.uiTransformComp||(PC=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(PC)||(e.type=Pg.MOUSE_WHEEL,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))},e._handleEventTouch=function(e){switch(e.type){case CC.TOUCH_START:return this._handleTouchStart(e);case CC.TOUCH_MOVE:return this._handleTouchMove(e);case CC.TOUCH_END:return this._handleTouchEnd(e);case CC.TOUCH_CANCEL:return this._handleTouchCancel(e);default:return!1}},e._handleTouchStart=function(e){var t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.getUILocation(PC),!t._uiProps.uiTransformComp.isHit(PC)||(e.type=Pg.TOUCH_START,e.bubbles=!0,t.dispatchEvent(e),0)))},e._handleTouchMove=function(e){var t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.type=Pg.TOUCH_MOVE,e.bubbles=!0,t.dispatchEvent(e),0))},e._handleTouchEnd=function(e){var t=this.node;t&&t._uiProps.uiTransformComp&&(e.getUILocation(PC),t._uiProps.uiTransformComp.isHit(PC)?e.type=Pg.TOUCH_END:e.type=Pg.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))},e._handleTouchCancel=function(e){var t=this.node;t&&t._uiProps.uiTransformComp&&(e.type=Pg.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))},W(t,[{key:"isEnabled",get:function(){return this._isEnabled}},{key:"node",get:function(){return this._node}}]),t}());fA._maskComp=null,fA.callbacksInvoker=new wn,s.NodeEventProcessor=fA;var _A=new Di(0,1,0),mA=new Di,pA=new to,hA=new Ri,dA=new Bi,vA=function(e){var t=1/Math.max(Math.max(Math.max(e.x,e.y),e.z),1e-4);t<1&&(e.x*=t,e.y*=t,e.z*=t)},gA=(NC=ml("cc.AmbientInfo"),DC=wl(),OC=yl("_skyColor"),MC=yl("_skyIllum"),zC=yl("_groundAlbedo"),LC=Nl(),FC=Ml(),UC=ql(Yt),BC=Ml(),GC=Nl(),kC=Ml(),NC(HC=DC((QC=function(){function e(){ie(this,"_skyColorHDR",VC,this),ie(this,"_skyIllumHDR",qC,this),ie(this,"_groundAlbedoHDR",WC,this),ie(this,"_skyColorLDR",YC,this),ie(this,"_skyIllumLDR",XC,this),ie(this,"_groundAlbedoLDR",KC,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this)},W(e,[{key:"skyColorHDR",get:function(){return this._skyColorHDR}},{key:"groundAlbedoHDR",get:function(){return this._groundAlbedoHDR}},{key:"skyIllumHDR",get:function(){return this._skyIllumHDR}},{key:"skyColorLDR",get:function(){return this._skyColorLDR}},{key:"groundAlbedoLDR",get:function(){return this._groundAlbedoLDR}},{key:"skyIllumLDR",get:function(){return this._skyIllumLDR}},{key:"skyLightingColor",get:function(){var e=s.director.root.pipeline.pipelineSceneData.isHDR;return pA.set(e?this._skyColorHDR:this._skyColorLDR),vA(pA),hA.set(255*pA.x,255*pA.y,255*pA.z,255)},set:function(e){pA.set(e.x,e.y,e.z,e.w),s.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(pA):this._skyColorLDR.set(pA),this._resource&&this._resource.skyColor.set(pA)}},{key:"skyColor",set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(e):this._skyColorLDR.set(e),this._resource&&this._resource.skyColor.set(e)}},{key:"skyIllum",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR=e:this._skyIllumLDR=e,this._resource&&(this._resource.skyIllum=e)}},{key:"groundLightingColor",get:function(){var e=s.director.root.pipeline.pipelineSceneData.isHDR;return pA.set(e?this._groundAlbedoHDR:this._groundAlbedoLDR),vA(pA),hA.set(255*pA.x,255*pA.y,255*pA.z,255)},set:function(e){pA.set(e.x,e.y,e.z,e.w),s.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(pA):this._groundAlbedoLDR.set(pA),this._resource&&this._resource.groundAlbedo.set(pA)}},{key:"groundAlbedo",set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(e):this._groundAlbedoLDR.set(e),this._resource&&this._resource.groundAlbedo.set(e)}}]),e}(),VC=oe((jC=QC).prototype,"_skyColorHDR",[xl,OC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new to(.2,.5,.8,1)}}),qC=oe(jC.prototype,"_skyIllumHDR",[xl,MC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lo.SKY_ILLUM}}),WC=oe(jC.prototype,"_groundAlbedoHDR",[xl,zC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new to(.2,.2,.2,1)}}),YC=oe(jC.prototype,"_skyColorLDR",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new to(.2,.5,.8,1)}}),XC=oe(jC.prototype,"_skyIllumLDR",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lo.SKY_ILLUM}}),KC=oe(jC.prototype,"_groundAlbedoLDR",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new to(.2,.2,.2,1)}}),oe(jC.prototype,"skyLightingColor",[LC,Rl,FC],Object.getOwnPropertyDescriptor(jC.prototype,"skyLightingColor"),jC.prototype),oe(jC.prototype,"skyIllum",[Rl,UC,BC],Object.getOwnPropertyDescriptor(jC.prototype,"skyIllum"),jC.prototype),oe(jC.prototype,"groundLightingColor",[GC,Rl,kC],Object.getOwnPropertyDescriptor(jC.prototype,"groundLightingColor"),jC.prototype),HC=jC))||HC)||HC);s.AmbientInfo=gA;var xA=(JC=ml("cc.SkyboxInfo"),ZC=wl(),$C=ql(Fd),eS=yl("_envmap"),tS=ql(Fd),nS=ql(Fd),iS=ql(Fd),oS=Nl(),aS=Ml(),rS=Ml(),cS=Ml(),sS=Ml(),lS=ql(Fd),uS=Ml(),fS=Nl(),_S=ql(Fd),JC(mS=ZC((ES=function(){function e(){ie(this,"_applyDiffuseMap",hS,this),ie(this,"_envmapHDR",dS,this),ie(this,"_envmapLDR",vS,this),ie(this,"_diffuseMapHDR",gS,this),ie(this,"_diffuseMapLDR",xS,this),ie(this,"_enabled",yS,this),ie(this,"_useIBL",CS,this),ie(this,"_useHDR",SS,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this),this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.activate()},W(e,[{key:"applyDiffuseMap",get:function(){return this._applyDiffuseMap},set:function(e){this._applyDiffuseMap=e,this._resource&&(this._resource.useDiffuseMap=e)}},{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=this._enabled))}},{key:"useIBL",get:function(){return this._useIBL},set:function(e){this._useIBL=e,this._resource&&(this._resource.useIBL=this._useIBL)}},{key:"useHDR",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR=this._useHDR,this._useHDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR=e,this._useHDR=e,this._resource&&(this.envmap=this._resource.envmap,this.diffuseMap=this._resource.diffuseMap,null==this.diffuseMap&&(this.applyDiffuseMap=!1)),this._resource&&(this._resource.useHDR=this._useHDR)}},{key:"envmap",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR:this._envmapLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR=e:this._envmapLDR=e,this._envmapHDR||(this._diffuseMapHDR=null,this._applyDiffuseMap=!1,this.useIBL=!1),this._resource&&(this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.useDiffuseMap=this._applyDiffuseMap,this._resource.envmap=e)}},{key:"diffuseMap",get:function(){return s.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR:this._diffuseMapLDR},set:function(e){s.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR=e:this._diffuseMapLDR=e,this._resource&&this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR)}}]),e}(),hS=oe((pS=ES).prototype,"_applyDiffuseMap",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),dS=oe(pS.prototype,"_envmapHDR",[xl,$C,eS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vS=oe(pS.prototype,"_envmapLDR",[xl,tS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),gS=oe(pS.prototype,"_diffuseMapHDR",[xl,nS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),xS=oe(pS.prototype,"_diffuseMapLDR",[xl,iS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),yS=oe(pS.prototype,"_enabled",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),CS=oe(pS.prototype,"_useIBL",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),SS=oe(pS.prototype,"_useHDR",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),oe(pS.prototype,"applyDiffuseMap",[oS,Rl,aS],Object.getOwnPropertyDescriptor(pS.prototype,"applyDiffuseMap"),pS.prototype),oe(pS.prototype,"enabled",[Rl,rS],Object.getOwnPropertyDescriptor(pS.prototype,"enabled"),pS.prototype),oe(pS.prototype,"useIBL",[Rl,cS],Object.getOwnPropertyDescriptor(pS.prototype,"useIBL"),pS.prototype),oe(pS.prototype,"useHDR",[Rl,sS],Object.getOwnPropertyDescriptor(pS.prototype,"useHDR"),pS.prototype),oe(pS.prototype,"envmap",[Rl,lS,uS],Object.getOwnPropertyDescriptor(pS.prototype,"envmap"),pS.prototype),oe(pS.prototype,"diffuseMap",[fS,Rl,Dl,_S],Object.getOwnPropertyDescriptor(pS.prototype,"diffuseMap"),pS.prototype),mS=pS))||mS)||mS);s.SkyboxInfo=xA;var yA=(TS=ml("cc.FogInfo"),AS=wl(),IS=Ml(),bS=Ml(),PS=Ml(),wS=ql(lg),RS=Ml(),NS=Nl(),DS=ql(Yt),OS=zl(),MS=Fl(),zS=Bl(),LS=Ml(),FS=Nl(),US=ql(Yt),BS=Fl(),GS=Bl(),kS=Ml(),HS=Nl(),jS=ql(Yt),VS=Fl(),qS=Bl(),WS=Ml(),YS=Nl(),XS=ql(Yt),KS=Ll(),QS=Fl(),JS=Bl(),ZS=Ml(),$S=Nl(),eE=ql(Yt),tE=Fl(),nE=Bl(),iE=Ml(),oE=Nl(),aE=ql(Yt),rE=Fl(),cE=Bl(),sE=Ml(),TS(lE=AS((SE=CE=function(){function e(){ie(this,"_type",fE,this),ie(this,"_fogColor",_E,this),ie(this,"_enabled",mE,this),ie(this,"_fogDensity",pE,this),ie(this,"_fogStart",hE,this),ie(this,"_fogEnd",dE,this),ie(this,"_fogAtten",vE,this),ie(this,"_fogTop",gE,this),ie(this,"_fogRange",xE,this),ie(this,"_accurate",yE,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this),this._resource.activate()},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}},{key:"accurate",get:function(){return this._accurate},set:function(e){this._accurate!==e&&(this._accurate=e,this._resource&&(this._resource.accurate=e,e&&(this._resource.type=this._type)))}},{key:"fogColor",get:function(){return this._fogColor},set:function(e){this._fogColor.set(e),this._resource&&(this._resource.fogColor=this._fogColor)}},{key:"type",get:function(){return this._type},set:function(e){this._type=e,this._resource&&(this._resource.type=e)}},{key:"fogDensity",get:function(){return this._fogDensity},set:function(e){this._fogDensity=e,this._resource&&(this._resource.fogDensity=e)}},{key:"fogStart",get:function(){return this._fogStart},set:function(e){this._fogStart=e,this._resource&&(this._resource.fogStart=e)}},{key:"fogEnd",get:function(){return this._fogEnd},set:function(e){this._fogEnd=e,this._resource&&(this._resource.fogEnd=e)}},{key:"fogAtten",get:function(){return this._fogAtten},set:function(e){this._fogAtten=e,this._resource&&(this._resource.fogAtten=e)}},{key:"fogTop",get:function(){return this._fogTop},set:function(e){this._fogTop=e,this._resource&&(this._resource.fogTop=e)}},{key:"fogRange",get:function(){return this._fogRange},set:function(e){this._fogRange=e,this._resource&&(this._resource.fogRange=e)}}]),e}(),CE.FogType=lg,fE=oe((uE=SE).prototype,"_type",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lg.LINEAR}}),_E=oe(uE.prototype,"_fogColor",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Ri("#C8C8C8")}}),mE=oe(uE.prototype,"_enabled",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),pE=oe(uE.prototype,"_fogDensity",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),hE=oe(uE.prototype,"_fogStart",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),dE=oe(uE.prototype,"_fogEnd",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 300}}),vE=oe(uE.prototype,"_fogAtten",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),gE=oe(uE.prototype,"_fogTop",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.5}}),xE=oe(uE.prototype,"_fogRange",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),yE=oe(uE.prototype,"_accurate",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),oe(uE.prototype,"enabled",[Rl,IS],Object.getOwnPropertyDescriptor(uE.prototype,"enabled"),uE.prototype),oe(uE.prototype,"accurate",[Rl,bS],Object.getOwnPropertyDescriptor(uE.prototype,"accurate"),uE.prototype),oe(uE.prototype,"fogColor",[Rl,PS],Object.getOwnPropertyDescriptor(uE.prototype,"fogColor"),uE.prototype),oe(uE.prototype,"type",[Rl,wS,RS],Object.getOwnPropertyDescriptor(uE.prototype,"type"),uE.prototype),oe(uE.prototype,"fogDensity",[NS,DS,OS,MS,Ul,zS,LS],Object.getOwnPropertyDescriptor(uE.prototype,"fogDensity"),uE.prototype),oe(uE.prototype,"fogStart",[FS,US,BS,GS,kS],Object.getOwnPropertyDescriptor(uE.prototype,"fogStart"),uE.prototype),oe(uE.prototype,"fogEnd",[HS,jS,VS,qS,WS],Object.getOwnPropertyDescriptor(uE.prototype,"fogEnd"),uE.prototype),oe(uE.prototype,"fogAtten",[YS,XS,KS,QS,JS,ZS],Object.getOwnPropertyDescriptor(uE.prototype,"fogAtten"),uE.prototype),oe(uE.prototype,"fogTop",[$S,eE,tE,nE,iE],Object.getOwnPropertyDescriptor(uE.prototype,"fogTop"),uE.prototype),oe(uE.prototype,"fogRange",[oE,aE,rE,cE,sE],Object.getOwnPropertyDescriptor(uE.prototype,"fogRange"),uE.prototype),lE=uE))||lE)||lE),CA=(EE=ml("cc.ShadowsInfo"),TE=wl(),AE=Ml(),IE=ql($v),bE=Nl(),PE=Nl(),wE=Ml(),RE=ql(Yt),NE=Ml(),DE=Nl(),OE=zl(),ME=ql(Yt),zE=Ml(),LE=Nl(),FE=ql(eg),UE=Ml(),BE=Nl(),GE=ql(Wt),kE=Nl(),HE=ql(Yt),jE=Ml(),VE=Nl(),qE=ql(Yt),WE=Ml(),YE=Nl(),XE=ql(Zv),KE=Ml(),QE=Nl(),JE=ql(Xt),ZE=Ml(),$E=Nl(),eT=ql(Yt),tT=Ml(),nT=Nl(),iT=ql(Yt),oT=Ml(),aT=Nl(),rT=zl(),cT=ql(Yt),sT=Ml(),lT=Nl(),uT=zl(),fT=ql(Yt),_T=Ml(),mT=Nl(),pT=ql(Yt),hT=Ml(),dT=Nl(),EE(vT=TE((FT=function(){function e(){ie(this,"_type",xT,this),ie(this,"_enabled",yT,this),ie(this,"_normal",CT,this),ie(this,"_distance",ST,this),ie(this,"_shadowColor",ET,this),ie(this,"_firstSetCSM",TT,this),ie(this,"_fixedArea",AT,this),ie(this,"_pcf",IT,this),ie(this,"_bias",bT,this),ie(this,"_normalBias",PT,this),ie(this,"_near",wT,this),ie(this,"_far",RT,this),ie(this,"_shadowDistance",NT,this),ie(this,"_invisibleOcclusionRange",DT,this),ie(this,"_orthoSize",OT,this),ie(this,"_maxReceived",MT,this),ie(this,"_size",zT,this),ie(this,"_saturation",LT,this),this._resource=null}var t=e.prototype;return t.setPlaneFromNode=function(e){e.getWorldRotation(dA),this.normal=Di.transformQuat(mA,_A,dA),e.getWorldPosition(mA),this.distance=Di.dot(this._normal,mA)},t.activate=function(e){this.pcf=Math.min(this._pcf,eg.SOFT_2X),this._resource=e,this._resource.initialize(this),this._resource.activate()},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}},{key:"type",get:function(){return this._type},set:function(e){this._type=e,this._resource&&(this._resource.type=e)}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){this._shadowColor.set(e),this._resource&&(this._resource.shadowColor=e)}},{key:"normal",get:function(){return this._normal},set:function(e){Di.copy(this._normal,e),this._resource&&(this._resource.normal=e)}},{key:"distance",get:function(){return this._distance},set:function(e){this._distance=e,this._resource&&(this._resource.distance=e)}},{key:"saturation",get:function(){return this._saturation},set:function(e){e>1?(this._saturation=e/e,this._resource&&(this._resource.saturation=e/e)):(this._saturation=e,this._resource&&(this._resource.saturation=e))}},{key:"pcf",get:function(){return this._pcf},set:function(e){this._pcf=e,this._resource&&(this._resource.pcf=e)}},{key:"maxReceived",get:function(){return this._maxReceived},set:function(e){this._maxReceived=e,this._resource&&(this._resource.maxReceived=e)}},{key:"bias",get:function(){return this._bias},set:function(e){this._bias=e,this._resource&&(this._resource.bias=e)}},{key:"normalBias",get:function(){return this._normalBias},set:function(e){this._normalBias=e,this._resource&&(this._resource.normalBias=e)}},{key:"shadowMapSize",get:function(){return this._size.x},set:function(e){this._size.set(e,e),this._resource&&(this._resource.size.set(e,e),this._resource.shadowMapDirty=!0)}},{key:"size",get:function(){return this._size}},{key:"fixedArea",get:function(){return this._fixedArea},set:function(e){this._fixedArea=e,this._resource&&(this._resource.fixedArea=e)}},{key:"near",get:function(){return this._near},set:function(e){this._near=e,this._resource&&(this._resource.near=e)}},{key:"far",get:function(){return this._far},set:function(e){this._far=Math.min(e,ng.MAX_FAR),this._resource&&(this._resource.far=this._far)}},{key:"invisibleOcclusionRange",get:function(){return this._invisibleOcclusionRange},set:function(e){this._invisibleOcclusionRange=Math.min(e,ng.MAX_FAR),this._resource&&(this._resource.invisibleOcclusionRange=this._invisibleOcclusionRange)}},{key:"shadowDistance",get:function(){return this._shadowDistance},set:function(e){this._shadowDistance=Math.min(e,ng.MAX_FAR),this._resource&&(this._resource.shadowDistance=this._shadowDistance)}},{key:"orthoSize",get:function(){return this._orthoSize},set:function(e){this._orthoSize=e,this._resource&&(this._resource.orthoSize=e)}}]),e}(),xT=oe((gT=FT).prototype,"_type",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $v.Planar}}),yT=oe(gT.prototype,"_enabled",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),CT=oe(gT.prototype,"_normal",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(0,1,0)}}),ST=oe(gT.prototype,"_distance",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ET=oe(gT.prototype,"_shadowColor",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Ri(0,0,0,76)}}),TT=oe(gT.prototype,"_firstSetCSM",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),AT=oe(gT.prototype,"_fixedArea",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),IT=oe(gT.prototype,"_pcf",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return eg.HARD}}),bT=oe(gT.prototype,"_bias",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e-5}}),PT=oe(gT.prototype,"_normalBias",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),wT=oe(gT.prototype,"_near",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),RT=oe(gT.prototype,"_far",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),NT=oe(gT.prototype,"_shadowDistance",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),DT=oe(gT.prototype,"_invisibleOcclusionRange",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 200}}),OT=oe(gT.prototype,"_orthoSize",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),MT=oe(gT.prototype,"_maxReceived",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),zT=oe(gT.prototype,"_size",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Ji(512,512)}}),LT=oe(gT.prototype,"_saturation",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.75}}),oe(gT.prototype,"enabled",[Rl,AE],Object.getOwnPropertyDescriptor(gT.prototype,"enabled"),gT.prototype),oe(gT.prototype,"type",[Rl,IE],Object.getOwnPropertyDescriptor(gT.prototype,"type"),gT.prototype),oe(gT.prototype,"shadowColor",[bE],Object.getOwnPropertyDescriptor(gT.prototype,"shadowColor"),gT.prototype),oe(gT.prototype,"normal",[PE,wE],Object.getOwnPropertyDescriptor(gT.prototype,"normal"),gT.prototype),oe(gT.prototype,"distance",[RE,NE,DE],Object.getOwnPropertyDescriptor(gT.prototype,"distance"),gT.prototype),oe(gT.prototype,"saturation",[Rl,OE,Ul,ME,zE,LE],Object.getOwnPropertyDescriptor(gT.prototype,"saturation"),gT.prototype),oe(gT.prototype,"pcf",[FE,UE,BE],Object.getOwnPropertyDescriptor(gT.prototype,"pcf"),gT.prototype),oe(gT.prototype,"maxReceived",[GE,kE],Object.getOwnPropertyDescriptor(gT.prototype,"maxReceived"),gT.prototype),oe(gT.prototype,"bias",[HE,jE,VE],Object.getOwnPropertyDescriptor(gT.prototype,"bias"),gT.prototype),oe(gT.prototype,"normalBias",[qE,WE,YE],Object.getOwnPropertyDescriptor(gT.prototype,"normalBias"),gT.prototype),oe(gT.prototype,"shadowMapSize",[XE,KE,QE],Object.getOwnPropertyDescriptor(gT.prototype,"shadowMapSize"),gT.prototype),oe(gT.prototype,"fixedArea",[JE,ZE,$E],Object.getOwnPropertyDescriptor(gT.prototype,"fixedArea"),gT.prototype),oe(gT.prototype,"near",[eT,tT,nT],Object.getOwnPropertyDescriptor(gT.prototype,"near"),gT.prototype),oe(gT.prototype,"far",[iT,oT,aT],Object.getOwnPropertyDescriptor(gT.prototype,"far"),gT.prototype),oe(gT.prototype,"invisibleOcclusionRange",[Rl,rT,Ul,cT,sT,lT],Object.getOwnPropertyDescriptor(gT.prototype,"invisibleOcclusionRange"),gT.prototype),oe(gT.prototype,"shadowDistance",[Rl,uT,Ul,fT,_T,mT],Object.getOwnPropertyDescriptor(gT.prototype,"shadowDistance"),gT.prototype),oe(gT.prototype,"orthoSize",[pT,hT,dT],Object.getOwnPropertyDescriptor(gT.prototype,"orthoSize"),gT.prototype),vT=gT))||vT)||vT);s.ShadowsInfo=CA;var SA=new Di(-1024,-1024,-1024),EA=new Di(1024,1024,1024),TA=(UT=ml("cc.OctreeInfo"),BT=wl(),GT=Ml(),kT=Ml(),HT=Ol(),jT=Ml(),VT=Ol(),qT=zl(),WT=ql(Wt),YT=Ml(),UT(XT=BT((eA=function(){function e(){ie(this,"_enabled",QT,this),ie(this,"_minPos",JT,this),ie(this,"_maxPos",ZT,this),ie(this,"_depth",$T,this),this._resource=null}return e.prototype.activate=function(e){this._resource=e,this._resource.initialize(this)},W(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e))}},{key:"minPos",get:function(){return this._minPos},set:function(e){this._minPos=e,this._resource&&(this._resource.minPos=e)}},{key:"maxPos",get:function(){return this._maxPos},set:function(e){this._maxPos=e,this._resource&&(this._resource.maxPos=e)}},{key:"depth",get:function(){return this._depth},set:function(e){this._depth=e,this._resource&&(this._resource.depth=e)}}]),e}(),QT=oe((KT=eA).prototype,"_enabled",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),JT=oe(KT.prototype,"_minPos",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(SA)}}),ZT=oe(KT.prototype,"_maxPos",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(EA)}}),$T=oe(KT.prototype,"_depth",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 8}}),oe(KT.prototype,"enabled",[Rl,GT],Object.getOwnPropertyDescriptor(KT.prototype,"enabled"),KT.prototype),oe(KT.prototype,"minPos",[Rl,kT,HT],Object.getOwnPropertyDescriptor(KT.prototype,"minPos"),KT.prototype),oe(KT.prototype,"maxPos",[Rl,jT,VT],Object.getOwnPropertyDescriptor(KT.prototype,"maxPos"),KT.prototype),oe(KT.prototype,"depth",[Rl,qT,WT,YT],Object.getOwnPropertyDescriptor(KT.prototype,"depth"),KT.prototype),XT=KT))||XT)||XT),AA=(tA=ml("cc.SceneGlobals"),nA=ql(xA),tA((uA=function(){function e(){ie(this,"ambient",aA,this),ie(this,"shadows",rA,this),ie(this,"_skybox",cA,this),ie(this,"fog",sA,this),ie(this,"octree",lA,this)}return e.prototype.activate=function(){var e=s.director.root.pipeline.pipelineSceneData;this.skybox.activate(e.skybox),this.ambient.activate(e.ambient),this.shadows.activate(e.shadows),this.fog.activate(e.fog),this.octree.activate(e.octree)},W(e,[{key:"skybox",get:function(){return this._skybox},set:function(e){this._skybox=e}}]),e}(),aA=oe((oA=uA).prototype,"ambient",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gA}}),rA=oe(oA.prototype,"shadows",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new CA}}),cA=oe(oA.prototype,"_skybox",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new xA}}),sA=oe(oA.prototype,"fog",[Rl,xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new yA}}),oe(oA.prototype,"skybox",[Rl,nA],Object.getOwnPropertyDescriptor(oA.prototype,"skybox"),oA.prototype),lA=oe(oA.prototype,"octree",[Rl,xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new TA}}),iA=oA))||iA);s.SceneGlobals=AA;var IA=e("e0",function(){function e(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}var t=e.prototype;return t.unuse=function(){this.type=e.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=e.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1},t.reuse=function(e,t){this.type=e,this.bubbles=t||!1},t.isStopped=function(){return this.propagationStopped||this.propagationImmediateStopped},t.getCurrentTarget=function(){return this.currentTarget},t.getType=function(){return this.type},e}());IA.NO_TYPE="no_type",IA.TOUCH="touch",IA.MOUSE="mouse",IA.KEYBOARD="keyboard",IA.ACCELERATION="acceleration",IA.NONE=0,IA.CAPTURING_PHASE=1,IA.AT_TARGET=2,IA.BUBBLING_PHASE=3,s.Event=IA;var bA=e("e1",function(e){function t(t,n){var i;return(i=e.call(this,yC.DEVICEMOTION,n)||this).acc=void 0,i.acc=t,i}return X(t,e),t}(IA));IA.EventAcceleration=bA;var PA=e("e2",function(e){function t(t,n,i){var o;return"boolean"==typeof n&&(n=n?yC.KEY_DOWN:yC.KEY_UP),(o=e.call(this,n,i)||this).keyCode=void 0,o.rawEvent=void 0,o._isPressed=void 0,o._isPressed=n!==yC.KEY_UP,"number"==typeof t?o.keyCode=t:(o.keyCode=t.keyCode,o.rawEvent=t),o}return X(t,e),W(t,[{key:"isPressed",get:function(){return this._isPressed}}]),t}(IA));IA.EventKeyboard=PA;var wA=e("e3",function(e){function t(n,i,o){var a;return(a=e.call(this,n,i)||this).movementX=0,a.movementY=0,a.preventSwallow=!1,a._eventType=void 0,a._button=t.BUTTON_MISSING,a._x=0,a._y=0,a._prevX=0,a._prevY=0,a._scrollX=0,a._scrollY=0,a._eventType=n,o&&(a._prevX=o.x,a._prevY=o.y),a}X(t,e);var n=t.prototype;return n.setScrollData=function(e,t){this._scrollX=e,this._scrollY=t},n.getScrollX=function(){return this._scrollX},n.getScrollY=function(){return this._scrollY},n.setLocation=function(e,t){this._x=e,this._y=t},n.getLocation=function(e){return e||(e=new Ji),Ji.set(e,this._x,this._y),e},n.getLocationInView=function(e){return e||(e=new Ji),Ji.set(e,this._x,s.view._designResolutionSize.height-this._y),e},n.getUILocation=function(e){return e||(e=new Ji),Ji.set(e,this._x,this._y),s.view._convertToUISpace(e),e},n.getPreviousLocation=function(e){return e||(e=new Ji),Ji.set(e,this._prevX,this._prevY),e},n.getUIPreviousLocation=function(e){return e||(e=new Ji),Ji.set(e,this._prevX,this._prevY),s.view._convertToUISpace(e),e},n.getDelta=function(e){return e||(e=new Ji),Ji.set(e,this._x-this._prevX,this._y-this._prevY),e},n.getDeltaX=function(){return this._x-this._prevX},n.getDeltaY=function(){return this._y-this._prevY},n.getUIDelta=function(e){return e||(e=new Ji),Ji.set(e,(this._x-this._prevX)/s.view.getScaleX(),(this._y-this._prevY)/s.view.getScaleY()),e},n.getUIDeltaX=function(){return(this._x-this._prevX)/s.view.getScaleX()},n.getUIDeltaY=function(){return(this._y-this._prevY)/s.view.getScaleY()},n.setButton=function(e){this._button=e},n.getButton=function(){return this._button},n.getLocationX=function(){return this._x},n.getLocationY=function(){return this._y},n.getUILocationX=function(){var e=s.view.getViewportRect();return(this._x-e.x)/s.view.getScaleX()},n.getUILocationY=function(){var e=s.view.getViewportRect();return(this._y-e.y)/s.view.getScaleY()},W(t,[{key:"eventType",get:function(){return this._eventType}}]),t}(IA));wA.BUTTON_MISSING=-1,wA.BUTTON_LEFT=0,wA.BUTTON_RIGHT=2,wA.BUTTON_MIDDLE=1,wA.BUTTON_4=3,wA.BUTTON_5=4,wA.BUTTON_6=5,wA.BUTTON_7=6,wA.BUTTON_8=7,IA.EventMouse=wA;var RA=new Ji,NA=e("e4",function(e){function t(t,n,i,o){var a;return void 0===o&&(o=[]),(a=e.call(this,i,n)||this).touch=null,a.simulate=!1,a.preventSwallow=!1,a._eventCode=void 0,a._touches=void 0,a._allTouches=void 0,a._eventCode=i,a._touches=t||[],a._allTouches=o,a}X(t,e);var n=t.prototype;return n.getEventCode=function(){return this._eventCode},n.getTouches=function(){return this._touches},n.getAllTouches=function(){return this._allTouches},n.setLocation=function(e,t){this.touch&&this.touch.setTouchInfo(this.touch.getID(),e,t)},n.getLocation=function(e){return this.touch?this.touch.getLocation(e):new Ji},n.getUILocation=function(e){return this.touch?this.touch.getUILocation(e):new Ji},n.getLocationInView=function(e){return this.touch?this.touch.getLocationInView(e):new Ji},n.getPreviousLocation=function(e){return this.touch?this.touch.getPreviousLocation(e):new Ji},n.getStartLocation=function(e){return this.touch?this.touch.getStartLocation(e):new Ji},n.getUIStartLocation=function(e){return this.touch?this.touch.getUIStartLocation(e):new Ji},n.getID=function(){return this.touch?this.touch.getID():null},n.getDelta=function(e){return this.touch?this.touch.getDelta(e):new Ji},n.getUIDelta=function(e){return this.touch?this.touch.getUIDelta(e):new Ji},n.getDeltaX=function(){return this.touch?this.touch.getDelta(RA).x:0},n.getDeltaY=function(){return this.touch?this.touch.getDelta(RA).y:0},n.getLocationX=function(){return this.touch?this.touch.getLocationX():0},n.getLocationY=function(){return this.touch?this.touch.getLocationY():0},t}(IA));NA.MAX_TOUCHES=5,IA.EventTouch=NA;var DA,OA=e("e5",(function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=void 0,this.y=void 0,this.z=void 0,this.timestamp=void 0,this.x=e,this.y=t,this.z=n,this.timestamp=i}));!function(e){e[e.NONE=0]="NONE",e[e.BACKSPACE=8]="BACKSPACE",e[e.TAB=9]="TAB",e[e.ENTER=13]="ENTER",e[e.SHIFT_LEFT=16]="SHIFT_LEFT",e[e.CTRL_LEFT=17]="CTRL_LEFT",e[e.ALT_LEFT=18]="ALT_LEFT",e[e.PAUSE=19]="PAUSE",e[e.CAPS_LOCK=20]="CAPS_LOCK",e[e.ESCAPE=27]="ESCAPE",e[e.SPACE=32]="SPACE",e[e.PAGE_UP=33]="PAGE_UP",e[e.PAGE_DOWN=34]="PAGE_DOWN",e[e.END=35]="END",e[e.HOME=36]="HOME",e[e.ARROW_LEFT=37]="ARROW_LEFT",e[e.ARROW_UP=38]="ARROW_UP",e[e.ARROW_RIGHT=39]="ARROW_RIGHT",e[e.ARROW_DOWN=40]="ARROW_DOWN",e[e.INSERT=45]="INSERT",e[e.DELETE=46]="DELETE",e[e.DIGIT_0=48]="DIGIT_0",e[e.DIGIT_1=49]="DIGIT_1",e[e.DIGIT_2=50]="DIGIT_2",e[e.DIGIT_3=51]="DIGIT_3",e[e.DIGIT_4=52]="DIGIT_4",e[e.DIGIT_5=53]="DIGIT_5",e[e.DIGIT_6=54]="DIGIT_6",e[e.DIGIT_7=55]="DIGIT_7",e[e.DIGIT_8=56]="DIGIT_8",e[e.DIGIT_9=57]="DIGIT_9",e[e.KEY_A=65]="KEY_A",e[e.KEY_B=66]="KEY_B",e[e.KEY_C=67]="KEY_C",e[e.KEY_D=68]="KEY_D",e[e.KEY_E=69]="KEY_E",e[e.KEY_F=70]="KEY_F",e[e.KEY_G=71]="KEY_G",e[e.KEY_H=72]="KEY_H",e[e.KEY_I=73]="KEY_I",e[e.KEY_J=74]="KEY_J",e[e.KEY_K=75]="KEY_K",e[e.KEY_L=76]="KEY_L",e[e.KEY_M=77]="KEY_M",e[e.KEY_N=78]="KEY_N",e[e.KEY_O=79]="KEY_O",e[e.KEY_P=80]="KEY_P",e[e.KEY_Q=81]="KEY_Q",e[e.KEY_R=82]="KEY_R",e[e.KEY_S=83]="KEY_S",e[e.KEY_T=84]="KEY_T",e[e.KEY_U=85]="KEY_U",e[e.KEY_V=86]="KEY_V",e[e.KEY_W=87]="KEY_W",e[e.KEY_X=88]="KEY_X",e[e.KEY_Y=89]="KEY_Y",e[e.KEY_Z=90]="KEY_Z",e[e.NUM_0=96]="NUM_0",e[e.NUM_1=97]="NUM_1",e[e.NUM_2=98]="NUM_2",e[e.NUM_3=99]="NUM_3",e[e.NUM_4=100]="NUM_4",e[e.NUM_5=101]="NUM_5",e[e.NUM_6=102]="NUM_6",e[e.NUM_7=103]="NUM_7",e[e.NUM_8=104]="NUM_8",e[e.NUM_9=105]="NUM_9",e[e.NUM_MULTIPLY=106]="NUM_MULTIPLY",e[e.NUM_PLUS=107]="NUM_PLUS",e[e.NUM_SUBTRACT=109]="NUM_SUBTRACT",e[e.NUM_DECIMAL=110]="NUM_DECIMAL",e[e.NUM_DIVIDE=111]="NUM_DIVIDE",e[e.F1=112]="F1",e[e.F2=113]="F2",e[e.F3=114]="F3",e[e.F4=115]="F4",e[e.F5=116]="F5",e[e.F6=117]="F6",e[e.F7=118]="F7",e[e.F8=119]="F8",e[e.F9=120]="F9",e[e.F10=121]="F10",e[e.F11=122]="F11",e[e.F12=123]="F12",e[e.NUM_LOCK=144]="NUM_LOCK",e[e.SCROLL_LOCK=145]="SCROLL_LOCK",e[e.SEMICOLON=186]="SEMICOLON",e[e.EQUAL=187]="EQUAL",e[e.COMMA=188]="COMMA",e[e.DASH=189]="DASH",e[e.PERIOD=190]="PERIOD",e[e.SLASH=191]="SLASH",e[e.BACK_QUOTE=192]="BACK_QUOTE",e[e.BRACKET_LEFT=219]="BRACKET_LEFT",e[e.BACKSLASH=220]="BACKSLASH",e[e.BRACKET_RIGHT=221]="BRACKET_RIGHT",e[e.QUOTE=222]="QUOTE",e[e.SHIFT_RIGHT=2e3]="SHIFT_RIGHT",e[e.CTRL_RIGHT=2001]="CTRL_RIGHT",e[e.ALT_RIGHT=2002]="ALT_RIGHT",e[e.NUM_ENTER=2003]="NUM_ENTER"}(DA||(DA=e("e6",{})));var MA=new Ji,zA=e("e7",function(){function e(e,t,n){void 0===n&&(n=0),this._point=new Ji,this._prevPoint=new Ji,this._lastModified=0,this._id=0,this._startPoint=new Ji,this._startPointCaptured=!1,this.setTouchInfo(n,e,t)}var t=e.prototype;return t.getLocation=function(e){return e||(e=new Ji),e.set(this._point.x,this._point.y),e},t.getLocationX=function(){return this._point.x},t.getLocationY=function(){return this._point.y},t.getUILocation=function(e){return e||(e=new Ji),e.set(this._point.x,this._point.y),s.view._convertToUISpace(e),e},t.getUILocationX=function(){var e=s.view.getViewportRect();return(this._point.x-e.x)/s.view.getScaleX()},t.getUILocationY=function(){var e=s.view.getViewportRect();return(this._point.y-e.y)/s.view.getScaleY()},t.getPreviousLocation=function(e){return e||(e=new Ji),e.set(this._prevPoint.x,this._prevPoint.y),e},t.getUIPreviousLocation=function(e){return e||(e=new Ji),e.set(this._prevPoint.x,this._prevPoint.y),s.view._convertToUISpace(e),e},t.getStartLocation=function(e){return e||(e=new Ji),e.set(this._startPoint.x,this._startPoint.y),e},t.getUIStartLocation=function(e){return e||(e=new Ji),e.set(this._startPoint.x,this._startPoint.y),s.view._convertToUISpace(e),e},t.getDelta=function(e){return e||(e=new Ji),e.set(this._point),e.subtract(this._prevPoint),e},t.getUIDelta=function(e){return e||(e=new Ji),MA.set(this._point),MA.subtract(this._prevPoint),e.set(s.view.getScaleX(),s.view.getScaleY()),Ji.divide(e,MA,e),e},t.getLocationInView=function(e){return e||(e=new Ji),e.set(this._point.x,s.view._designResolutionSize.height-this._point.y),e},t.getPreviousLocationInView=function(e){return e||(e=new Ji),e.set(this._prevPoint.x,s.view._designResolutionSize.height-this._prevPoint.y),e},t.getStartLocationInView=function(e){return e||(e=new Ji),e.set(this._startPoint.x,s.view._designResolutionSize.height-this._startPoint.y),e},t.getID=function(){return this._id},t.setTouchInfo=function(e,t,n){void 0===e&&(e=0),this._prevPoint=this._point,this._point=new Ji(t||0,n||0),this._id=e,this._startPointCaptured||(this._startPoint=new Ji(this._point),this._startPointCaptured=!0)},t.setPoint=function(e,t){"object"==typeof e?(this._point.x=e.x,this._point.y=e.y):(this._point.x=e||0,this._point.y=t||0),this._lastModified=s.game.frameStartTime},t.setPrevPoint=function(e,t){this._prevPoint="object"==typeof e?new Ji(e.x,e.y):new Ji(e||0,t||0),this._lastModified=s.game.frameStartTime},W(e,[{key:"lastModified",get:function(){return this._lastModified}}]),e}());s.Touch=zA;var LA=function(){function e(){this._isStarted=!1,this._accelMode="normal",this._eventTarget=new Un,this._didAccelerateFunc=void 0,this._didAccelerateFunc=this._didAccelerate.bind(this)}var t=e.prototype;return t._registerEvent=function(){ce.onAccelerometerChange(this._didAccelerateFunc)},t._unregisterEvent=function(){ce.offAccelerometerChange(this._didAccelerateFunc)},t._didAccelerate=function(e){var t=performance.now(),n=new OA(e.x,e.y,e.z,t),i=new bA(n);this._eventTarget.emit(CC.DEVICEMOTION,i)},t.start=function(){var e=this;this._registerEvent(),ce.startAccelerometer({interval:this._accelMode,success:function(){e._isStarted=!0}})},t.stop=function(){var e=this;ce.stopAccelerometer({success:function(){e._isStarted=!1},fail:function(){console.error("failed to stop accelerometer")}}),this._unregisterEvent()},t.setInterval=function(e){this._accelMode=e>=200?"normal":e>=60?"ui":"game",this._isStarted&&(this.stop(),this.start())},t.on=function(e,t,n){this._eventTarget.on(e,t,n)},e}(),FA={Backspace:DA.BACKSPACE,Tab:DA.TAB,Enter:DA.ENTER,ShiftLeft:DA.SHIFT_LEFT,ControlLeft:DA.CTRL_LEFT,AltLeft:DA.ALT_LEFT,ShiftRight:DA.SHIFT_RIGHT,ControlRight:DA.CTRL_RIGHT,AltRight:DA.ALT_RIGHT,Pause:DA.PAUSE,CapsLock:DA.CAPS_LOCK,Escape:DA.ESCAPE,Space:DA.SPACE,PageUp:DA.PAGE_UP,PageDown:DA.PAGE_DOWN,End:DA.END,Home:DA.HOME,ArrowLeft:DA.ARROW_LEFT,ArrowUp:DA.ARROW_UP,ArrowRight:DA.ARROW_RIGHT,ArrowDown:DA.ARROW_DOWN,Insert:DA.INSERT,Delete:DA.DELETE,Digit0:DA.DIGIT_0,Digit1:DA.DIGIT_1,Digit2:DA.DIGIT_2,Digit3:DA.DIGIT_3,Digit4:DA.DIGIT_4,Digit5:DA.DIGIT_5,Digit6:DA.DIGIT_6,Digit7:DA.DIGIT_7,Digit8:DA.DIGIT_8,Digit9:DA.DIGIT_9,KeyA:DA.KEY_A,KeyB:DA.KEY_B,KeyC:DA.KEY_C,KeyD:DA.KEY_D,KeyE:DA.KEY_E,KeyF:DA.KEY_F,KeyG:DA.KEY_G,KeyH:DA.KEY_H,KeyI:DA.KEY_I,KeyJ:DA.KEY_J,KeyK:DA.KEY_K,KeyL:DA.KEY_L,KeyM:DA.KEY_M,KeyN:DA.KEY_N,KeyO:DA.KEY_O,KeyP:DA.KEY_P,KeyQ:DA.KEY_Q,KeyR:DA.KEY_R,KeyS:DA.KEY_S,KeyT:DA.KEY_T,KeyU:DA.KEY_U,KeyV:DA.KEY_V,KeyW:DA.KEY_W,KeyX:DA.KEY_X,KeyY:DA.KEY_Y,KeyZ:DA.KEY_Z,Numpad0:DA.NUM_0,Numpad1:DA.NUM_1,Numpad2:DA.NUM_2,Numpad3:DA.NUM_3,Numpad4:DA.NUM_4,Numpad5:DA.NUM_5,Numpad6:DA.NUM_6,Numpad7:DA.NUM_7,Numpad8:DA.NUM_8,Numpad9:DA.NUM_9,NumpadMultiply:DA.NUM_MULTIPLY,NumpadAdd:DA.NUM_PLUS,NumpadSubtract:DA.NUM_SUBTRACT,NumpadDecimal:DA.NUM_DECIMAL,NumpadDivide:DA.NUM_DIVIDE,NumpadEnter:DA.NUM_ENTER,F1:DA.F1,F2:DA.F2,F3:DA.F3,F4:DA.F4,F5:DA.F5,F6:DA.F6,F7:DA.F7,F8:DA.F8,F9:DA.F9,F10:DA.F10,F11:DA.F11,F12:DA.F12,NumLock:DA.NUM_LOCK,ScrollLock:DA.SCROLL_LOCK,Semicolon:DA.SEMICOLON,Equal:DA.EQUAL,Comma:DA.COMMA,Minus:DA.DASH,Period:DA.PERIOD,Slash:DA.SLASH,Backquote:DA.BACK_QUOTE,BracketLeft:DA.BRACKET_LEFT,Backslash:DA.BACKSLASH,BracketRight:DA.BRACKET_RIGHT,Quote:DA.QUOTE};function UA(e){return FA[e]||DA.NONE}var BA,GA=function(){function e(){this._eventTarget=new Un,this._keyStateMap={},Gn.hasFeature(Ln.EVENT_KEYBOARD)&&this._registerEvent()}var t=e.prototype;return t._registerEvent=function(){var e,t,n,i,o=this;null===(e=ce.wx)||void 0===e||null===(t=e.onKeyDown)||void 0===t||t.call(e,(function(e){var t=UA(e.code);if(o._keyStateMap[t]){var n=o._getInputEvent(e,CC.KEY_PRESSING);o._eventTarget.emit(CC.KEY_PRESSING,n)}else{var i=o._getInputEvent(e,CC.KEY_DOWN);o._eventTarget.emit(CC.KEY_DOWN,i)}o._keyStateMap[t]=!0})),null===(n=ce.wx)||void 0===n||null===(i=n.onKeyUp)||void 0===i||i.call(n,(function(e){var t=UA(e.code),n=o._getInputEvent(e,CC.KEY_UP);o._keyStateMap[t]=!1,o._eventTarget.emit(CC.KEY_UP,n)}))},t._getInputEvent=function(e,t){var n=UA(e.code);return new PA(n,t)},t.on=function(e,t,n){this._eventTarget.on(e,t,n)},e}(),kA=function(){function e(){this._eventTarget=new Un,this._isPressed=!1,this._preMousePos=new Ji,Gn.hasFeature(Ln.EVENT_MOUSE)&&this._registerEvent()}var t=e.prototype;return t._getLocation=function(e){var t=uf.windowSize,n=uf.devicePixelRatio,i=e.x*n,o=t.height-e.y*n;return new Ji(i,o)},t._registerEvent=function(){var e,t,n,i,o,a,r,c;null===(e=ce.wx)||void 0===e||null===(t=e.onMouseDown)||void 0===t||t.call(e,this._createCallback(CC.MOUSE_DOWN)),null===(n=ce.wx)||void 0===n||null===(i=n.onMouseMove)||void 0===i||i.call(n,this._createCallback(CC.MOUSE_MOVE)),null===(o=ce.wx)||void 0===o||null===(a=o.onMouseUp)||void 0===a||a.call(o,this._createCallback(CC.MOUSE_UP)),null===(r=ce.wx)||void 0===r||null===(c=r.onWheel)||void 0===c||c.call(r,this._handleMouseWheel.bind(this))},t._createCallback=function(e){var t=this;return function(n){var i=t._getLocation(n),o=n.button;switch(e){case CC.MOUSE_DOWN:t._isPressed=!0;break;case CC.MOUSE_UP:t._isPressed=!1;break;case CC.MOUSE_MOVE:t._isPressed||(o=wA.BUTTON_MISSING)}var a=new wA(e,!1,t._preMousePos);a.setLocation(i.x,i.y),a.setButton(o),a.movementX=i.x-t._preMousePos.x,a.movementY=t._preMousePos.y-i.y,t._preMousePos.set(i.x,i.y),t._eventTarget.emit(e,a)}},t._handleMouseWheel=function(e){var t=CC.MOUSE_WHEEL,n=this._getLocation(e),i=e.button,o=new wA(t,!1,this._preMousePos);o.setLocation(n.x,n.y),o.setButton(i),o.movementX=n.x-this._preMousePos.x,o.movementY=this._preMousePos.y-n.y,o.setScrollData(e.deltaX,e.deltaY),this._preMousePos.set(n.x,n.y),this._eventTarget.emit(CC.MOUSE_WHEEL,o)},t.on=function(e,t,n){this._eventTarget.on(e,t,n)},e}(),HA=new Ji,jA=new(function(){function e(){this._touchMap={},this._touches=void 0,this._maxTouches=8,this._touches=new Array(this._maxTouches)}var t=e.prototype;return t._cloneTouch=function(e){var t=e.getID();e.getStartLocation(HA);var n=new zA(HA.x,HA.y,t);return e.getLocation(HA),n.setPoint(HA.x,HA.y),e.getPreviousLocation(HA),n.setPrevPoint(HA),n},t._createTouch=function(e,t,n){if(e in this._touchMap)console.log("Cannot create the same touch object.");else{var i=this._getAvailableTouchIndex(e);if(-1!==i){var o=new zA(t,n,e);return this._touches[i]=o,this._touchMap[e]=i,this._updateTouch(o,t,n),this._cloneTouch(o)}console.log("The touches is more than MAX_TOUCHES.")}},t.releaseTouch=function(e){if(e in this._touchMap){var t=this._touchMap[e];this._touches[t]=void 0,delete this._touchMap[e]}},t.getTouch=function(e,t,n){var i=this._touchMap[e],o=this._touches[i];return o?this._updateTouch(o,t,n):o=this._createTouch(e,t,n),o?this._cloneTouch(o):void 0},t.getAllTouches=function(){var e=this,t=[];return this._touches.forEach((function(n){if(n){var i=e._cloneTouch(n);t.push(i)}})),t},t._updateTouch=function(e,t,n){e.getLocation(HA),e.setPrevPoint(HA),e.setPoint(t,n)},t._getAvailableTouchIndex=function(e){var t=this._touchMap[e];if(void 0!==t)return t;for(var n=0;n<this._maxTouches;n++)if(!this._touches[n])return n;for(var i=performance.now(),o=Tt.TOUCH_TIMEOUT,a=0;a<this._maxTouches;a++){var r=this._touches[a];if(i-r.lastModified>o)return console.log("The touches is more than MAX_TOUCHES, release touch id "+r.getID()+"."),this.releaseTouch(r.getID()),a}return-1},e}()),VA=function(){function e(){this._eventTarget=new Un,this._registerEvent()}var t=e.prototype;return t._registerEvent=function(){ce.onTouchStart(this._createCallback(CC.TOUCH_START)),ce.onTouchMove(this._createCallback(CC.TOUCH_MOVE)),ce.onTouchEnd(this._createCallback(CC.TOUCH_END)),ce.onTouchCancel(this._createCallback(CC.TOUCH_CANCEL))},t._createCallback=function(e){var t=this;return function(n){for(var i=[],o=uf.windowSize,a=n.changedTouches.length,r=0;r<a;++r){var c=n.changedTouches[r],s=c.identifier;if(null!==s){var l=t._getLocation(c,o),u=jA.getTouch(s,l.x,l.y);if(u&&(e!==CC.TOUCH_END&&e!==CC.TOUCH_CANCEL||jA.releaseTouch(s),i.push(u),!Tt.ENABLE_MULTI_TOUCH))break}}if(i.length>0){var f=new NA(i,!1,e,Tt.ENABLE_MULTI_TOUCH?jA.getAllTouches():i);t._eventTarget.emit(e,f)}}},t._getLocation=function(e,t){var n=uf.devicePixelRatio,i=e.clientX*n,o=t.height-e.clientY*n;return new Ji(i,o)},t.on=function(e,t,n){this._eventTarget.on(e,t,n)},e}(),qA=((BA={})[CC.MOUSE_DOWN]=CC.TOUCH_START,BA[CC.MOUSE_MOVE]=CC.TOUCH_MOVE,BA[CC.MOUSE_UP]=CC.TOUCH_END,BA),WA=e("e9",function(){function e(){this._dispatchImmediately=!0,this._eventTarget=new Un,this._touchInput=new VA,this._mouseInput=new kA,this._keyboardInput=new GA,this._accelerometerInput=new LA,this._eventTouchList=[],this._eventMouseList=[],this._eventKeyboardList=[],this._eventAccelerationList=[],this._needSimulateTouchMoveEvent=!1,this._registerEvent()}var t=e.prototype;return t._simulateEventTouch=function(e){var t=qA[e.type],n=jA.getTouch(0,e.getLocationX(),e.getLocationY());if(n){var i=[n],o=new NA(i,!1,t,i);t===CC.TOUCH_END&&jA.releaseTouch(0),this._dispatchOrPushEventTouch(o,this._eventTouchList)}},t._registerEvent=function(){var e=this;if(mf.hasFeature(mf.Feature.INPUT_TOUCH)){var t=this._eventTouchList;this._touchInput.on(CC.TOUCH_START,(function(n){e._dispatchOrPushEventTouch(n,t)})),this._touchInput.on(CC.TOUCH_MOVE,(function(n){e._dispatchOrPushEventTouch(n,t)})),this._touchInput.on(CC.TOUCH_END,(function(n){e._dispatchOrPushEventTouch(n,t)})),this._touchInput.on(CC.TOUCH_CANCEL,(function(n){e._dispatchOrPushEventTouch(n,t)}))}if(mf.hasFeature(mf.Feature.EVENT_MOUSE)){var n=this._eventMouseList;this._mouseInput.on(CC.MOUSE_DOWN,(function(t){e._needSimulateTouchMoveEvent=!0,e._simulateEventTouch(t),e._dispatchOrPushEvent(t,n)})),this._mouseInput.on(CC.MOUSE_MOVE,(function(t){e._needSimulateTouchMoveEvent&&e._simulateEventTouch(t),e._dispatchOrPushEvent(t,n)})),this._mouseInput.on(CC.MOUSE_UP,(function(t){e._needSimulateTouchMoveEvent=!1,e._simulateEventTouch(t),e._dispatchOrPushEvent(t,n)})),this._mouseInput.on(CC.MOUSE_WHEEL,(function(t){e._dispatchOrPushEvent(t,n)}))}if(mf.hasFeature(mf.Feature.EVENT_KEYBOARD)){var i=this._eventKeyboardList;this._keyboardInput.on(CC.KEY_DOWN,(function(t){e._dispatchOrPushEvent(t,i)})),this._keyboardInput.on(CC.KEY_PRESSING,(function(t){e._dispatchOrPushEvent(t,i)})),this._keyboardInput.on(CC.KEY_UP,(function(t){e._dispatchOrPushEvent(t,i)}))}if(mf.hasFeature(mf.Feature.EVENT_ACCELEROMETER)){var o=this._eventAccelerationList;this._accelerometerInput.on(CC.DEVICEMOTION,(function(t){e._dispatchOrPushEvent(t,o)}))}},t._clearEvents=function(){this._eventMouseList.length=0,this._eventTouchList.length=0,this._eventKeyboardList.length=0,this._eventAccelerationList.length=0},t._dispatchOrPushEvent=function(e,t){this._dispatchImmediately?this._eventTarget.emit(e.type,e):t.push(e)},t._dispatchOrPushEventTouch=function(e,t){if(this._dispatchImmediately)for(var n=e.getTouches(),i=n.length,o=0;o<i;++o)e.touch=n[o],e.propagationStopped=e.propagationImmediateStopped=!1,this._eventTarget.emit(e.type,e);else t.push(e)},t._frameDispatchEvents=function(){for(var e=this._eventMouseList,t=0,n=e.length;t<n;++t){var i=e[t];this._eventTarget.emit(i.type,i)}for(var o=this._eventTouchList,a=0,r=o.length;a<r;++a)for(var c=o[a],s=c.getTouches(),l=s.length,u=0;u<l;++u)c.touch=s[u],c.propagationStopped=c.propagationImmediateStopped=!1,this._eventTarget.emit(c.type,c);for(var f=this._eventKeyboardList,_=0,m=f.length;_<m;++_){var p=f[_];this._eventTarget.emit(p.type,p)}for(var h=this._eventAccelerationList,d=0,v=h.length;d<v;++d){var g=h[d];this._eventTarget.emit(g.type,g)}this._clearEvents()},t.on=function(e,t,n){return this._eventTarget.on(e,t,n),t},t.once=function(e,t,n){return this._eventTarget.once(e,t,n),t},t.off=function(e,t,n){this._eventTarget.off(e,t,n)},t.setAccelerometerEnabled=function(e){e?this._accelerometerInput.start():this._accelerometerInput.stop()},t.setAccelerometerInterval=function(e){this._accelerometerInput.setInterval(e)},e}());WA.EventType=CC;var YA,XA=e("e8",new WA),KA=e("ea",((YA={})[CC.TOUCH_START]="system-event-"+CC.TOUCH_START,YA[CC.TOUCH_MOVE]="system-event-"+CC.TOUCH_MOVE,YA[CC.TOUCH_END]="system-event-"+CC.TOUCH_END,YA[CC.TOUCH_CANCEL]="system-event-"+CC.TOUCH_CANCEL,YA[CC.MOUSE_DOWN]="system-event-"+CC.MOUSE_DOWN,YA[CC.MOUSE_MOVE]="system-event-"+CC.MOUSE_MOVE,YA[CC.MOUSE_UP]="system-event-"+CC.MOUSE_UP,YA)),QA=Object.values(CC),JA=e("eb",function(e){function t(){return e.apply(this,arguments)||this}X(t,e);var n=t.prototype;return n.setAccelerometerEnabled=function(e){XA.setAccelerometerEnabled(e)},n.setAccelerometerInterval=function(e){XA.setAccelerometerInterval(e)},n.on=function(t,n,i,o){var a=o?XA.once:XA.on;if(QA.includes(t)){var r=KA[t];r?a.call(XA,r,n,i):t===yC.KEY_DOWN?(a.call(XA,CC.KEY_DOWN,n,i),a.call(XA,CC.KEY_PRESSING,n,i,o)):a.call(XA,t,n,i)}else e.prototype.on.call(this,t,n,i,o);return n},n.off=function(t,n,i){if(QA.includes(t)){var o=KA[t];o?XA.off(o,n,i):t===yC.KEY_DOWN?(XA.off(CC.KEY_DOWN,n,i),XA.off(CC.KEY_PRESSING,n,i)):XA.off(t,n,i)}else e.prototype.off.call(this,t,n,i)},t}(Un));JA.EventType=yC,s.SystemEvent=JA;var ZA,$A=e("ec",new JA);s.systemEvent=$A,ri(yC,"Node.EventType",[{name:"POSITION_PART",newName:"TRANSFORM_CHANGED"},{name:"ROTATION_PART",newName:"TRANSFORM_CHANGED"},{name:"SCALE_PART",newName:"TRANSFORM_CHANGED"}]),ri(IA,"Event",[{name:"ACCELERATION",newName:"DEVICEMOTION",target:JA.EventType,targetName:"SystemEvent.EventType"}]),si(IA,"Event",[{name:"TOUCH",suggest:"please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead"},{name:"MOUSE",suggest:"please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead"},{name:"KEYBOARD",suggest:"please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead"}]),ri(wA,"EventMouse",["DOWN","UP","MOVE"].map((function(e){return{name:e,newName:"MOUSE_"+e,target:JA.EventType,targetName:"SystemEvent.EventType"}}))),ri(wA,"EventMouse",[{name:"SCROLL",newName:"MOUSE_WHEEL",target:JA.EventType,targetName:"SystemEvent.EventType"}]),si(wA.prototype,"EventMouse.prototype",[{name:"eventType",suggest:"please use EventMouse.prototype.type instead"}]),ri(NA,"EventTouch",[{name:"BEGAN",newName:"TOUCH_START",target:JA.EventType,targetName:"SystemEvent.EventType"}]),ri(NA,"EventTouch",[{name:"MOVED",newName:"TOUCH_MOVE",target:JA.EventType,targetName:"SystemEvent.EventType"}]),ri(NA,"EventTouch",[{name:"ENDED",newName:"TOUCH_END",target:JA.EventType,targetName:"SystemEvent.EventType"}]),ri(NA,"EventTouch",[{name:"CANCELLED",newName:"TOUCH_CANCEL",target:JA.EventType,targetName:"SystemEvent.EventType"}]),si(NA.prototype,"EventTouch.prototype",[{name:"getEventCode",suggest:"please use EventTouch.prototype.type instead"}]),ri(NA.prototype,"EventTouch.prototype",[{name:"getUILocationInView",newName:"getLocationInView",target:NA,targetName:"EventTouch"}]),si(Tt.KEY,"macro.KEY",["back","menu","0","1","2","3","4","5","6","7","8","9","0","*","+","-","/",";","=",",",".","[","]","dpadLeft","dpadRight","dpadUp","dpadDown","dpadCenter"].map((function(e){return{name:e}}))),si(Tt.KEY,"macro.KEY",[{name:"shift",suggest:"please use KeyCode.SHIFT_LEFT instead"}]),si(Tt.KEY,"macro.KEY",[{name:"ctrl",suggest:"please use KeyCode.CTRL_LEFT instead"}]),si(Tt.KEY,"macro.KEY",[{name:"alt",suggest:"please use KeyCode.ALT_LEFT instead"}]),si(Tt,"macro",[{name:"KEY",suggest:"please use KeyCode instead"}]),ri(tx.prototype,"BaseNode",[{name:"childrenCount",newName:"children.length",customGetter:function(){return this.children.length}}]),ri(Ny.prototype,"Node",[{name:"width",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.width},customSetter:function(e){this._uiProps.uiTransformComp.width=e}},{name:"height",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.height},customSetter:function(e){this._uiProps.uiTransformComp.height=e}},{name:"anchorX",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.anchorX},customSetter:function(e){this._uiProps.uiTransformComp.anchorX=e}},{name:"anchorY",targetName:"node.getComponent(UITransform)",customGetter:function(){return this._uiProps.uiTransformComp.anchorY},customSetter:function(e){this._uiProps.uiTransformComp.anchorY=e}},{name:"getAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction:function(e){return e||(e=new Ji),e.set(this._uiProps.uiTransformComp.anchorPoint),e}},{name:"setAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction:function(e,t){this._uiProps.uiTransformComp.setAnchorPoint(e,t)}},{name:"getContentSize",targetName:"node.getComponent(UITransform)",customFunction:function(e){return e||(e=new oo),e.set(this._uiProps.uiTransformComp.contentSize),e}},{name:"setContentSize",targetName:"node.getComponent(UITransform)",customFunction:function(e,t){"number"==typeof e?this._uiProps.uiTransformComp.setContentSize(e,t):this._uiProps.uiTransformComp.setContentSize(e)}}]),ci(AA.prototype,"SceneGlobals.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"}]),ci(Ny.prototype,"Node.prototype",[{name:"addLayer"},{name:"removeLayer"}]),ci(bp,"Layers",[{name:"All"},{name:"RaycastMask"},{name:"check"}]),ri(bp,"Layers",[{name:"Default",newName:"DEFAULT",target:bp.Enum,targetName:"Layers.Enum"},{name:"Always",newName:"ALWAYS",target:bp.Enum,targetName:"Layers.Enum"},{name:"IgnoreRaycast",newName:"IGNORE_RAYCAST",target:bp.Enum,targetName:"Layers.Enum"},{name:"Gizmos",newName:"GIZMOS",target:bp.Enum,targetName:"Layers.Enum"},{name:"Editor",newName:"EDITOR",target:bp.Enum,targetName:"Layers.Enum"},{name:"UI",newName:"UI_3D",target:bp.Enum,targetName:"Layers.Enum"},{name:"UI2D",newName:"UI_2D",target:bp.Enum,targetName:"Layers.Enum"},{name:"SceneGizmo",newName:"SCENE_GIZMO",target:bp.Enum,targetName:"Layers.Enum"},{name:"makeInclusiveMask",newName:"makeMaskInclude",target:bp,targetName:"Layers"},{name:"makeExclusiveMask",newName:"makeMaskExclude",target:bp,targetName:"Layers"}]),ci(bp.Enum,"Layers.Enum",[{name:"ALWAYS"}]),ci(bp.BitMask,"Layers.BitMask",[{name:"ALWAYS"}]);var eI,tI,nI,iI,oI=yn.Flags.HideInHierarchy,aI=yn.Flags.DontSave,rI=e("dM",ml("cc.PrivateNode")(ZA=function(e){function t(t){var n;return w(12003,(n=e.call(this,t)||this).name),n.hideFlags|=aI|oI,n}return X(t,e),t}(Ny))||ZA);ri(yC,"SystemEventType",["MOUSE_ENTER","MOUSE_LEAVE","TRANSFORM_CHANGED","SCENE_CHANGED_FOR_PERSISTS","SIZE_CHANGED","ANCHOR_CHANGED","COLOR_CHANGED","CHILD_ADDED","CHILD_REMOVED","PARENT_CHANGED","NODE_DESTROYED","LAYER_CHANGED","SIBLING_ORDER_CHANGED"].map((function(e){return{name:e,target:Ny.EventType,targetName:"Node.EventType"}}))),ri(Ny.EventType,"Node.EventType",[{name:"DEVICEMOTION",target:JA.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_DOWN",target:JA.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_UP",target:JA.EventType,targetName:"SystemEvent.EventType"}]),s.PrivateNode=rI;var cI=e("dI",ml("cc.Scene")((oe((tI=function(e){X(i,e);var t=i.prototype;function i(t){var n;return ie(n=e.call(this,t)||this,"autoReleaseAssets",nI,ee(n)),ie(n,"_globals",iI,ee(n)),n.dependAssets=null,n._renderScene=null,n._inited=void 0,n._prefabSyncedInLiveReload=!1,n._pos=Di.ZERO,n._rot=Bi.IDENTITY,n._scale=Di.ONE,n._mat=Yi.IDENTITY,n._dirtyFlags=0,n._lpos=Di.ZERO,n._lrot=Bi.IDENTITY,n._lscale=Di.ONE,n._activeInHierarchy=!1,s.director&&s.director.root&&(n._renderScene=s.director.root.createScene({})),n._inited=!s.game||!s.game._isCloning,n._init(),n}return t._updateScene=function(){this._scene=this},t._init=function(){},t.destroy=function(){var e=yn.prototype.destroy.call(this);if(e)for(var t=this._children,n=0;n<t.length;++n)t[n].active=!1;return this._renderScene&&s.director.root.destroyScene(this._renderScene),this._active=!1,this._activeInHierarchy=!1,e},t.addComponent=function(){throw new Error(H(3822))},t._onHierarchyChanged=function(){},t._onBatchCreated=function(t){e.prototype._onBatchCreated.call(this,t);for(var n=this._children.length,i=0;i<n;++i)this.children[i]._siblingIndex=i,this._children[i]._onBatchCreated(t)},t.getPosition=function(e){return Di.copy(e||new Di,Di.ZERO)},t.getRotation=function(e){return Bi.copy(e||new Bi,Bi.IDENTITY)},t.getScale=function(e){return Di.copy(e||new Di,Di.ONE)},t.getWorldPosition=function(e){return Di.copy(e||new Di,Di.ZERO)},t.getWorldRotation=function(e){return Bi.copy(e||new Bi,Bi.IDENTITY)},t.getWorldScale=function(e){return Di.copy(e||new Di,Di.ONE)},t.getWorldMatrix=function(e){return Yi.copy(e||new Yi,Yi.IDENTITY)},t.getWorldRS=function(e){return Yi.copy(e||new Yi,Yi.IDENTITY)},t.getWorldRT=function(e){return Yi.copy(e||new Yi,Yi.IDENTITY)},t.updateWorldTransform=function(){},t._instantiate=function(){},t._load=function(){this._inited||(Ky(this),Yy(this),this._onBatchCreated(n),this._inited=!0),this.walk(tx._setScene)},t._activate=function(e){e=!1!==e,s.director._nodeActivator.activateNode(this,e),this._globals.activate(),this._renderScene&&this._renderScene.activate()},W(i,[{key:"renderScene",get:function(){return this._renderScene}},{key:"globals",get:function(){return this._globals}},{key:"native",get:function(){return this._nativeObj}},{key:"position",get:function(){return Di.ZERO}},{key:"worldPosition",get:function(){return Di.ZERO}},{key:"rotation",get:function(){return Bi.IDENTITY}},{key:"worldRotation",get:function(){return Bi.IDENTITY}},{key:"scale",get:function(){return Di.ONE}},{key:"worldScale",get:function(){return Di.ONE}},{key:"eulerAngles",get:function(){return Di.ZERO}},{key:"worldMatrix",get:function(){return Yi.IDENTITY}}]),i}(tx)).prototype,"globals",[Rl],Object.getOwnPropertyDescriptor(tI.prototype,"globals"),tI.prototype),nI=oe(tI.prototype,"autoReleaseAssets",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),iI=oe(tI.prototype,"_globals",[xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new AA}}),eI=tI))||eI);function sI(e,t){if(!t){var n=s.director.getScene();if(!n)return null;t=n}return t.getChildByPath(e)}s.Scene=cI,s.find=sI;var lI=_t.fastRemoveAt,uI=yn.Flags.IsStartCalled,fI=yn.Flags.IsOnEnableCalled;function _I(e,t){for(var n=t.constructor._executionOrder,i=t._id,o=0,a=e.length-1,r=a>>>1;o<=a;r=o+a>>>1){var c=e[r],s=c.constructor._executionOrder;if(s>n)a=r-1;else if(s<n)o=r+1;else{var l=c._id;if(l>i)a=r-1;else{if(!(l<i))return r;o=r+1}}}return~o}function mI(e,t){for(var n=e.array,i=e.i+1;i<n.length;){var o=n[i];o.node._activeInHierarchy?++i:(e.removeAt(i),t&&(o._objFlags&=~t))}}yn.Flags.IsEditorOnEnableCalled;var pI=function(e){this._zero=void 0,this._neg=void 0,this._pos=void 0,this._invoke=void 0;var t=ge;this._zero=new t([]),this._neg=new t([]),this._pos=new t([]),this._invoke=e};function hI(e,t){return e.constructor._executionOrder-t.constructor._executionOrder}pI.stableRemoveInactive=mI;var dI=function(e){function t(){return e.apply(this,arguments)||this}X(t,e);var n=t.prototype;return n.add=function(e){var t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).array.push(e)},n.remove=function(e){var t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).fastRemove(e)},n.cancelInactive=function(e){mI(this._zero,e),mI(this._neg,e),mI(this._pos,e)},n.invoke=function(){var e=this._neg;e.array.length>0&&(e.array.sort(hI),this._invoke(e),e.array.length=0),this._invoke(this._zero),this._zero.array.length=0;var t=this._pos;t.array.length>0&&(t.array.sort(hI),this._invoke(t),t.array.length=0)},t}(pI),vI=function(e){function t(){return e.apply(this,arguments)||this}X(t,e);var n=t.prototype;return n.add=function(e){var t=e.constructor._executionOrder;if(0===t)this._zero.array.push(e);else{var n=t<0?this._neg.array:this._pos.array,i=_I(n,e);i<0&&n.splice(~i,0,e)}},n.remove=function(e){var t=e.constructor._executionOrder;if(0===t)this._zero.fastRemove(e);else{var n=t<0?this._neg:this._pos,i=_I(n.array,e);i>=0&&n.removeAt(i)}},n.invoke=function(e){this._neg.array.length>0&&this._invoke(this._neg,e),this._invoke(this._zero,e),this._pos.array.length>0&&this._invoke(this._pos,e)},t}(pI);function gI(e,t,n){return function(i,o){try{t(i,o)}catch(t){s._throw(t);var a=i.array;for(n&&(a[i.i]._objFlags|=n),++i.i;i.i<a.length;++i.i)try{e(a[i.i],o)}catch(e){s._throw(e),n&&(a[i.i]._objFlags|=n)}}}}var xI=gI((function(e){e.start(),e._objFlags|=uI}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i){var n=t[e.i];n.start(),n._objFlags|=uI}}),uI),yI=gI((function(e,t){e.update(t)}),(function(e,t){var n=e.array;for(e.i=0;e.i<n.length;++e.i)n[e.i].update(t)})),CI=gI((function(e,t){e.lateUpdate(t)}),(function(e,t){var n=e.array;for(e.i=0;e.i<n.length;++e.i)n[e.i].lateUpdate(t)})),SI=function(e){var t=s.director._compScheduler,n=e.array;for(e.i=0;e.i<n.length;++e.i){var i=n[e.i];i._enabled&&(i.onEnable(),!i.node._activeInHierarchy||t._onEnabled(i))}},EI=(e("fg",function(){function e(){this._deferredComps=[],this.unscheduleAll()}var t=e.prototype;return t.unscheduleAll=function(){this.startInvoker=new dI(xI),this.updateInvoker=new vI(yI),this.lateUpdateInvoker=new vI(CI),this._updating=!1},t._onEnabled=function(e){s.director.getScheduler().resumeTarget(e),e._objFlags|=fI,this._updating?this._deferredComps.push(e):this._scheduleImmediate(e)},t._onDisabled=function(e){s.director.getScheduler().pauseTarget(e),e._objFlags&=~fI;var t=this._deferredComps.indexOf(e);t>=0?lI(this._deferredComps,t):(!e.start||e._objFlags&uI||this.startInvoker.remove(e),e.update&&this.updateInvoker.remove(e),e.lateUpdate&&this.lateUpdateInvoker.remove(e))},t.enableComp=function(e,t){if(!(e._objFlags&fI)){if(e.onEnable){if(t)return void t.add(e);if(e.onEnable(),!e.node._activeInHierarchy)return}this._onEnabled(e)}},t.disableComp=function(e){e._objFlags&fI&&(e.onDisable&&e.onDisable(),this._onDisabled(e))},t.startPhase=function(){this._updating=!0,this.startInvoker.invoke(),this._startForNewComps()},t.updatePhase=function(e){this.updateInvoker.invoke(e)},t.lateUpdatePhase=function(e){this.lateUpdateInvoker.invoke(e),this._updating=!1,this._startForNewComps()},t._startForNewComps=function(){this._deferredComps.length>0&&(this._deferredSchedule(),this.startInvoker.invoke())},t._scheduleImmediate=function(e){"function"!=typeof e.start||e._objFlags&uI||this.startInvoker.add(e),"function"==typeof e.update&&this.updateInvoker.add(e),"function"==typeof e.lateUpdate&&this.lateUpdateInvoker.add(e)},t._deferredSchedule=function(){for(var e=this._deferredComps,t=0,n=e.length;t<n;t++)this._scheduleImmediate(e[t]);e.length=0},e}()),yn.Flags.IsPreloadStarted),TI=yn.Flags.IsOnLoadStarted,AI=yn.Flags.IsOnLoadCalled,II=yn.Flags.Deactivating,bI=function(e){function t(){return e.apply(this,arguments)||this}X(t,e);var n=t.prototype;return n.add=function(e){this._zero.array.push(e)},n.remove=function(e){this._zero.fastRemove(e)},n.cancelInactive=function(e){pI.stableRemoveInactive(this._zero,e)},n.invoke=function(){this._invoke(this._zero),this._zero.array.length=0},t}(pI),PI=gI((function(e){e.__preload()}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i)t[e.i].__preload()})),wI=gI((function(e){e.onLoad(),e._objFlags|=AI}),(function(e){var t=e.array;for(e.i=0;e.i<t.length;++e.i){var n=t[e.i];n.onLoad(),n._objFlags|=AI}}),AI),RI=new ft(4);function NI(e,t,n){N(3817,e.name,n),console.log("Corrupted component value:",t),t?e._removeComponent(t):_t.removeAt(e._components,n)}RI.get=function(){var e=this._get()||{preload:new bI(PI),onLoad:new dI(wI),onEnable:new dI(SI)};e.preload._zero.i=-1;var t=e.onLoad;return t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,(t=e.onEnable)._zero.i=-1,t._neg.i=-1,t._pos.i=-1,e},e("dL",function(){function e(){this.resetComp=void 0,this.reset()}var t=e.prototype;return t.reset=function(){this._activatingStack=[]},t.activateNode=function(e,t){if(t){var n=RI.get();this._activatingStack.push(n),this._activateNodeRecursively(e,n.preload,n.onLoad,n.onEnable),n.preload.invoke(),n.onLoad.invoke(),n.onEnable.invoke(),this._activatingStack.pop(),RI.put(n)}else{this._deactivateNodeRecursively(e);for(var i,o=ne(this._activatingStack);!(i=o()).done;){var a=i.value;a.preload.cancelInactive(EI),a.onLoad.cancelInactive(TI),a.onEnable.cancelInactive()}}e.emit(Pg.ACTIVE_IN_HIERARCHY_CHANGED,e)},t.activateComp=function(e,t,n,i){if(Sn(e,!0)&&(e._objFlags&EI||(e._objFlags|=EI,e.__preload&&(t?t.add(e):e.__preload())),e._objFlags&TI||(e._objFlags|=TI,e.onLoad?n?n.add(e):(e.onLoad(),e._objFlags|=AI):e._objFlags|=AI),e._enabled)){if(!e.node._activeInHierarchy)return;s.director._compScheduler.enableComp(e,i)}},t.destroyComp=function(e){s.director._compScheduler.disableComp(e),e.onDestroy&&e._objFlags&AI&&e.onDestroy()},t._activateNodeRecursively=function(e,t,n,i){if(e._objFlags&II)N(3816,e.name);else{e._activeInHierarchy=!0;for(var o=e._components.length,a=0;a<o;++a){var r=e._components[a];r instanceof s.Component?this.activateComp(r,t,n,i):(NI(e,r,a),--a,--o)}for(var c=0,l=e._children.length;c<l;++c){var u=e._children[c];u._active&&this._activateNodeRecursively(u,t,n,i)}e._onPostActivated(!0)}},t._deactivateNodeRecursively=function(e){e._objFlags|=II,e._activeInHierarchy=!1;for(var t=e._components.length,n=0;n<t;++n){var i=e._components[n];if(i._enabled&&(s.director._compScheduler.disableComp(i),e._activeInHierarchy))return void(e._objFlags&=~II)}for(var o=0,a=e._children.length;o<a;++o){var r=e._children[o];if(r._activeInHierarchy&&(this._deactivateNodeRecursively(r),e._activeInHierarchy))return void(e._objFlags&=~II)}e._onPostActivated(!1),e._objFlags&=~II},e}());var DI,OI,MI,zI,LI,FI,UI,BI,GI=e("dh",ml("cc.SceneAsset")((zI=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"scene",MI,ee(t)),t}X(t,e);var n=t.prototype;return n.initDefault=function(t){e.prototype.initDefault.call(this,t),this.scene=new cI("New Scene")},n.validate=function(){return!!this.scene},t}(Fu),MI=oe((OI=zI).prototype,"scene",[Rl,xl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),DI=OI))||DI);s.SceneAsset=GI;var kI,HI,jI,VI,qI=e("di",ml("cc.TextAsset")((BI=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"text",UI,ee(t)),t}return X(t,e),t.prototype.toString=function(){return this.text},t}(Fu),UI=oe((FI=BI).prototype,"text",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),LI=FI))||LI);s.TextAsset=qI;var WI=e("dj",ml("cc.JsonAsset")((VI=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"json",jI,ee(t)),t}return X(t,e),t}(Fu),jI=oe((HI=VI).prototype,"json",[xl,Rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),kI=HI))||kI);s.JsonAsset=WI}}}));
